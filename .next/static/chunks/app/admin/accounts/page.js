/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["app/admin/accounts/page"],{

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%2FUsers%2Fwx%2FDesktop%2Fweb%2Fnewbuild%2Fapp%2Fadmin%2Faccounts%2Fpage.tsx&server=false!":
/*!********************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%2FUsers%2Fwx%2FDesktop%2Fweb%2Fnewbuild%2Fapp%2Fadmin%2Faccounts%2Fpage.tsx&server=false! ***!
  \********************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./app/admin/accounts/page.tsx */ \"(app-pages-browser)/./app/admin/accounts/page.tsx\"))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz0lMkZVc2VycyUyRnd4JTJGRGVza3RvcCUyRndlYiUyRm5ld2J1aWxkJTJGYXBwJTJGYWRtaW4lMkZhY2NvdW50cyUyRnBhZ2UudHN4JnNlcnZlcj1mYWxzZSEiLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLz84OTQ0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL1VzZXJzL3d4L0Rlc2t0b3Avd2ViL25ld2J1aWxkL2FwcC9hZG1pbi9hY2NvdW50cy9wYWdlLnRzeFwiKSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%2FUsers%2Fwx%2FDesktop%2Fweb%2Fnewbuild%2Fapp%2Fadmin%2Faccounts%2Fpage.tsx&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/fflate/esm/browser.js":
/*!********************************************!*\
  !*** ./node_modules/fflate/esm/browser.js ***!
  \********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AsyncCompress: function() { return /* binding */ AsyncGzip; },\n/* harmony export */   AsyncDecompress: function() { return /* binding */ AsyncDecompress; },\n/* harmony export */   AsyncDeflate: function() { return /* binding */ AsyncDeflate; },\n/* harmony export */   AsyncGunzip: function() { return /* binding */ AsyncGunzip; },\n/* harmony export */   AsyncGzip: function() { return /* binding */ AsyncGzip; },\n/* harmony export */   AsyncInflate: function() { return /* binding */ AsyncInflate; },\n/* harmony export */   AsyncUnzipInflate: function() { return /* binding */ AsyncUnzipInflate; },\n/* harmony export */   AsyncUnzlib: function() { return /* binding */ AsyncUnzlib; },\n/* harmony export */   AsyncZipDeflate: function() { return /* binding */ AsyncZipDeflate; },\n/* harmony export */   AsyncZlib: function() { return /* binding */ AsyncZlib; },\n/* harmony export */   Compress: function() { return /* binding */ Gzip; },\n/* harmony export */   DecodeUTF8: function() { return /* binding */ DecodeUTF8; },\n/* harmony export */   Decompress: function() { return /* binding */ Decompress; },\n/* harmony export */   Deflate: function() { return /* binding */ Deflate; },\n/* harmony export */   EncodeUTF8: function() { return /* binding */ EncodeUTF8; },\n/* harmony export */   FlateErrorCode: function() { return /* binding */ FlateErrorCode; },\n/* harmony export */   Gunzip: function() { return /* binding */ Gunzip; },\n/* harmony export */   Gzip: function() { return /* binding */ Gzip; },\n/* harmony export */   Inflate: function() { return /* binding */ Inflate; },\n/* harmony export */   Unzip: function() { return /* binding */ Unzip; },\n/* harmony export */   UnzipInflate: function() { return /* binding */ UnzipInflate; },\n/* harmony export */   UnzipPassThrough: function() { return /* binding */ UnzipPassThrough; },\n/* harmony export */   Unzlib: function() { return /* binding */ Unzlib; },\n/* harmony export */   Zip: function() { return /* binding */ Zip; },\n/* harmony export */   ZipDeflate: function() { return /* binding */ ZipDeflate; },\n/* harmony export */   ZipPassThrough: function() { return /* binding */ ZipPassThrough; },\n/* harmony export */   Zlib: function() { return /* binding */ Zlib; },\n/* harmony export */   compress: function() { return /* binding */ gzip; },\n/* harmony export */   compressSync: function() { return /* binding */ gzipSync; },\n/* harmony export */   decompress: function() { return /* binding */ decompress; },\n/* harmony export */   decompressSync: function() { return /* binding */ decompressSync; },\n/* harmony export */   deflate: function() { return /* binding */ deflate; },\n/* harmony export */   deflateSync: function() { return /* binding */ deflateSync; },\n/* harmony export */   gunzip: function() { return /* binding */ gunzip; },\n/* harmony export */   gunzipSync: function() { return /* binding */ gunzipSync; },\n/* harmony export */   gzip: function() { return /* binding */ gzip; },\n/* harmony export */   gzipSync: function() { return /* binding */ gzipSync; },\n/* harmony export */   inflate: function() { return /* binding */ inflate; },\n/* harmony export */   inflateSync: function() { return /* binding */ inflateSync; },\n/* harmony export */   strFromU8: function() { return /* binding */ strFromU8; },\n/* harmony export */   strToU8: function() { return /* binding */ strToU8; },\n/* harmony export */   unzip: function() { return /* binding */ unzip; },\n/* harmony export */   unzipSync: function() { return /* binding */ unzipSync; },\n/* harmony export */   unzlib: function() { return /* binding */ unzlib; },\n/* harmony export */   unzlibSync: function() { return /* binding */ unzlibSync; },\n/* harmony export */   zip: function() { return /* binding */ zip; },\n/* harmony export */   zipSync: function() { return /* binding */ zipSync; },\n/* harmony export */   zlib: function() { return /* binding */ zlib; },\n/* harmony export */   zlibSync: function() { return /* binding */ zlibSync; }\n/* harmony export */ });\n// DEFLATE is a complex format; to read this code, you should probably check the RFC first:\n// https://tools.ietf.org/html/rfc1951\n// You may also wish to take a look at the guide I made about this program:\n// https://gist.github.com/101arrowz/253f31eb5abc3d9275ab943003ffecad\n// Some of the following code is similar to that of UZIP.js:\n// https://github.com/photopea/UZIP.js\n// However, the vast majority of the codebase has diverged from UZIP.js to increase performance and reduce bundle size.\n// Sometimes 0 will appear where -1 would be more appropriate. This is because using a uint\n// is better for memory in most engines (I *think*).\nvar ch2 = {};\nvar wk = function(c, id, msg, transfer, cb) {\n    var w = new Worker(ch2[id] || (ch2[id] = URL.createObjectURL(new Blob([\n        c + ';addEventListener(\"error\",function(e){e=e.error;postMessage({$e$:[e.message,e.code,e.stack]})})'\n    ], {\n        type: \"text/javascript\"\n    }))));\n    w.onmessage = function(e) {\n        var d = e.data, ed = d.$e$;\n        if (ed) {\n            var err = new Error(ed[0]);\n            err[\"code\"] = ed[1];\n            err.stack = ed[2];\n            cb(err, null);\n        } else cb(null, d);\n    };\n    w.postMessage(msg, transfer);\n    return w;\n};\n// aliases for shorter compressed code (most minifers don't do this)\nvar u8 = Uint8Array, u16 = Uint16Array, i32 = Int32Array;\n// fixed length extra bits\nvar fleb = new u8([\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    1,\n    1,\n    1,\n    1,\n    2,\n    2,\n    2,\n    2,\n    3,\n    3,\n    3,\n    3,\n    4,\n    4,\n    4,\n    4,\n    5,\n    5,\n    5,\n    5,\n    0,\n    /* unused */ 0,\n    0,\n    /* impossible */ 0\n]);\n// fixed distance extra bits\nvar fdeb = new u8([\n    0,\n    0,\n    0,\n    0,\n    1,\n    1,\n    2,\n    2,\n    3,\n    3,\n    4,\n    4,\n    5,\n    5,\n    6,\n    6,\n    7,\n    7,\n    8,\n    8,\n    9,\n    9,\n    10,\n    10,\n    11,\n    11,\n    12,\n    12,\n    13,\n    13,\n    /* unused */ 0,\n    0\n]);\n// code length index map\nvar clim = new u8([\n    16,\n    17,\n    18,\n    0,\n    8,\n    7,\n    9,\n    6,\n    10,\n    5,\n    11,\n    4,\n    12,\n    3,\n    13,\n    2,\n    14,\n    1,\n    15\n]);\n// get base, reverse index map from extra bits\nvar freb = function(eb, start) {\n    var b = new u16(31);\n    for(var i = 0; i < 31; ++i){\n        b[i] = start += 1 << eb[i - 1];\n    }\n    // numbers here are at max 18 bits\n    var r = new i32(b[30]);\n    for(var i = 1; i < 30; ++i){\n        for(var j = b[i]; j < b[i + 1]; ++j){\n            r[j] = j - b[i] << 5 | i;\n        }\n    }\n    return {\n        b: b,\n        r: r\n    };\n};\nvar _a = freb(fleb, 2), fl = _a.b, revfl = _a.r;\n// we can ignore the fact that the other numbers are wrong; they never happen anyway\nfl[28] = 258, revfl[258] = 28;\nvar _b = freb(fdeb, 0), fd = _b.b, revfd = _b.r;\n// map of value to reverse (assuming 16 bits)\nvar rev = new u16(32768);\nfor(var i = 0; i < 32768; ++i){\n    // reverse table algorithm from SO\n    var x = (i & 0xAAAA) >> 1 | (i & 0x5555) << 1;\n    x = (x & 0xCCCC) >> 2 | (x & 0x3333) << 2;\n    x = (x & 0xF0F0) >> 4 | (x & 0x0F0F) << 4;\n    rev[i] = ((x & 0xFF00) >> 8 | (x & 0x00FF) << 8) >> 1;\n}\n// create huffman tree from u8 \"map\": index -> code length for code index\n// mb (max bits) must be at most 15\n// TODO: optimize/split up?\nvar hMap = function(cd, mb, r) {\n    var s = cd.length;\n    // index\n    var i = 0;\n    // u16 \"map\": index -> # of codes with bit length = index\n    var l = new u16(mb);\n    // length of cd must be 288 (total # of codes)\n    for(; i < s; ++i){\n        if (cd[i]) ++l[cd[i] - 1];\n    }\n    // u16 \"map\": index -> minimum code for bit length = index\n    var le = new u16(mb);\n    for(i = 1; i < mb; ++i){\n        le[i] = le[i - 1] + l[i - 1] << 1;\n    }\n    var co;\n    if (r) {\n        // u16 \"map\": index -> number of actual bits, symbol for code\n        co = new u16(1 << mb);\n        // bits to remove for reverser\n        var rvb = 15 - mb;\n        for(i = 0; i < s; ++i){\n            // ignore 0 lengths\n            if (cd[i]) {\n                // num encoding both symbol and bits read\n                var sv = i << 4 | cd[i];\n                // free bits\n                var r_1 = mb - cd[i];\n                // start value\n                var v = le[cd[i] - 1]++ << r_1;\n                // m is end value\n                for(var m = v | (1 << r_1) - 1; v <= m; ++v){\n                    // every 16 bit value starting with the code yields the same result\n                    co[rev[v] >> rvb] = sv;\n                }\n            }\n        }\n    } else {\n        co = new u16(s);\n        for(i = 0; i < s; ++i){\n            if (cd[i]) {\n                co[i] = rev[le[cd[i] - 1]++] >> 15 - cd[i];\n            }\n        }\n    }\n    return co;\n};\n// fixed length tree\nvar flt = new u8(288);\nfor(var i = 0; i < 144; ++i)flt[i] = 8;\nfor(var i = 144; i < 256; ++i)flt[i] = 9;\nfor(var i = 256; i < 280; ++i)flt[i] = 7;\nfor(var i = 280; i < 288; ++i)flt[i] = 8;\n// fixed distance tree\nvar fdt = new u8(32);\nfor(var i = 0; i < 32; ++i)fdt[i] = 5;\n// fixed length map\nvar flm = /*#__PURE__*/ hMap(flt, 9, 0), flrm = /*#__PURE__*/ hMap(flt, 9, 1);\n// fixed distance map\nvar fdm = /*#__PURE__*/ hMap(fdt, 5, 0), fdrm = /*#__PURE__*/ hMap(fdt, 5, 1);\n// find max of array\nvar max = function(a) {\n    var m = a[0];\n    for(var i = 1; i < a.length; ++i){\n        if (a[i] > m) m = a[i];\n    }\n    return m;\n};\n// read d, starting at bit p and mask with m\nvar bits = function(d, p, m) {\n    var o = p / 8 | 0;\n    return (d[o] | d[o + 1] << 8) >> (p & 7) & m;\n};\n// read d, starting at bit p continuing for at least 16 bits\nvar bits16 = function(d, p) {\n    var o = p / 8 | 0;\n    return (d[o] | d[o + 1] << 8 | d[o + 2] << 16) >> (p & 7);\n};\n// get end of byte\nvar shft = function(p) {\n    return (p + 7) / 8 | 0;\n};\n// typed array slice - allows garbage collector to free original reference,\n// while being more compatible than .slice\nvar slc = function(v, s, e) {\n    if (s == null || s < 0) s = 0;\n    if (e == null || e > v.length) e = v.length;\n    // can't use .constructor in case user-supplied\n    return new u8(v.subarray(s, e));\n};\n/**\n * Codes for errors generated within this library\n */ var FlateErrorCode = {\n    UnexpectedEOF: 0,\n    InvalidBlockType: 1,\n    InvalidLengthLiteral: 2,\n    InvalidDistance: 3,\n    StreamFinished: 4,\n    NoStreamHandler: 5,\n    InvalidHeader: 6,\n    NoCallback: 7,\n    InvalidUTF8: 8,\n    ExtraFieldTooLong: 9,\n    InvalidDate: 10,\n    FilenameTooLong: 11,\n    StreamFinishing: 12,\n    InvalidZipData: 13,\n    UnknownCompressionMethod: 14\n};\n// error codes\nvar ec = [\n    \"unexpected EOF\",\n    \"invalid block type\",\n    \"invalid length/literal\",\n    \"invalid distance\",\n    \"stream finished\",\n    \"no stream handler\",\n    ,\n    \"no callback\",\n    \"invalid UTF-8 data\",\n    \"extra field too long\",\n    \"date not in range 1980-2099\",\n    \"filename too long\",\n    \"stream finishing\",\n    \"invalid zip data\"\n];\n;\nvar err = function(ind, msg, nt) {\n    var e = new Error(msg || ec[ind]);\n    e.code = ind;\n    if (Error.captureStackTrace) Error.captureStackTrace(e, err);\n    if (!nt) throw e;\n    return e;\n};\n// expands raw DEFLATE data\nvar inflt = function(dat, st, buf, dict) {\n    // source length       dict length\n    var sl = dat.length, dl = dict ? dict.length : 0;\n    if (!sl || st.f && !st.l) return buf || new u8(0);\n    var noBuf = !buf;\n    // have to estimate size\n    var resize = noBuf || st.i != 2;\n    // no state\n    var noSt = st.i;\n    // Assumes roughly 33% compression ratio average\n    if (noBuf) buf = new u8(sl * 3);\n    // ensure buffer can fit at least l elements\n    var cbuf = function(l) {\n        var bl = buf.length;\n        // need to increase size to fit\n        if (l > bl) {\n            // Double or set to necessary, whichever is greater\n            var nbuf = new u8(Math.max(bl * 2, l));\n            nbuf.set(buf);\n            buf = nbuf;\n        }\n    };\n    //  last chunk         bitpos           bytes\n    var final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;\n    // total bits\n    var tbts = sl * 8;\n    do {\n        if (!lm) {\n            // BFINAL - this is only 1 when last chunk is next\n            final = bits(dat, pos, 1);\n            // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman\n            var type = bits(dat, pos + 1, 3);\n            pos += 3;\n            if (!type) {\n                // go to end of byte boundary\n                var s = shft(pos) + 4, l = dat[s - 4] | dat[s - 3] << 8, t = s + l;\n                if (t > sl) {\n                    if (noSt) err(0);\n                    break;\n                }\n                // ensure size\n                if (resize) cbuf(bt + l);\n                // Copy over uncompressed data\n                buf.set(dat.subarray(s, t), bt);\n                // Get new bitpos, update byte count\n                st.b = bt += l, st.p = pos = t * 8, st.f = final;\n                continue;\n            } else if (type == 1) lm = flrm, dm = fdrm, lbt = 9, dbt = 5;\n            else if (type == 2) {\n                //  literal                            lengths\n                var hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;\n                var tl = hLit + bits(dat, pos + 5, 31) + 1;\n                pos += 14;\n                // length+distance tree\n                var ldt = new u8(tl);\n                // code length tree\n                var clt = new u8(19);\n                for(var i = 0; i < hcLen; ++i){\n                    // use index map to get real code\n                    clt[clim[i]] = bits(dat, pos + i * 3, 7);\n                }\n                pos += hcLen * 3;\n                // code lengths bits\n                var clb = max(clt), clbmsk = (1 << clb) - 1;\n                // code lengths map\n                var clm = hMap(clt, clb, 1);\n                for(var i = 0; i < tl;){\n                    var r = clm[bits(dat, pos, clbmsk)];\n                    // bits read\n                    pos += r & 15;\n                    // symbol\n                    var s = r >> 4;\n                    // code length to copy\n                    if (s < 16) {\n                        ldt[i++] = s;\n                    } else {\n                        //  copy   count\n                        var c = 0, n = 0;\n                        if (s == 16) n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];\n                        else if (s == 17) n = 3 + bits(dat, pos, 7), pos += 3;\n                        else if (s == 18) n = 11 + bits(dat, pos, 127), pos += 7;\n                        while(n--)ldt[i++] = c;\n                    }\n                }\n                //    length tree                 distance tree\n                var lt = ldt.subarray(0, hLit), dt = ldt.subarray(hLit);\n                // max length bits\n                lbt = max(lt);\n                // max dist bits\n                dbt = max(dt);\n                lm = hMap(lt, lbt, 1);\n                dm = hMap(dt, dbt, 1);\n            } else err(1);\n            if (pos > tbts) {\n                if (noSt) err(0);\n                break;\n            }\n        }\n        // Make sure the buffer can hold this + the largest possible addition\n        // Maximum chunk size (practically, theoretically infinite) is 2^17\n        if (resize) cbuf(bt + 131072);\n        var lms = (1 << lbt) - 1, dms = (1 << dbt) - 1;\n        var lpos = pos;\n        for(;; lpos = pos){\n            // bits read, code\n            var c = lm[bits16(dat, pos) & lms], sym = c >> 4;\n            pos += c & 15;\n            if (pos > tbts) {\n                if (noSt) err(0);\n                break;\n            }\n            if (!c) err(2);\n            if (sym < 256) buf[bt++] = sym;\n            else if (sym == 256) {\n                lpos = pos, lm = null;\n                break;\n            } else {\n                var add = sym - 254;\n                // no extra bits needed if less\n                if (sym > 264) {\n                    // index\n                    var i = sym - 257, b = fleb[i];\n                    add = bits(dat, pos, (1 << b) - 1) + fl[i];\n                    pos += b;\n                }\n                // dist\n                var d = dm[bits16(dat, pos) & dms], dsym = d >> 4;\n                if (!d) err(3);\n                pos += d & 15;\n                var dt = fd[dsym];\n                if (dsym > 3) {\n                    var b = fdeb[dsym];\n                    dt += bits16(dat, pos) & (1 << b) - 1, pos += b;\n                }\n                if (pos > tbts) {\n                    if (noSt) err(0);\n                    break;\n                }\n                if (resize) cbuf(bt + 131072);\n                var end = bt + add;\n                if (bt < dt) {\n                    var shift = dl - dt, dend = Math.min(dt, end);\n                    if (shift + bt < 0) err(3);\n                    for(; bt < dend; ++bt)buf[bt] = dict[shift + bt];\n                }\n                for(; bt < end; ++bt)buf[bt] = buf[bt - dt];\n            }\n        }\n        st.l = lm, st.p = lpos, st.b = bt, st.f = final;\n        if (lm) final = 1, st.m = lbt, st.d = dm, st.n = dbt;\n    }while (!final);\n    // don't reallocate for streams or user buffers\n    return bt != buf.length && noBuf ? slc(buf, 0, bt) : buf.subarray(0, bt);\n};\n// starting at p, write the minimum number of bits that can hold v to d\nvar wbits = function(d, p, v) {\n    v <<= p & 7;\n    var o = p / 8 | 0;\n    d[o] |= v;\n    d[o + 1] |= v >> 8;\n};\n// starting at p, write the minimum number of bits (>8) that can hold v to d\nvar wbits16 = function(d, p, v) {\n    v <<= p & 7;\n    var o = p / 8 | 0;\n    d[o] |= v;\n    d[o + 1] |= v >> 8;\n    d[o + 2] |= v >> 16;\n};\n// creates code lengths from a frequency table\nvar hTree = function(d, mb) {\n    // Need extra info to make a tree\n    var t = [];\n    for(var i = 0; i < d.length; ++i){\n        if (d[i]) t.push({\n            s: i,\n            f: d[i]\n        });\n    }\n    var s = t.length;\n    var t2 = t.slice();\n    if (!s) return {\n        t: et,\n        l: 0\n    };\n    if (s == 1) {\n        var v = new u8(t[0].s + 1);\n        v[t[0].s] = 1;\n        return {\n            t: v,\n            l: 1\n        };\n    }\n    t.sort(function(a, b) {\n        return a.f - b.f;\n    });\n    // after i2 reaches last ind, will be stopped\n    // freq must be greater than largest possible number of symbols\n    t.push({\n        s: -1,\n        f: 25001\n    });\n    var l = t[0], r = t[1], i0 = 0, i1 = 1, i2 = 2;\n    t[0] = {\n        s: -1,\n        f: l.f + r.f,\n        l: l,\n        r: r\n    };\n    // efficient algorithm from UZIP.js\n    // i0 is lookbehind, i2 is lookahead - after processing two low-freq\n    // symbols that combined have high freq, will start processing i2 (high-freq,\n    // non-composite) symbols instead\n    // see https://reddit.com/r/photopea/comments/ikekht/uzipjs_questions/\n    while(i1 != s - 1){\n        l = t[t[i0].f < t[i2].f ? i0++ : i2++];\n        r = t[i0 != i1 && t[i0].f < t[i2].f ? i0++ : i2++];\n        t[i1++] = {\n            s: -1,\n            f: l.f + r.f,\n            l: l,\n            r: r\n        };\n    }\n    var maxSym = t2[0].s;\n    for(var i = 1; i < s; ++i){\n        if (t2[i].s > maxSym) maxSym = t2[i].s;\n    }\n    // code lengths\n    var tr = new u16(maxSym + 1);\n    // max bits in tree\n    var mbt = ln(t[i1 - 1], tr, 0);\n    if (mbt > mb) {\n        // more algorithms from UZIP.js\n        // TODO: find out how this code works (debt)\n        //  ind    debt\n        var i = 0, dt = 0;\n        //    left            cost\n        var lft = mbt - mb, cst = 1 << lft;\n        t2.sort(function(a, b) {\n            return tr[b.s] - tr[a.s] || a.f - b.f;\n        });\n        for(; i < s; ++i){\n            var i2_1 = t2[i].s;\n            if (tr[i2_1] > mb) {\n                dt += cst - (1 << mbt - tr[i2_1]);\n                tr[i2_1] = mb;\n            } else break;\n        }\n        dt >>= lft;\n        while(dt > 0){\n            var i2_2 = t2[i].s;\n            if (tr[i2_2] < mb) dt -= 1 << mb - tr[i2_2]++ - 1;\n            else ++i;\n        }\n        for(; i >= 0 && dt; --i){\n            var i2_3 = t2[i].s;\n            if (tr[i2_3] == mb) {\n                --tr[i2_3];\n                ++dt;\n            }\n        }\n        mbt = mb;\n    }\n    return {\n        t: new u8(tr),\n        l: mbt\n    };\n};\n// get the max length and assign length codes\nvar ln = function(n, l, d) {\n    return n.s == -1 ? Math.max(ln(n.l, l, d + 1), ln(n.r, l, d + 1)) : l[n.s] = d;\n};\n// length codes generation\nvar lc = function(c) {\n    var s = c.length;\n    // Note that the semicolon was intentional\n    while(s && !c[--s]);\n    var cl = new u16(++s);\n    //  ind      num         streak\n    var cli = 0, cln = c[0], cls = 1;\n    var w = function(v) {\n        cl[cli++] = v;\n    };\n    for(var i = 1; i <= s; ++i){\n        if (c[i] == cln && i != s) ++cls;\n        else {\n            if (!cln && cls > 2) {\n                for(; cls > 138; cls -= 138)w(32754);\n                if (cls > 2) {\n                    w(cls > 10 ? cls - 11 << 5 | 28690 : cls - 3 << 5 | 12305);\n                    cls = 0;\n                }\n            } else if (cls > 3) {\n                w(cln), --cls;\n                for(; cls > 6; cls -= 6)w(8304);\n                if (cls > 2) w(cls - 3 << 5 | 8208), cls = 0;\n            }\n            while(cls--)w(cln);\n            cls = 1;\n            cln = c[i];\n        }\n    }\n    return {\n        c: cl.subarray(0, cli),\n        n: s\n    };\n};\n// calculate the length of output from tree, code lengths\nvar clen = function(cf, cl) {\n    var l = 0;\n    for(var i = 0; i < cl.length; ++i)l += cf[i] * cl[i];\n    return l;\n};\n// writes a fixed block\n// returns the new bit pos\nvar wfblk = function(out, pos, dat) {\n    // no need to write 00 as type: TypedArray defaults to 0\n    var s = dat.length;\n    var o = shft(pos + 2);\n    out[o] = s & 255;\n    out[o + 1] = s >> 8;\n    out[o + 2] = out[o] ^ 255;\n    out[o + 3] = out[o + 1] ^ 255;\n    for(var i = 0; i < s; ++i)out[o + i + 4] = dat[i];\n    return (o + 4 + s) * 8;\n};\n// writes a block\nvar wblk = function(dat, out, final, syms, lf, df, eb, li, bs, bl, p) {\n    wbits(out, p++, final);\n    ++lf[256];\n    var _a = hTree(lf, 15), dlt = _a.t, mlb = _a.l;\n    var _b = hTree(df, 15), ddt = _b.t, mdb = _b.l;\n    var _c = lc(dlt), lclt = _c.c, nlc = _c.n;\n    var _d = lc(ddt), lcdt = _d.c, ndc = _d.n;\n    var lcfreq = new u16(19);\n    for(var i = 0; i < lclt.length; ++i)++lcfreq[lclt[i] & 31];\n    for(var i = 0; i < lcdt.length; ++i)++lcfreq[lcdt[i] & 31];\n    var _e = hTree(lcfreq, 7), lct = _e.t, mlcb = _e.l;\n    var nlcc = 19;\n    for(; nlcc > 4 && !lct[clim[nlcc - 1]]; --nlcc);\n    var flen = bl + 5 << 3;\n    var ftlen = clen(lf, flt) + clen(df, fdt) + eb;\n    var dtlen = clen(lf, dlt) + clen(df, ddt) + eb + 14 + 3 * nlcc + clen(lcfreq, lct) + 2 * lcfreq[16] + 3 * lcfreq[17] + 7 * lcfreq[18];\n    if (bs >= 0 && flen <= ftlen && flen <= dtlen) return wfblk(out, p, dat.subarray(bs, bs + bl));\n    var lm, ll, dm, dl;\n    wbits(out, p, 1 + (dtlen < ftlen)), p += 2;\n    if (dtlen < ftlen) {\n        lm = hMap(dlt, mlb, 0), ll = dlt, dm = hMap(ddt, mdb, 0), dl = ddt;\n        var llm = hMap(lct, mlcb, 0);\n        wbits(out, p, nlc - 257);\n        wbits(out, p + 5, ndc - 1);\n        wbits(out, p + 10, nlcc - 4);\n        p += 14;\n        for(var i = 0; i < nlcc; ++i)wbits(out, p + 3 * i, lct[clim[i]]);\n        p += 3 * nlcc;\n        var lcts = [\n            lclt,\n            lcdt\n        ];\n        for(var it = 0; it < 2; ++it){\n            var clct = lcts[it];\n            for(var i = 0; i < clct.length; ++i){\n                var len = clct[i] & 31;\n                wbits(out, p, llm[len]), p += lct[len];\n                if (len > 15) wbits(out, p, clct[i] >> 5 & 127), p += clct[i] >> 12;\n            }\n        }\n    } else {\n        lm = flm, ll = flt, dm = fdm, dl = fdt;\n    }\n    for(var i = 0; i < li; ++i){\n        var sym = syms[i];\n        if (sym > 255) {\n            var len = sym >> 18 & 31;\n            wbits16(out, p, lm[len + 257]), p += ll[len + 257];\n            if (len > 7) wbits(out, p, sym >> 23 & 31), p += fleb[len];\n            var dst = sym & 31;\n            wbits16(out, p, dm[dst]), p += dl[dst];\n            if (dst > 3) wbits16(out, p, sym >> 5 & 8191), p += fdeb[dst];\n        } else {\n            wbits16(out, p, lm[sym]), p += ll[sym];\n        }\n    }\n    wbits16(out, p, lm[256]);\n    return p + ll[256];\n};\n// deflate options (nice << 13) | chain\nvar deo = /*#__PURE__*/ new i32([\n    65540,\n    131080,\n    131088,\n    131104,\n    262176,\n    1048704,\n    1048832,\n    2114560,\n    2117632\n]);\n// empty\nvar et = /*#__PURE__*/ new u8(0);\n// compresses data into a raw DEFLATE buffer\nvar dflt = function(dat, lvl, plvl, pre, post, st) {\n    var s = st.z || dat.length;\n    var o = new u8(pre + s + 5 * (1 + Math.ceil(s / 7000)) + post);\n    // writing to this writes to the output buffer\n    var w = o.subarray(pre, o.length - post);\n    var lst = st.l;\n    var pos = (st.r || 0) & 7;\n    if (lvl) {\n        if (pos) w[0] = st.r >> 3;\n        var opt = deo[lvl - 1];\n        var n = opt >> 13, c = opt & 8191;\n        var msk_1 = (1 << plvl) - 1;\n        //    prev 2-byte val map    curr 2-byte val map\n        var prev = st.p || new u16(32768), head = st.h || new u16(msk_1 + 1);\n        var bs1_1 = Math.ceil(plvl / 3), bs2_1 = 2 * bs1_1;\n        var hsh = function(i) {\n            return (dat[i] ^ dat[i + 1] << bs1_1 ^ dat[i + 2] << bs2_1) & msk_1;\n        };\n        // 24576 is an arbitrary number of maximum symbols per block\n        // 424 buffer for last block\n        var syms = new i32(25000);\n        // length/literal freq   distance freq\n        var lf = new u16(288), df = new u16(32);\n        //  l/lcnt  exbits  index          l/lind  waitdx          blkpos\n        var lc_1 = 0, eb = 0, i = st.i || 0, li = 0, wi = st.w || 0, bs = 0;\n        for(; i + 2 < s; ++i){\n            // hash value\n            var hv = hsh(i);\n            // index mod 32768    previous index mod\n            var imod = i & 32767, pimod = head[hv];\n            prev[imod] = pimod;\n            head[hv] = imod;\n            // We always should modify head and prev, but only add symbols if\n            // this data is not yet processed (\"wait\" for wait index)\n            if (wi <= i) {\n                // bytes remaining\n                var rem = s - i;\n                if ((lc_1 > 7000 || li > 24576) && (rem > 423 || !lst)) {\n                    pos = wblk(dat, w, 0, syms, lf, df, eb, li, bs, i - bs, pos);\n                    li = lc_1 = eb = 0, bs = i;\n                    for(var j = 0; j < 286; ++j)lf[j] = 0;\n                    for(var j = 0; j < 30; ++j)df[j] = 0;\n                }\n                //  len    dist   chain\n                var l = 2, d = 0, ch_1 = c, dif = imod - pimod & 32767;\n                if (rem > 2 && hv == hsh(i - dif)) {\n                    var maxn = Math.min(n, rem) - 1;\n                    var maxd = Math.min(32767, i);\n                    // max possible length\n                    // not capped at dif because decompressors implement \"rolling\" index population\n                    var ml = Math.min(258, rem);\n                    while(dif <= maxd && --ch_1 && imod != pimod){\n                        if (dat[i + l] == dat[i + l - dif]) {\n                            var nl = 0;\n                            for(; nl < ml && dat[i + nl] == dat[i + nl - dif]; ++nl);\n                            if (nl > l) {\n                                l = nl, d = dif;\n                                // break out early when we reach \"nice\" (we are satisfied enough)\n                                if (nl > maxn) break;\n                                // now, find the rarest 2-byte sequence within this\n                                // length of literals and search for that instead.\n                                // Much faster than just using the start\n                                var mmd = Math.min(dif, nl - 2);\n                                var md = 0;\n                                for(var j = 0; j < mmd; ++j){\n                                    var ti = i - dif + j & 32767;\n                                    var pti = prev[ti];\n                                    var cd = ti - pti & 32767;\n                                    if (cd > md) md = cd, pimod = ti;\n                                }\n                            }\n                        }\n                        // check the previous match\n                        imod = pimod, pimod = prev[imod];\n                        dif += imod - pimod & 32767;\n                    }\n                }\n                // d will be nonzero only when a match was found\n                if (d) {\n                    // store both dist and len data in one int32\n                    // Make sure this is recognized as a len/dist with 28th bit (2^28)\n                    syms[li++] = 268435456 | revfl[l] << 18 | revfd[d];\n                    var lin = revfl[l] & 31, din = revfd[d] & 31;\n                    eb += fleb[lin] + fdeb[din];\n                    ++lf[257 + lin];\n                    ++df[din];\n                    wi = i + l;\n                    ++lc_1;\n                } else {\n                    syms[li++] = dat[i];\n                    ++lf[dat[i]];\n                }\n            }\n        }\n        for(i = Math.max(i, wi); i < s; ++i){\n            syms[li++] = dat[i];\n            ++lf[dat[i]];\n        }\n        pos = wblk(dat, w, lst, syms, lf, df, eb, li, bs, i - bs, pos);\n        if (!lst) {\n            st.r = pos & 7 | w[pos / 8 | 0] << 3;\n            // shft(pos) now 1 less if pos & 7 != 0\n            pos -= 7;\n            st.h = head, st.p = prev, st.i = i, st.w = wi;\n        }\n    } else {\n        for(var i = st.w || 0; i < s + lst; i += 65535){\n            // end\n            var e = i + 65535;\n            if (e >= s) {\n                // write final block\n                w[pos / 8 | 0] = lst;\n                e = s;\n            }\n            pos = wfblk(w, pos + 1, dat.subarray(i, e));\n        }\n        st.i = s;\n    }\n    return slc(o, 0, pre + shft(pos) + post);\n};\n// CRC32 table\nvar crct = /*#__PURE__*/ function() {\n    var t = new Int32Array(256);\n    for(var i = 0; i < 256; ++i){\n        var c = i, k = 9;\n        while(--k)c = (c & 1 && -306674912) ^ c >>> 1;\n        t[i] = c;\n    }\n    return t;\n}();\n// CRC32\nvar crc = function() {\n    var c = -1;\n    return {\n        p: function(d) {\n            // closures have awful performance\n            var cr = c;\n            for(var i = 0; i < d.length; ++i)cr = crct[cr & 255 ^ d[i]] ^ cr >>> 8;\n            c = cr;\n        },\n        d: function() {\n            return ~c;\n        }\n    };\n};\n// Adler32\nvar adler = function() {\n    var a = 1, b = 0;\n    return {\n        p: function(d) {\n            // closures have awful performance\n            var n = a, m = b;\n            var l = d.length | 0;\n            for(var i = 0; i != l;){\n                var e = Math.min(i + 2655, l);\n                for(; i < e; ++i)m += n += d[i];\n                n = (n & 65535) + 15 * (n >> 16), m = (m & 65535) + 15 * (m >> 16);\n            }\n            a = n, b = m;\n        },\n        d: function() {\n            a %= 65521, b %= 65521;\n            return (a & 255) << 24 | (a & 0xFF00) << 8 | (b & 255) << 8 | b >> 8;\n        }\n    };\n};\n;\n// deflate with opts\nvar dopt = function(dat, opt, pre, post, st) {\n    if (!st) {\n        st = {\n            l: 1\n        };\n        if (opt.dictionary) {\n            var dict = opt.dictionary.subarray(-32768);\n            var newDat = new u8(dict.length + dat.length);\n            newDat.set(dict);\n            newDat.set(dat, dict.length);\n            dat = newDat;\n            st.w = dict.length;\n        }\n    }\n    return dflt(dat, opt.level == null ? 6 : opt.level, opt.mem == null ? st.l ? Math.ceil(Math.max(8, Math.min(13, Math.log(dat.length))) * 1.5) : 20 : 12 + opt.mem, pre, post, st);\n};\n// Walmart object spread\nvar mrg = function(a, b) {\n    var o = {};\n    for(var k in a)o[k] = a[k];\n    for(var k in b)o[k] = b[k];\n    return o;\n};\n// worker clone\n// This is possibly the craziest part of the entire codebase, despite how simple it may seem.\n// The only parameter to this function is a closure that returns an array of variables outside of the function scope.\n// We're going to try to figure out the variable names used in the closure as strings because that is crucial for workerization.\n// We will return an object mapping of true variable name to value (basically, the current scope as a JS object).\n// The reason we can't just use the original variable names is minifiers mangling the toplevel scope.\n// This took me three weeks to figure out how to do.\nvar wcln = function(fn, fnStr, td) {\n    var dt = fn();\n    var st = fn.toString();\n    var ks = st.slice(st.indexOf(\"[\") + 1, st.lastIndexOf(\"]\")).replace(/\\s+/g, \"\").split(\",\");\n    for(var i = 0; i < dt.length; ++i){\n        var v = dt[i], k = ks[i];\n        if (typeof v == \"function\") {\n            fnStr += \";\" + k + \"=\";\n            var st_1 = v.toString();\n            if (v.prototype) {\n                // for global objects\n                if (st_1.indexOf(\"[native code]\") != -1) {\n                    var spInd = st_1.indexOf(\" \", 8) + 1;\n                    fnStr += st_1.slice(spInd, st_1.indexOf(\"(\", spInd));\n                } else {\n                    fnStr += st_1;\n                    for(var t in v.prototype)fnStr += \";\" + k + \".prototype.\" + t + \"=\" + v.prototype[t].toString();\n                }\n            } else fnStr += st_1;\n        } else td[k] = v;\n    }\n    return fnStr;\n};\nvar ch = [];\n// clone bufs\nvar cbfs = function(v) {\n    var tl = [];\n    for(var k in v){\n        if (v[k].buffer) {\n            tl.push((v[k] = new v[k].constructor(v[k])).buffer);\n        }\n    }\n    return tl;\n};\n// use a worker to execute code\nvar wrkr = function(fns, init, id, cb) {\n    if (!ch[id]) {\n        var fnStr = \"\", td_1 = {}, m = fns.length - 1;\n        for(var i = 0; i < m; ++i)fnStr = wcln(fns[i], fnStr, td_1);\n        ch[id] = {\n            c: wcln(fns[m], fnStr, td_1),\n            e: td_1\n        };\n    }\n    var td = mrg({}, ch[id].e);\n    return wk(ch[id].c + \";onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage=\" + init.toString() + \"}\", id, td, cbfs(td), cb);\n};\n// base async inflate fn\nvar bInflt = function() {\n    return [\n        u8,\n        u16,\n        i32,\n        fleb,\n        fdeb,\n        clim,\n        fl,\n        fd,\n        flrm,\n        fdrm,\n        rev,\n        ec,\n        hMap,\n        max,\n        bits,\n        bits16,\n        shft,\n        slc,\n        err,\n        inflt,\n        inflateSync,\n        pbf,\n        gopt\n    ];\n};\nvar bDflt = function() {\n    return [\n        u8,\n        u16,\n        i32,\n        fleb,\n        fdeb,\n        clim,\n        revfl,\n        revfd,\n        flm,\n        flt,\n        fdm,\n        fdt,\n        rev,\n        deo,\n        et,\n        hMap,\n        wbits,\n        wbits16,\n        hTree,\n        ln,\n        lc,\n        clen,\n        wfblk,\n        wblk,\n        shft,\n        slc,\n        dflt,\n        dopt,\n        deflateSync,\n        pbf\n    ];\n};\n// gzip extra\nvar gze = function() {\n    return [\n        gzh,\n        gzhl,\n        wbytes,\n        crc,\n        crct\n    ];\n};\n// gunzip extra\nvar guze = function() {\n    return [\n        gzs,\n        gzl\n    ];\n};\n// zlib extra\nvar zle = function() {\n    return [\n        zlh,\n        wbytes,\n        adler\n    ];\n};\n// unzlib extra\nvar zule = function() {\n    return [\n        zls\n    ];\n};\n// post buf\nvar pbf = function(msg) {\n    return postMessage(msg, [\n        msg.buffer\n    ]);\n};\n// get opts\nvar gopt = function(o) {\n    return o && {\n        out: o.size && new u8(o.size),\n        dictionary: o.dictionary\n    };\n};\n// async helper\nvar cbify = function(dat, opts, fns, init, id, cb) {\n    var w = wrkr(fns, init, id, function(err, dat) {\n        w.terminate();\n        cb(err, dat);\n    });\n    w.postMessage([\n        dat,\n        opts\n    ], opts.consume ? [\n        dat.buffer\n    ] : []);\n    return function() {\n        w.terminate();\n    };\n};\n// auto stream\nvar astrm = function(strm) {\n    strm.ondata = function(dat, final) {\n        return postMessage([\n            dat,\n            final\n        ], [\n            dat.buffer\n        ]);\n    };\n    return function(ev) {\n        if (ev.data.length) {\n            strm.push(ev.data[0], ev.data[1]);\n            postMessage([\n                ev.data[0].length\n            ]);\n        } else strm.flush();\n    };\n};\n// async stream attach\nvar astrmify = function(fns, strm, opts, init, id, flush, ext) {\n    var t;\n    var w = wrkr(fns, init, id, function(err, dat) {\n        if (err) w.terminate(), strm.ondata.call(strm, err);\n        else if (!Array.isArray(dat)) ext(dat);\n        else if (dat.length == 1) {\n            strm.queuedSize -= dat[0];\n            if (strm.ondrain) strm.ondrain(dat[0]);\n        } else {\n            if (dat[1]) w.terminate();\n            strm.ondata.call(strm, err, dat[0], dat[1]);\n        }\n    });\n    w.postMessage(opts);\n    strm.queuedSize = 0;\n    strm.push = function(d, f) {\n        if (!strm.ondata) err(5);\n        if (t) strm.ondata(err(4, 0, 1), null, !!f);\n        strm.queuedSize += d.length;\n        w.postMessage([\n            d,\n            t = f\n        ], [\n            d.buffer\n        ]);\n    };\n    strm.terminate = function() {\n        w.terminate();\n    };\n    if (flush) {\n        strm.flush = function() {\n            w.postMessage([]);\n        };\n    }\n};\n// read 2 bytes\nvar b2 = function(d, b) {\n    return d[b] | d[b + 1] << 8;\n};\n// read 4 bytes\nvar b4 = function(d, b) {\n    return (d[b] | d[b + 1] << 8 | d[b + 2] << 16 | d[b + 3] << 24) >>> 0;\n};\nvar b8 = function(d, b) {\n    return b4(d, b) + b4(d, b + 4) * 4294967296;\n};\n// write bytes\nvar wbytes = function(d, b, v) {\n    for(; v; ++b)d[b] = v, v >>>= 8;\n};\n// gzip header\nvar gzh = function(c, o) {\n    var fn = o.filename;\n    c[0] = 31, c[1] = 139, c[2] = 8, c[8] = o.level < 2 ? 4 : o.level == 9 ? 2 : 0, c[9] = 3; // assume Unix\n    if (o.mtime != 0) wbytes(c, 4, Math.floor(new Date(o.mtime || Date.now()) / 1000));\n    if (fn) {\n        c[3] = 8;\n        for(var i = 0; i <= fn.length; ++i)c[i + 10] = fn.charCodeAt(i);\n    }\n};\n// gzip footer: -8 to -4 = CRC, -4 to -0 is length\n// gzip start\nvar gzs = function(d) {\n    if (d[0] != 31 || d[1] != 139 || d[2] != 8) err(6, \"invalid gzip data\");\n    var flg = d[3];\n    var st = 10;\n    if (flg & 4) st += (d[10] | d[11] << 8) + 2;\n    for(var zs = (flg >> 3 & 1) + (flg >> 4 & 1); zs > 0; zs -= !d[st++]);\n    return st + (flg & 2);\n};\n// gzip length\nvar gzl = function(d) {\n    var l = d.length;\n    return (d[l - 4] | d[l - 3] << 8 | d[l - 2] << 16 | d[l - 1] << 24) >>> 0;\n};\n// gzip header length\nvar gzhl = function(o) {\n    return 10 + (o.filename ? o.filename.length + 1 : 0);\n};\n// zlib header\nvar zlh = function(c, o) {\n    var lv = o.level, fl = lv == 0 ? 0 : lv < 6 ? 1 : lv == 9 ? 3 : 2;\n    c[0] = 120, c[1] = fl << 6 | (o.dictionary && 32);\n    c[1] |= 31 - (c[0] << 8 | c[1]) % 31;\n    if (o.dictionary) {\n        var h = adler();\n        h.p(o.dictionary);\n        wbytes(c, 2, h.d());\n    }\n};\n// zlib start\nvar zls = function(d, dict) {\n    if ((d[0] & 15) != 8 || d[0] >> 4 > 7 || (d[0] << 8 | d[1]) % 31) err(6, \"invalid zlib data\");\n    if ((d[1] >> 5 & 1) == +!dict) err(6, \"invalid zlib data: \" + (d[1] & 32 ? \"need\" : \"unexpected\") + \" dictionary\");\n    return (d[1] >> 3 & 4) + 2;\n};\nfunction StrmOpt(opts, cb) {\n    if (typeof opts == \"function\") cb = opts, opts = {};\n    this.ondata = cb;\n    return opts;\n}\n_c = StrmOpt;\n/**\n * Streaming DEFLATE compression\n */ var Deflate = /*#__PURE__*/ function() {\n    function Deflate(opts, cb) {\n        if (typeof opts == \"function\") cb = opts, opts = {};\n        this.ondata = cb;\n        this.o = opts || {};\n        this.s = {\n            l: 0,\n            i: 32768,\n            w: 32768,\n            z: 32768\n        };\n        // Buffer length must always be 0 mod 32768 for index calculations to be correct when modifying head and prev\n        // 98304 = 32768 (lookback) + 65536 (common chunk size)\n        this.b = new u8(98304);\n        if (this.o.dictionary) {\n            var dict = this.o.dictionary.subarray(-32768);\n            this.b.set(dict, 32768 - dict.length);\n            this.s.i = 32768 - dict.length;\n        }\n    }\n    Deflate.prototype.p = function(c, f) {\n        this.ondata(dopt(c, this.o, 0, 0, this.s), f);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */ Deflate.prototype.push = function(chunk, final) {\n        if (!this.ondata) err(5);\n        if (this.s.l) err(4);\n        var endLen = chunk.length + this.s.z;\n        if (endLen > this.b.length) {\n            if (endLen > 2 * this.b.length - 32768) {\n                var newBuf = new u8(endLen & -32768);\n                newBuf.set(this.b.subarray(0, this.s.z));\n                this.b = newBuf;\n            }\n            var split = this.b.length - this.s.z;\n            this.b.set(chunk.subarray(0, split), this.s.z);\n            this.s.z = this.b.length;\n            this.p(this.b, false);\n            this.b.set(this.b.subarray(-32768));\n            this.b.set(chunk.subarray(split), 32768);\n            this.s.z = chunk.length - split + 32768;\n            this.s.i = 32766, this.s.w = 32768;\n        } else {\n            this.b.set(chunk, this.s.z);\n            this.s.z += chunk.length;\n        }\n        this.s.l = final & 1;\n        if (this.s.z > this.s.w + 8191 || final) {\n            this.p(this.b, final || false);\n            this.s.w = this.s.i, this.s.i -= 2;\n        }\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * deflated output for small inputs.\n     */ Deflate.prototype.flush = function() {\n        if (!this.ondata) err(5);\n        if (this.s.l) err(4);\n        this.p(this.b, false);\n        this.s.w = this.s.i, this.s.i -= 2;\n    };\n    return Deflate;\n}();\n\n/**\n * Asynchronous streaming DEFLATE compression\n */ var AsyncDeflate = /*#__PURE__*/ function() {\n    function AsyncDeflate(opts, cb) {\n        astrmify([\n            bDflt,\n            function() {\n                return [\n                    astrm,\n                    Deflate\n                ];\n            }\n        ], this, StrmOpt.call(this, opts, cb), function(ev) {\n            var strm = new Deflate(ev.data);\n            onmessage = astrm(strm);\n        }, 6, 1);\n    }\n    return AsyncDeflate;\n}();\n\nfunction deflate(data, opts, cb) {\n    if (!cb) cb = opts, opts = {};\n    if (typeof cb != \"function\") err(7);\n    return cbify(data, opts, [\n        bDflt\n    ], function(ev) {\n        return pbf(deflateSync(ev.data[0], ev.data[1]));\n    }, 0, cb);\n}\n/**\n * Compresses data with DEFLATE without any wrapper\n * @param data The data to compress\n * @param opts The compression options\n * @returns The deflated version of the data\n */ function deflateSync(data, opts) {\n    return dopt(data, opts || {}, 0, 0);\n}\n/**\n * Streaming DEFLATE decompression\n */ var Inflate = /*#__PURE__*/ function() {\n    function Inflate(opts, cb) {\n        // no StrmOpt here to avoid adding to workerizer\n        if (typeof opts == \"function\") cb = opts, opts = {};\n        this.ondata = cb;\n        var dict = opts && opts.dictionary && opts.dictionary.subarray(-32768);\n        this.s = {\n            i: 0,\n            b: dict ? dict.length : 0\n        };\n        this.o = new u8(32768);\n        this.p = new u8(0);\n        if (dict) this.o.set(dict);\n    }\n    Inflate.prototype.e = function(c) {\n        if (!this.ondata) err(5);\n        if (this.d) err(4);\n        if (!this.p.length) this.p = c;\n        else if (c.length) {\n            var n = new u8(this.p.length + c.length);\n            n.set(this.p), n.set(c, this.p.length), this.p = n;\n        }\n    };\n    Inflate.prototype.c = function(final) {\n        this.s.i = +(this.d = final || false);\n        var bts = this.s.b;\n        var dt = inflt(this.p, this.s, this.o);\n        this.ondata(slc(dt, bts, this.s.b), this.d);\n        this.o = slc(dt, this.s.b - 32768), this.s.b = this.o.length;\n        this.p = slc(this.p, this.s.p / 8 | 0), this.s.p &= 7;\n    };\n    /**\n     * Pushes a chunk to be inflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the final chunk\n     */ Inflate.prototype.push = function(chunk, final) {\n        this.e(chunk), this.c(final);\n    };\n    return Inflate;\n}();\n\n/**\n * Asynchronous streaming DEFLATE decompression\n */ var AsyncInflate = /*#__PURE__*/ function() {\n    function AsyncInflate(opts, cb) {\n        astrmify([\n            bInflt,\n            function() {\n                return [\n                    astrm,\n                    Inflate\n                ];\n            }\n        ], this, StrmOpt.call(this, opts, cb), function(ev) {\n            var strm = new Inflate(ev.data);\n            onmessage = astrm(strm);\n        }, 7, 0);\n    }\n    return AsyncInflate;\n}();\n\nfunction inflate(data, opts, cb) {\n    if (!cb) cb = opts, opts = {};\n    if (typeof cb != \"function\") err(7);\n    return cbify(data, opts, [\n        bInflt\n    ], function(ev) {\n        return pbf(inflateSync(ev.data[0], gopt(ev.data[1])));\n    }, 1, cb);\n}\n/**\n * Expands DEFLATE data with no wrapper\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */ function inflateSync(data, opts) {\n    return inflt(data, {\n        i: 2\n    }, opts && opts.out, opts && opts.dictionary);\n}\n// before you yell at me for not just using extends, my reason is that TS inheritance is hard to workerize.\n/**\n * Streaming GZIP compression\n */ var Gzip = /*#__PURE__*/ function() {\n    function Gzip(opts, cb) {\n        this.c = crc();\n        this.l = 0;\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */ Gzip.prototype.push = function(chunk, final) {\n        this.c.p(chunk);\n        this.l += chunk.length;\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Gzip.prototype.p = function(c, f) {\n        var raw = dopt(c, this.o, this.v && gzhl(this.o), f && 8, this.s);\n        if (this.v) gzh(raw, this.o), this.v = 0;\n        if (f) wbytes(raw, raw.length - 8, this.c.d()), wbytes(raw, raw.length - 4, this.l);\n        this.ondata(raw, f);\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * GZIPped output for small inputs.\n     */ Gzip.prototype.flush = function() {\n        Deflate.prototype.flush.call(this);\n    };\n    return Gzip;\n}();\n\n/**\n * Asynchronous streaming GZIP compression\n */ var AsyncGzip = /*#__PURE__*/ function() {\n    function AsyncGzip(opts, cb) {\n        astrmify([\n            bDflt,\n            gze,\n            function() {\n                return [\n                    astrm,\n                    Deflate,\n                    Gzip\n                ];\n            }\n        ], this, StrmOpt.call(this, opts, cb), function(ev) {\n            var strm = new Gzip(ev.data);\n            onmessage = astrm(strm);\n        }, 8, 1);\n    }\n    return AsyncGzip;\n}();\n\nfunction gzip(data, opts, cb) {\n    if (!cb) cb = opts, opts = {};\n    if (typeof cb != \"function\") err(7);\n    return cbify(data, opts, [\n        bDflt,\n        gze,\n        function() {\n            return [\n                gzipSync\n            ];\n        }\n    ], function(ev) {\n        return pbf(gzipSync(ev.data[0], ev.data[1]));\n    }, 2, cb);\n}\n/**\n * Compresses data with GZIP\n * @param data The data to compress\n * @param opts The compression options\n * @returns The gzipped version of the data\n */ function gzipSync(data, opts) {\n    if (!opts) opts = {};\n    var c = crc(), l = data.length;\n    c.p(data);\n    var d = dopt(data, opts, gzhl(opts), 8), s = d.length;\n    return gzh(d, opts), wbytes(d, s - 8, c.d()), wbytes(d, s - 4, l), d;\n}\n/**\n * Streaming single or multi-member GZIP decompression\n */ var Gunzip = /*#__PURE__*/ function() {\n    function Gunzip(opts, cb) {\n        this.v = 1;\n        this.r = 0;\n        Inflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GUNZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */ Gunzip.prototype.push = function(chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        this.r += chunk.length;\n        if (this.v) {\n            var p = this.p.subarray(this.v - 1);\n            var s = p.length > 3 ? gzs(p) : 4;\n            if (s > p.length) {\n                if (!final) return;\n            } else if (this.v > 1 && this.onmember) {\n                this.onmember(this.r - p.length);\n            }\n            this.p = p.subarray(s), this.v = 0;\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n        // process concatenated GZIP\n        if (this.s.f && !this.s.l && !final) {\n            this.v = shft(this.s.p) + 9;\n            this.s = {\n                i: 0\n            };\n            this.o = new u8(0);\n            this.push(new u8(0), final);\n        }\n    };\n    return Gunzip;\n}();\n\n/**\n * Asynchronous streaming single or multi-member GZIP decompression\n */ var AsyncGunzip = /*#__PURE__*/ function() {\n    function AsyncGunzip(opts, cb) {\n        var _this = this;\n        astrmify([\n            bInflt,\n            guze,\n            function() {\n                return [\n                    astrm,\n                    Inflate,\n                    Gunzip\n                ];\n            }\n        ], this, StrmOpt.call(this, opts, cb), function(ev) {\n            var strm = new Gunzip(ev.data);\n            strm.onmember = function(offset) {\n                return postMessage(offset);\n            };\n            onmessage = astrm(strm);\n        }, 9, 0, function(offset) {\n            return _this.onmember && _this.onmember(offset);\n        });\n    }\n    return AsyncGunzip;\n}();\n\nfunction gunzip(data, opts, cb) {\n    if (!cb) cb = opts, opts = {};\n    if (typeof cb != \"function\") err(7);\n    return cbify(data, opts, [\n        bInflt,\n        guze,\n        function() {\n            return [\n                gunzipSync\n            ];\n        }\n    ], function(ev) {\n        return pbf(gunzipSync(ev.data[0], ev.data[1]));\n    }, 3, cb);\n}\n/**\n * Expands GZIP data\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */ function gunzipSync(data, opts) {\n    var st = gzs(data);\n    if (st + 8 > data.length) err(6, \"invalid gzip data\");\n    return inflt(data.subarray(st, -8), {\n        i: 2\n    }, opts && opts.out || new u8(gzl(data)), opts && opts.dictionary);\n}\n/**\n * Streaming Zlib compression\n */ var Zlib = /*#__PURE__*/ function() {\n    function Zlib(opts, cb) {\n        this.c = adler();\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be zlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */ Zlib.prototype.push = function(chunk, final) {\n        this.c.p(chunk);\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Zlib.prototype.p = function(c, f) {\n        var raw = dopt(c, this.o, this.v && (this.o.dictionary ? 6 : 2), f && 4, this.s);\n        if (this.v) zlh(raw, this.o), this.v = 0;\n        if (f) wbytes(raw, raw.length - 4, this.c.d());\n        this.ondata(raw, f);\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * zlibbed output for small inputs.\n     */ Zlib.prototype.flush = function() {\n        Deflate.prototype.flush.call(this);\n    };\n    return Zlib;\n}();\n\n/**\n * Asynchronous streaming Zlib compression\n */ var AsyncZlib = /*#__PURE__*/ function() {\n    function AsyncZlib(opts, cb) {\n        astrmify([\n            bDflt,\n            zle,\n            function() {\n                return [\n                    astrm,\n                    Deflate,\n                    Zlib\n                ];\n            }\n        ], this, StrmOpt.call(this, opts, cb), function(ev) {\n            var strm = new Zlib(ev.data);\n            onmessage = astrm(strm);\n        }, 10, 1);\n    }\n    return AsyncZlib;\n}();\n\nfunction zlib(data, opts, cb) {\n    if (!cb) cb = opts, opts = {};\n    if (typeof cb != \"function\") err(7);\n    return cbify(data, opts, [\n        bDflt,\n        zle,\n        function() {\n            return [\n                zlibSync\n            ];\n        }\n    ], function(ev) {\n        return pbf(zlibSync(ev.data[0], ev.data[1]));\n    }, 4, cb);\n}\n/**\n * Compress data with Zlib\n * @param data The data to compress\n * @param opts The compression options\n * @returns The zlib-compressed version of the data\n */ function zlibSync(data, opts) {\n    if (!opts) opts = {};\n    var a = adler();\n    a.p(data);\n    var d = dopt(data, opts, opts.dictionary ? 6 : 2, 4);\n    return zlh(d, opts), wbytes(d, d.length - 4, a.d()), d;\n}\n/**\n * Streaming Zlib decompression\n */ var Unzlib = /*#__PURE__*/ function() {\n    function Unzlib(opts, cb) {\n        Inflate.call(this, opts, cb);\n        this.v = opts && opts.dictionary ? 2 : 1;\n    }\n    /**\n     * Pushes a chunk to be unzlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */ Unzlib.prototype.push = function(chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        if (this.v) {\n            if (this.p.length < 6 && !final) return;\n            this.p = this.p.subarray(zls(this.p, this.v - 1)), this.v = 0;\n        }\n        if (final) {\n            if (this.p.length < 4) err(6, \"invalid zlib data\");\n            this.p = this.p.subarray(0, -4);\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n    };\n    return Unzlib;\n}();\n\n/**\n * Asynchronous streaming Zlib decompression\n */ var AsyncUnzlib = /*#__PURE__*/ function() {\n    function AsyncUnzlib(opts, cb) {\n        astrmify([\n            bInflt,\n            zule,\n            function() {\n                return [\n                    astrm,\n                    Inflate,\n                    Unzlib\n                ];\n            }\n        ], this, StrmOpt.call(this, opts, cb), function(ev) {\n            var strm = new Unzlib(ev.data);\n            onmessage = astrm(strm);\n        }, 11, 0);\n    }\n    return AsyncUnzlib;\n}();\n\nfunction unzlib(data, opts, cb) {\n    if (!cb) cb = opts, opts = {};\n    if (typeof cb != \"function\") err(7);\n    return cbify(data, opts, [\n        bInflt,\n        zule,\n        function() {\n            return [\n                unzlibSync\n            ];\n        }\n    ], function(ev) {\n        return pbf(unzlibSync(ev.data[0], gopt(ev.data[1])));\n    }, 5, cb);\n}\n/**\n * Expands Zlib data\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */ function unzlibSync(data, opts) {\n    return inflt(data.subarray(zls(data, opts && opts.dictionary), -4), {\n        i: 2\n    }, opts && opts.out, opts && opts.dictionary);\n}\n// Default algorithm for compression (used because having a known output size allows faster decompression)\n\n\n/**\n * Streaming GZIP, Zlib, or raw DEFLATE decompression\n */ var Decompress = /*#__PURE__*/ function() {\n    function Decompress(opts, cb) {\n        this.o = StrmOpt.call(this, opts, cb) || {};\n        this.G = Gunzip;\n        this.I = Inflate;\n        this.Z = Unzlib;\n    }\n    // init substream\n    // overriden by AsyncDecompress\n    Decompress.prototype.i = function() {\n        var _this = this;\n        this.s.ondata = function(dat, final) {\n            _this.ondata(dat, final);\n        };\n    };\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */ Decompress.prototype.push = function(chunk, final) {\n        if (!this.ondata) err(5);\n        if (!this.s) {\n            if (this.p && this.p.length) {\n                var n = new u8(this.p.length + chunk.length);\n                n.set(this.p), n.set(chunk, this.p.length);\n            } else this.p = chunk;\n            if (this.p.length > 2) {\n                this.s = this.p[0] == 31 && this.p[1] == 139 && this.p[2] == 8 ? new this.G(this.o) : (this.p[0] & 15) != 8 || this.p[0] >> 4 > 7 || (this.p[0] << 8 | this.p[1]) % 31 ? new this.I(this.o) : new this.Z(this.o);\n                this.i();\n                this.s.push(this.p, final);\n                this.p = null;\n            }\n        } else this.s.push(chunk, final);\n    };\n    return Decompress;\n}();\n\n/**\n * Asynchronous streaming GZIP, Zlib, or raw DEFLATE decompression\n */ var AsyncDecompress = /*#__PURE__*/ function() {\n    function AsyncDecompress(opts, cb) {\n        Decompress.call(this, opts, cb);\n        this.queuedSize = 0;\n        this.G = AsyncGunzip;\n        this.I = AsyncInflate;\n        this.Z = AsyncUnzlib;\n    }\n    AsyncDecompress.prototype.i = function() {\n        var _this = this;\n        this.s.ondata = function(err, dat, final) {\n            _this.ondata(err, dat, final);\n        };\n        this.s.ondrain = function(size) {\n            _this.queuedSize -= size;\n            if (_this.ondrain) _this.ondrain(size);\n        };\n    };\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */ AsyncDecompress.prototype.push = function(chunk, final) {\n        this.queuedSize += chunk.length;\n        Decompress.prototype.push.call(this, chunk, final);\n    };\n    return AsyncDecompress;\n}();\n\nfunction decompress(data, opts, cb) {\n    if (!cb) cb = opts, opts = {};\n    if (typeof cb != \"function\") err(7);\n    return data[0] == 31 && data[1] == 139 && data[2] == 8 ? gunzip(data, opts, cb) : (data[0] & 15) != 8 || data[0] >> 4 > 7 || (data[0] << 8 | data[1]) % 31 ? inflate(data, opts, cb) : unzlib(data, opts, cb);\n}\n/**\n * Expands compressed GZIP, Zlib, or raw DEFLATE data, automatically detecting the format\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */ function decompressSync(data, opts) {\n    return data[0] == 31 && data[1] == 139 && data[2] == 8 ? gunzipSync(data, opts) : (data[0] & 15) != 8 || data[0] >> 4 > 7 || (data[0] << 8 | data[1]) % 31 ? inflateSync(data, opts) : unzlibSync(data, opts);\n}\n// flatten a directory structure\nvar fltn = function(d, p, t, o) {\n    for(var k in d){\n        var val = d[k], n = p + k, op = o;\n        if (Array.isArray(val)) op = mrg(o, val[1]), val = val[0];\n        if (val instanceof u8) t[n] = [\n            val,\n            op\n        ];\n        else {\n            t[n += \"/\"] = [\n                new u8(0),\n                op\n            ];\n            fltn(val, n, t, o);\n        }\n    }\n};\n// text encoder\nvar te = typeof TextEncoder != \"undefined\" && /*#__PURE__*/ new TextEncoder();\n// text decoder\nvar td = typeof TextDecoder != \"undefined\" && /*#__PURE__*/ new TextDecoder();\n// text decoder stream\nvar tds = 0;\ntry {\n    td.decode(et, {\n        stream: true\n    });\n    tds = 1;\n} catch (e) {}\n// decode UTF8\nvar dutf8 = function(d) {\n    for(var r = \"\", i = 0;;){\n        var c = d[i++];\n        var eb = (c > 127) + (c > 223) + (c > 239);\n        if (i + eb > d.length) return {\n            s: r,\n            r: slc(d, i - 1)\n        };\n        if (!eb) r += String.fromCharCode(c);\n        else if (eb == 3) {\n            c = ((c & 15) << 18 | (d[i++] & 63) << 12 | (d[i++] & 63) << 6 | d[i++] & 63) - 65536, r += String.fromCharCode(55296 | c >> 10, 56320 | c & 1023);\n        } else if (eb & 1) r += String.fromCharCode((c & 31) << 6 | d[i++] & 63);\n        else r += String.fromCharCode((c & 15) << 12 | (d[i++] & 63) << 6 | d[i++] & 63);\n    }\n};\n/**\n * Streaming UTF-8 decoding\n */ var DecodeUTF8 = /*#__PURE__*/ function() {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is decoded\n     */ function DecodeUTF8(cb) {\n        this.ondata = cb;\n        if (tds) this.t = new TextDecoder();\n        else this.p = et;\n    }\n    /**\n     * Pushes a chunk to be decoded from UTF-8 binary\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */ DecodeUTF8.prototype.push = function(chunk, final) {\n        if (!this.ondata) err(5);\n        final = !!final;\n        if (this.t) {\n            this.ondata(this.t.decode(chunk, {\n                stream: true\n            }), final);\n            if (final) {\n                if (this.t.decode().length) err(8);\n                this.t = null;\n            }\n            return;\n        }\n        if (!this.p) err(4);\n        var dat = new u8(this.p.length + chunk.length);\n        dat.set(this.p);\n        dat.set(chunk, this.p.length);\n        var _a = dutf8(dat), s = _a.s, r = _a.r;\n        if (final) {\n            if (r.length) err(8);\n            this.p = null;\n        } else this.p = r;\n        this.ondata(s, final);\n    };\n    return DecodeUTF8;\n}();\n\n/**\n * Streaming UTF-8 encoding\n */ var EncodeUTF8 = /*#__PURE__*/ function() {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is encoded\n     */ function EncodeUTF8(cb) {\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be encoded to UTF-8\n     * @param chunk The string data to push\n     * @param final Whether this is the last chunk\n     */ EncodeUTF8.prototype.push = function(chunk, final) {\n        if (!this.ondata) err(5);\n        if (this.d) err(4);\n        this.ondata(strToU8(chunk), this.d = final || false);\n    };\n    return EncodeUTF8;\n}();\n\n/**\n * Converts a string into a Uint8Array for use with compression/decompression methods\n * @param str The string to encode\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless decoding a binary string.\n * @returns The string encoded in UTF-8/Latin-1 binary\n */ function strToU8(str, latin1) {\n    if (latin1) {\n        var ar_1 = new u8(str.length);\n        for(var i = 0; i < str.length; ++i)ar_1[i] = str.charCodeAt(i);\n        return ar_1;\n    }\n    if (te) return te.encode(str);\n    var l = str.length;\n    var ar = new u8(str.length + (str.length >> 1));\n    var ai = 0;\n    var w = function(v) {\n        ar[ai++] = v;\n    };\n    for(var i = 0; i < l; ++i){\n        if (ai + 5 > ar.length) {\n            var n = new u8(ai + 8 + (l - i << 1));\n            n.set(ar);\n            ar = n;\n        }\n        var c = str.charCodeAt(i);\n        if (c < 128 || latin1) w(c);\n        else if (c < 2048) w(192 | c >> 6), w(128 | c & 63);\n        else if (c > 55295 && c < 57344) c = 65536 + (c & 1023 << 10) | str.charCodeAt(++i) & 1023, w(240 | c >> 18), w(128 | c >> 12 & 63), w(128 | c >> 6 & 63), w(128 | c & 63);\n        else w(224 | c >> 12), w(128 | c >> 6 & 63), w(128 | c & 63);\n    }\n    return slc(ar, 0, ai);\n}\n/**\n * Converts a Uint8Array to a string\n * @param dat The data to decode to string\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless encoding to binary string.\n * @returns The original UTF-8/Latin-1 string\n */ function strFromU8(dat, latin1) {\n    if (latin1) {\n        var r = \"\";\n        for(var i = 0; i < dat.length; i += 16384)r += String.fromCharCode.apply(null, dat.subarray(i, i + 16384));\n        return r;\n    } else if (td) {\n        return td.decode(dat);\n    } else {\n        var _a = dutf8(dat), s = _a.s, r = _a.r;\n        if (r.length) err(8);\n        return s;\n    }\n}\n;\n// deflate bit flag\nvar dbf = function(l) {\n    return l == 1 ? 3 : l < 6 ? 2 : l == 9 ? 1 : 0;\n};\n// skip local zip header\nvar slzh = function(d, b) {\n    return b + 30 + b2(d, b + 26) + b2(d, b + 28);\n};\n// read zip header\nvar zh = function(d, b, z) {\n    var fnl = b2(d, b + 28), fn = strFromU8(d.subarray(b + 46, b + 46 + fnl), !(b2(d, b + 8) & 2048)), es = b + 46 + fnl, bs = b4(d, b + 20);\n    var _a = z && bs == 4294967295 ? z64e(d, es) : [\n        bs,\n        b4(d, b + 24),\n        b4(d, b + 42)\n    ], sc = _a[0], su = _a[1], off = _a[2];\n    return [\n        b2(d, b + 10),\n        sc,\n        su,\n        fn,\n        es + b2(d, b + 30) + b2(d, b + 32),\n        off\n    ];\n};\n// read zip64 extra field\nvar z64e = function(d, b) {\n    for(; b2(d, b) != 1; b += 4 + b2(d, b + 2));\n    return [\n        b8(d, b + 12),\n        b8(d, b + 4),\n        b8(d, b + 20)\n    ];\n};\n// extra field length\nvar exfl = function(ex) {\n    var le = 0;\n    if (ex) {\n        for(var k in ex){\n            var l = ex[k].length;\n            if (l > 65535) err(9);\n            le += l + 4;\n        }\n    }\n    return le;\n};\n// write zip header\nvar wzh = function(d, b, f, fn, u, c, ce, co) {\n    var fl = fn.length, ex = f.extra, col = co && co.length;\n    var exl = exfl(ex);\n    wbytes(d, b, ce != null ? 0x2014B50 : 0x4034B50), b += 4;\n    if (ce != null) d[b++] = 20, d[b++] = f.os;\n    d[b] = 20, b += 2; // spec compliance? what's that?\n    d[b++] = f.flag << 1 | (c < 0 && 8), d[b++] = u && 8;\n    d[b++] = f.compression & 255, d[b++] = f.compression >> 8;\n    var dt = new Date(f.mtime == null ? Date.now() : f.mtime), y = dt.getFullYear() - 1980;\n    if (y < 0 || y > 119) err(10);\n    wbytes(d, b, y << 25 | dt.getMonth() + 1 << 21 | dt.getDate() << 16 | dt.getHours() << 11 | dt.getMinutes() << 5 | dt.getSeconds() >> 1), b += 4;\n    if (c != -1) {\n        wbytes(d, b, f.crc);\n        wbytes(d, b + 4, c < 0 ? -c - 2 : c);\n        wbytes(d, b + 8, f.size);\n    }\n    wbytes(d, b + 12, fl);\n    wbytes(d, b + 14, exl), b += 16;\n    if (ce != null) {\n        wbytes(d, b, col);\n        wbytes(d, b + 6, f.attrs);\n        wbytes(d, b + 10, ce), b += 14;\n    }\n    d.set(fn, b);\n    b += fl;\n    if (exl) {\n        for(var k in ex){\n            var exf = ex[k], l = exf.length;\n            wbytes(d, b, +k);\n            wbytes(d, b + 2, l);\n            d.set(exf, b + 4), b += 4 + l;\n        }\n    }\n    if (col) d.set(co, b), b += col;\n    return b;\n};\n// write zip footer (end of central directory)\nvar wzf = function(o, b, c, d, e) {\n    wbytes(o, b, 0x6054B50); // skip disk\n    wbytes(o, b + 8, c);\n    wbytes(o, b + 10, c);\n    wbytes(o, b + 12, d);\n    wbytes(o, b + 16, e);\n};\n/**\n * A pass-through stream to keep data uncompressed in a ZIP archive.\n */ var ZipPassThrough = /*#__PURE__*/ function() {\n    /**\n     * Creates a pass-through stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     */ function ZipPassThrough(filename) {\n        this.filename = filename;\n        this.c = crc();\n        this.size = 0;\n        this.compression = 0;\n    }\n    /**\n     * Processes a chunk and pushes to the output stream. You can override this\n     * method in a subclass for custom behavior, but by default this passes\n     * the data through. You must call this.ondata(err, chunk, final) at some\n     * point in this method.\n     * @param chunk The chunk to process\n     * @param final Whether this is the last chunk\n     */ ZipPassThrough.prototype.process = function(chunk, final) {\n        this.ondata(null, chunk, final);\n    };\n    /**\n     * Pushes a chunk to be added. If you are subclassing this with a custom\n     * compression algorithm, note that you must push data from the source\n     * file only, pre-compression.\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */ ZipPassThrough.prototype.push = function(chunk, final) {\n        if (!this.ondata) err(5);\n        this.c.p(chunk);\n        this.size += chunk.length;\n        if (final) this.crc = this.c.d();\n        this.process(chunk, final || false);\n    };\n    return ZipPassThrough;\n}();\n\n// I don't extend because TypeScript extension adds 1kB of runtime bloat\n/**\n * Streaming DEFLATE compression for ZIP archives. Prefer using AsyncZipDeflate\n * for better performance\n */ var ZipDeflate = /*#__PURE__*/ function() {\n    /**\n     * Creates a DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */ function ZipDeflate(filename, opts) {\n        var _this = this;\n        if (!opts) opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new Deflate(opts, function(dat, final) {\n            _this.ondata(null, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n    }\n    ZipDeflate.prototype.process = function(chunk, final) {\n        try {\n            this.d.push(chunk, final);\n        } catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */ ZipDeflate.prototype.push = function(chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return ZipDeflate;\n}();\n\n/**\n * Asynchronous streaming DEFLATE compression for ZIP archives\n */ var AsyncZipDeflate = /*#__PURE__*/ function() {\n    /**\n     * Creates an asynchronous DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */ function AsyncZipDeflate(filename, opts) {\n        var _this = this;\n        if (!opts) opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new AsyncDeflate(opts, function(err, dat, final) {\n            _this.ondata(err, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n        this.terminate = this.d.terminate;\n    }\n    AsyncZipDeflate.prototype.process = function(chunk, final) {\n        this.d.push(chunk, final);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */ AsyncZipDeflate.prototype.push = function(chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return AsyncZipDeflate;\n}();\n\n// TODO: Better tree shaking\n/**\n * A zippable archive to which files can incrementally be added\n */ var Zip = /*#__PURE__*/ function() {\n    /**\n     * Creates an empty ZIP archive to which files can be added\n     * @param cb The callback to call whenever data for the generated ZIP archive\n     *           is available\n     */ function Zip(cb) {\n        this.ondata = cb;\n        this.u = [];\n        this.d = 1;\n    }\n    /**\n     * Adds a file to the ZIP archive\n     * @param file The file stream to add\n     */ Zip.prototype.add = function(file) {\n        var _this = this;\n        if (!this.ondata) err(5);\n        // finishing or finished\n        if (this.d & 2) this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, false);\n        else {\n            var f = strToU8(file.filename), fl_1 = f.length;\n            var com = file.comment, o = com && strToU8(com);\n            var u = fl_1 != file.filename.length || o && com.length != o.length;\n            var hl_1 = fl_1 + exfl(file.extra) + 30;\n            if (fl_1 > 65535) this.ondata(err(11, 0, 1), null, false);\n            var header = new u8(hl_1);\n            wzh(header, 0, file, f, u, -1);\n            var chks_1 = [\n                header\n            ];\n            var pAll_1 = function() {\n                for(var _i = 0, chks_2 = chks_1; _i < chks_2.length; _i++){\n                    var chk = chks_2[_i];\n                    _this.ondata(null, chk, false);\n                }\n                chks_1 = [];\n            };\n            var tr_1 = this.d;\n            this.d = 0;\n            var ind_1 = this.u.length;\n            var uf_1 = mrg(file, {\n                f: f,\n                u: u,\n                o: o,\n                t: function() {\n                    if (file.terminate) file.terminate();\n                },\n                r: function() {\n                    pAll_1();\n                    if (tr_1) {\n                        var nxt = _this.u[ind_1 + 1];\n                        if (nxt) nxt.r();\n                        else _this.d = 1;\n                    }\n                    tr_1 = 1;\n                }\n            });\n            var cl_1 = 0;\n            file.ondata = function(err, dat, final) {\n                if (err) {\n                    _this.ondata(err, dat, final);\n                    _this.terminate();\n                } else {\n                    cl_1 += dat.length;\n                    chks_1.push(dat);\n                    if (final) {\n                        var dd = new u8(16);\n                        wbytes(dd, 0, 0x8074B50);\n                        wbytes(dd, 4, file.crc);\n                        wbytes(dd, 8, cl_1);\n                        wbytes(dd, 12, file.size);\n                        chks_1.push(dd);\n                        uf_1.c = cl_1, uf_1.b = hl_1 + cl_1 + 16, uf_1.crc = file.crc, uf_1.size = file.size;\n                        if (tr_1) uf_1.r();\n                        tr_1 = 1;\n                    } else if (tr_1) pAll_1();\n                }\n            };\n            this.u.push(uf_1);\n        }\n    };\n    /**\n     * Ends the process of adding files and prepares to emit the final chunks.\n     * This *must* be called after adding all desired files for the resulting\n     * ZIP file to work properly.\n     */ Zip.prototype.end = function() {\n        var _this = this;\n        if (this.d & 2) {\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, true);\n            return;\n        }\n        if (this.d) this.e();\n        else this.u.push({\n            r: function() {\n                if (!(_this.d & 1)) return;\n                _this.u.splice(-1, 1);\n                _this.e();\n            },\n            t: function() {}\n        });\n        this.d = 3;\n    };\n    Zip.prototype.e = function() {\n        var bt = 0, l = 0, tl = 0;\n        for(var _i = 0, _a = this.u; _i < _a.length; _i++){\n            var f = _a[_i];\n            tl += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0);\n        }\n        var out = new u8(tl + 22);\n        for(var _b = 0, _c = this.u; _b < _c.length; _b++){\n            var f = _c[_b];\n            wzh(out, bt, f, f.f, f.u, -f.c - 2, l, f.o);\n            bt += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0), l += f.b;\n        }\n        wzf(out, bt, this.u.length, tl, l);\n        this.ondata(null, out, true);\n        this.d = 2;\n    };\n    /**\n     * A method to terminate any internal workers used by the stream. Subsequent\n     * calls to add() will fail.\n     */ Zip.prototype.terminate = function() {\n        for(var _i = 0, _a = this.u; _i < _a.length; _i++){\n            var f = _a[_i];\n            f.t();\n        }\n        this.d = 2;\n    };\n    return Zip;\n}();\n\nfunction zip(data, opts, cb) {\n    if (!cb) cb = opts, opts = {};\n    if (typeof cb != \"function\") err(7);\n    var r = {};\n    fltn(data, \"\", r, opts);\n    var k = Object.keys(r);\n    var lft = k.length, o = 0, tot = 0;\n    var slft = lft, files = new Array(lft);\n    var term = [];\n    var tAll = function() {\n        for(var i = 0; i < term.length; ++i)term[i]();\n    };\n    var cbd = function(a, b) {\n        mt(function() {\n            cb(a, b);\n        });\n    };\n    mt(function() {\n        cbd = cb;\n    });\n    var cbf = function() {\n        var out = new u8(tot + 22), oe = o, cdl = tot - o;\n        tot = 0;\n        for(var i = 0; i < slft; ++i){\n            var f = files[i];\n            try {\n                var l = f.c.length;\n                wzh(out, tot, f, f.f, f.u, l);\n                var badd = 30 + f.f.length + exfl(f.extra);\n                var loc = tot + badd;\n                out.set(f.c, loc);\n                wzh(out, o, f, f.f, f.u, l, tot, f.m), o += 16 + badd + (f.m ? f.m.length : 0), tot = loc + l;\n            } catch (e) {\n                return cbd(e, null);\n            }\n        }\n        wzf(out, o, files.length, cdl, oe);\n        cbd(null, out);\n    };\n    if (!lft) cbf();\n    var _loop_1 = function(i) {\n        var fn = k[i];\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var c = crc(), size = file.length;\n        c.p(file);\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        var compression = p.level == 0 ? 0 : 8;\n        var cbl = function(e, d) {\n            if (e) {\n                tAll();\n                cbd(e, null);\n            } else {\n                var l = d.length;\n                files[i] = mrg(p, {\n                    size: size,\n                    crc: c.d(),\n                    c: d,\n                    f: f,\n                    m: m,\n                    u: s != fn.length || m && com.length != ms,\n                    compression: compression\n                });\n                o += 30 + s + exl + l;\n                tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n                if (!--lft) cbf();\n            }\n        };\n        if (s > 65535) cbl(err(11, 0, 1), null);\n        if (!compression) cbl(null, file);\n        else if (size < 160000) {\n            try {\n                cbl(null, deflateSync(file, p));\n            } catch (e) {\n                cbl(e, null);\n            }\n        } else term.push(deflate(file, p, cbl));\n    };\n    // Cannot use lft because it can decrease\n    for(var i = 0; i < slft; ++i){\n        _loop_1(i);\n    }\n    return tAll;\n}\n/**\n * Synchronously creates a ZIP file. Prefer using `zip` for better performance\n * with more than one file.\n * @param data The directory structure for the ZIP archive\n * @param opts The main options, merged with per-file options\n * @returns The generated ZIP archive\n */ function zipSync(data, opts) {\n    if (!opts) opts = {};\n    var r = {};\n    var files = [];\n    fltn(data, \"\", r, opts);\n    var o = 0;\n    var tot = 0;\n    for(var fn in r){\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var compression = p.level == 0 ? 0 : 8;\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        if (s > 65535) err(11);\n        var d = compression ? deflateSync(file, p) : file, l = d.length;\n        var c = crc();\n        c.p(file);\n        files.push(mrg(p, {\n            size: file.length,\n            crc: c.d(),\n            c: d,\n            f: f,\n            m: m,\n            u: s != fn.length || m && com.length != ms,\n            o: o,\n            compression: compression\n        }));\n        o += 30 + s + exl + l;\n        tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n    }\n    var out = new u8(tot + 22), oe = o, cdl = tot - o;\n    for(var i = 0; i < files.length; ++i){\n        var f = files[i];\n        wzh(out, f.o, f, f.f, f.u, f.c.length);\n        var badd = 30 + f.f.length + exfl(f.extra);\n        out.set(f.c, f.o + badd);\n        wzh(out, o, f, f.f, f.u, f.c.length, f.o, f.m), o += 16 + badd + (f.m ? f.m.length : 0);\n    }\n    wzf(out, o, files.length, cdl, oe);\n    return out;\n}\n/**\n * Streaming pass-through decompression for ZIP archives\n */ var UnzipPassThrough = /*#__PURE__*/ function() {\n    function UnzipPassThrough() {}\n    UnzipPassThrough.prototype.push = function(data, final) {\n        this.ondata(null, data, final);\n    };\n    UnzipPassThrough.compression = 0;\n    return UnzipPassThrough;\n}();\n\n/**\n * Streaming DEFLATE decompression for ZIP archives. Prefer AsyncZipInflate for\n * better performance.\n */ var UnzipInflate = /*#__PURE__*/ function() {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */ function UnzipInflate() {\n        var _this = this;\n        this.i = new Inflate(function(dat, final) {\n            _this.ondata(null, dat, final);\n        });\n    }\n    UnzipInflate.prototype.push = function(data, final) {\n        try {\n            this.i.push(data, final);\n        } catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    UnzipInflate.compression = 8;\n    return UnzipInflate;\n}();\n\n/**\n * Asynchronous streaming DEFLATE decompression for ZIP archives\n */ var AsyncUnzipInflate = /*#__PURE__*/ function() {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */ function AsyncUnzipInflate(_, sz) {\n        var _this = this;\n        if (sz < 320000) {\n            this.i = new Inflate(function(dat, final) {\n                _this.ondata(null, dat, final);\n            });\n        } else {\n            this.i = new AsyncInflate(function(err, dat, final) {\n                _this.ondata(err, dat, final);\n            });\n            this.terminate = this.i.terminate;\n        }\n    }\n    AsyncUnzipInflate.prototype.push = function(data, final) {\n        if (this.i.terminate) data = slc(data, 0);\n        this.i.push(data, final);\n    };\n    AsyncUnzipInflate.compression = 8;\n    return AsyncUnzipInflate;\n}();\n\n/**\n * A ZIP archive decompression stream that emits files as they are discovered\n */ var Unzip = /*#__PURE__*/ function() {\n    /**\n     * Creates a ZIP decompression stream\n     * @param cb The callback to call whenever a file in the ZIP archive is found\n     */ function Unzip(cb) {\n        this.onfile = cb;\n        this.k = [];\n        this.o = {\n            0: UnzipPassThrough\n        };\n        this.p = et;\n    }\n    /**\n     * Pushes a chunk to be unzipped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */ Unzip.prototype.push = function(chunk, final) {\n        var _this = this;\n        if (!this.onfile) err(5);\n        if (!this.p) err(4);\n        if (this.c > 0) {\n            var len = Math.min(this.c, chunk.length);\n            var toAdd = chunk.subarray(0, len);\n            this.c -= len;\n            if (this.d) this.d.push(toAdd, !this.c);\n            else this.k[0].push(toAdd);\n            chunk = chunk.subarray(len);\n            if (chunk.length) return this.push(chunk, final);\n        } else {\n            var f = 0, i = 0, is = void 0, buf = void 0;\n            if (!this.p.length) buf = chunk;\n            else if (!chunk.length) buf = this.p;\n            else {\n                buf = new u8(this.p.length + chunk.length);\n                buf.set(this.p), buf.set(chunk, this.p.length);\n            }\n            var l = buf.length, oc = this.c, add = oc && this.d;\n            var _loop_2 = function() {\n                var _a;\n                var sig = b4(buf, i);\n                if (sig == 0x4034B50) {\n                    f = 1, is = i;\n                    this_1.d = null;\n                    this_1.c = 0;\n                    var bf = b2(buf, i + 6), cmp_1 = b2(buf, i + 8), u = bf & 2048, dd = bf & 8, fnl = b2(buf, i + 26), es = b2(buf, i + 28);\n                    if (l > i + 30 + fnl + es) {\n                        var chks_3 = [];\n                        this_1.k.unshift(chks_3);\n                        f = 2;\n                        var sc_1 = b4(buf, i + 18), su_1 = b4(buf, i + 22);\n                        var fn_1 = strFromU8(buf.subarray(i + 30, i += 30 + fnl), !u);\n                        if (sc_1 == 4294967295) {\n                            _a = dd ? [\n                                -2\n                            ] : z64e(buf, i), sc_1 = _a[0], su_1 = _a[1];\n                        } else if (dd) sc_1 = -1;\n                        i += es;\n                        this_1.c = sc_1;\n                        var d_1;\n                        var file_1 = {\n                            name: fn_1,\n                            compression: cmp_1,\n                            start: function() {\n                                if (!file_1.ondata) err(5);\n                                if (!sc_1) file_1.ondata(null, et, true);\n                                else {\n                                    var ctr = _this.o[cmp_1];\n                                    if (!ctr) file_1.ondata(err(14, \"unknown compression type \" + cmp_1, 1), null, false);\n                                    d_1 = sc_1 < 0 ? new ctr(fn_1) : new ctr(fn_1, sc_1, su_1);\n                                    d_1.ondata = function(err, dat, final) {\n                                        file_1.ondata(err, dat, final);\n                                    };\n                                    for(var _i = 0, chks_4 = chks_3; _i < chks_4.length; _i++){\n                                        var dat = chks_4[_i];\n                                        d_1.push(dat, false);\n                                    }\n                                    if (_this.k[0] == chks_3 && _this.c) _this.d = d_1;\n                                    else d_1.push(et, true);\n                                }\n                            },\n                            terminate: function() {\n                                if (d_1 && d_1.terminate) d_1.terminate();\n                            }\n                        };\n                        if (sc_1 >= 0) file_1.size = sc_1, file_1.originalSize = su_1;\n                        this_1.onfile(file_1);\n                    }\n                    return \"break\";\n                } else if (oc) {\n                    if (sig == 0x8074B50) {\n                        is = i += 12 + (oc == -2 && 8), f = 3, this_1.c = 0;\n                        return \"break\";\n                    } else if (sig == 0x2014B50) {\n                        is = i -= 4, f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                }\n            };\n            var this_1 = this;\n            for(; i < l - 4; ++i){\n                var state_1 = _loop_2();\n                if (state_1 === \"break\") break;\n            }\n            this.p = et;\n            if (oc < 0) {\n                var dat = f ? buf.subarray(0, is - 12 - (oc == -2 && 8) - (b4(buf, is - 16) == 0x8074B50 && 4)) : buf.subarray(0, i);\n                if (add) add.push(dat, !!f);\n                else this.k[+(f == 2)].push(dat);\n            }\n            if (f & 2) return this.push(buf.subarray(i), final);\n            this.p = buf.subarray(i);\n        }\n        if (final) {\n            if (this.c) err(13);\n            this.p = null;\n        }\n    };\n    /**\n     * Registers a decoder with the stream, allowing for files compressed with\n     * the compression type provided to be expanded correctly\n     * @param decoder The decoder constructor\n     */ Unzip.prototype.register = function(decoder) {\n        this.o[decoder.compression] = decoder;\n    };\n    return Unzip;\n}();\n\nvar mt = typeof queueMicrotask == \"function\" ? queueMicrotask : typeof setTimeout == \"function\" ? setTimeout : function(fn) {\n    fn();\n};\nfunction unzip(data, opts, cb) {\n    if (!cb) cb = opts, opts = {};\n    if (typeof cb != \"function\") err(7);\n    var term = [];\n    var tAll = function() {\n        for(var i = 0; i < term.length; ++i)term[i]();\n    };\n    var files = {};\n    var cbd = function(a, b) {\n        mt(function() {\n            cb(a, b);\n        });\n    };\n    mt(function() {\n        cbd = cb;\n    });\n    var e = data.length - 22;\n    for(; b4(data, e) != 0x6054B50; --e){\n        if (!e || data.length - e > 65558) {\n            cbd(err(13, 0, 1), null);\n            return tAll;\n        }\n    }\n    ;\n    var lft = b2(data, e + 8);\n    if (lft) {\n        var c = lft;\n        var o = b4(data, e + 16);\n        var z = o == 4294967295 || c == 65535;\n        if (z) {\n            var ze = b4(data, e - 12);\n            z = b4(data, ze) == 0x6064B50;\n            if (z) {\n                c = lft = b4(data, ze + 32);\n                o = b4(data, ze + 48);\n            }\n        }\n        var fltr = opts && opts.filter;\n        var _loop_3 = function(i) {\n            var _a = zh(data, o, z), c_1 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n            o = no;\n            var cbl = function(e, d) {\n                if (e) {\n                    tAll();\n                    cbd(e, null);\n                } else {\n                    if (d) files[fn] = d;\n                    if (!--lft) cbd(null, files);\n                }\n            };\n            if (!fltr || fltr({\n                name: fn,\n                size: sc,\n                originalSize: su,\n                compression: c_1\n            })) {\n                if (!c_1) cbl(null, slc(data, b, b + sc));\n                else if (c_1 == 8) {\n                    var infl = data.subarray(b, b + sc);\n                    // Synchronously decompress under 512KB, or barely-compressed data\n                    if (su < 524288 || sc > 0.8 * su) {\n                        try {\n                            cbl(null, inflateSync(infl, {\n                                out: new u8(su)\n                            }));\n                        } catch (e) {\n                            cbl(e, null);\n                        }\n                    } else term.push(inflate(infl, {\n                        size: su\n                    }, cbl));\n                } else cbl(err(14, \"unknown compression type \" + c_1, 1), null);\n            } else cbl(null, null);\n        };\n        for(var i = 0; i < c; ++i){\n            _loop_3(i);\n        }\n    } else cbd(null, {});\n    return tAll;\n}\n/**\n * Synchronously decompresses a ZIP archive. Prefer using `unzip` for better\n * performance with more than one file.\n * @param data The raw compressed ZIP file\n * @param opts The ZIP extraction options\n * @returns The decompressed files\n */ function unzipSync(data, opts) {\n    var files = {};\n    var e = data.length - 22;\n    for(; b4(data, e) != 0x6054B50; --e){\n        if (!e || data.length - e > 65558) err(13);\n    }\n    ;\n    var c = b2(data, e + 8);\n    if (!c) return {};\n    var o = b4(data, e + 16);\n    var z = o == 4294967295 || c == 65535;\n    if (z) {\n        var ze = b4(data, e - 12);\n        z = b4(data, ze) == 0x6064B50;\n        if (z) {\n            c = b4(data, ze + 32);\n            o = b4(data, ze + 48);\n        }\n    }\n    var fltr = opts && opts.filter;\n    for(var i = 0; i < c; ++i){\n        var _a = zh(data, o, z), c_2 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n        o = no;\n        if (!fltr || fltr({\n            name: fn,\n            size: sc,\n            originalSize: su,\n            compression: c_2\n        })) {\n            if (!c_2) files[fn] = slc(data, b, b + sc);\n            else if (c_2 == 8) files[fn] = inflateSync(data.subarray(b, b + sc), {\n                out: new u8(su)\n            });\n            else err(14, \"unknown compression type \" + c_2);\n        }\n    }\n    return files;\n}\nvar _c;\n$RefreshReg$(_c, \"StrmOpt\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/fflate/esm/browser.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/jspdf/dist/jspdf.es.min.js":
/*!*************************************************!*\
  !*** ./node_modules/jspdf/dist/jspdf.es.min.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AcroForm: function() { return /* binding */ St; },\n/* harmony export */   AcroFormAppearance: function() { return /* binding */ At; },\n/* harmony export */   AcroFormButton: function() { return /* binding */ mt; },\n/* harmony export */   AcroFormCheckBox: function() { return /* binding */ wt; },\n/* harmony export */   AcroFormChoiceField: function() { return /* binding */ ft; },\n/* harmony export */   AcroFormComboBox: function() { return /* binding */ pt; },\n/* harmony export */   AcroFormEditBox: function() { return /* binding */ gt; },\n/* harmony export */   AcroFormListBox: function() { return /* binding */ dt; },\n/* harmony export */   AcroFormPasswordField: function() { return /* binding */ Lt; },\n/* harmony export */   AcroFormPushButton: function() { return /* binding */ vt; },\n/* harmony export */   AcroFormRadioButton: function() { return /* binding */ bt; },\n/* harmony export */   AcroFormTextField: function() { return /* binding */ Nt; },\n/* harmony export */   GState: function() { return /* binding */ j; },\n/* harmony export */   ShadingPattern: function() { return /* binding */ B; },\n/* harmony export */   TilingPattern: function() { return /* binding */ M; },\n/* harmony export */   \"default\": function() { return /* binding */ E; },\n/* harmony export */   jsPDF: function() { return /* binding */ E; }\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/typeof */ \"(app-pages-browser)/./node_modules/@babel/runtime/helpers/esm/typeof.js\");\n/* harmony import */ var fflate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! fflate */ \"(app-pages-browser)/./node_modules/fflate/esm/browser.js\");\n/** @license\n *\n * jsPDF - PDF Document creation from JavaScript\n * Version 3.0.1 Built on 2025-03-17T14:19:36.873Z\n *                      CommitID 00000000\n *\n * Copyright (c) 2010-2021 James Hall <james@parall.ax>, https://github.com/MrRio/jsPDF\n *               2015-2021 yWorks GmbH, http://www.yworks.com\n *               2015-2021 Lukas Holländer <lukas.hollaender@yworks.com>, https://github.com/HackbrettXXX\n *               2016-2018 Aras Abbasi <aras.abbasi@gmail.com>\n *               2010 Aaron Spike, https://github.com/acspike\n *               2012 Willow Systems Corporation, https://github.com/willowsystems\n *               2012 Pablo Hess, https://github.com/pablohess\n *               2012 Florian Jenett, https://github.com/fjenett\n *               2013 Warren Weckesser, https://github.com/warrenweckesser\n *               2013 Youssef Beddad, https://github.com/lifof\n *               2013 Lee Driscoll, https://github.com/lsdriscoll\n *               2013 Stefan Slonevskiy, https://github.com/stefslon\n *               2013 Jeremy Morel, https://github.com/jmorel\n *               2013 Christoph Hartmann, https://github.com/chris-rock\n *               2014 Juan Pablo Gaviria, https://github.com/juanpgaviria\n *               2014 James Makes, https://github.com/dollaruw\n *               2014 Diego Casorran, https://github.com/diegocr\n *               2014 Steven Spungin, https://github.com/Flamenco\n *               2014 Kenneth Glassey, https://github.com/Gavvers\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n *\n * Contributor(s):\n *    siefkenj, ahwolf, rickygu, Midnith, saintclair, eaparango,\n *    kim3er, mfo, alnorth, Flamenco\n */ \n\nvar n = function() {\n    return  true ? window : 0;\n}();\nfunction i() {\n    n.console && \"function\" == typeof n.console.log && n.console.log.apply(n.console, arguments);\n}\nvar a = {\n    log: i,\n    warn: function(t) {\n        n.console && (\"function\" == typeof n.console.warn ? n.console.warn.apply(n.console, arguments) : i.call(null, arguments));\n    },\n    error: function(t) {\n        n.console && (\"function\" == typeof n.console.error ? n.console.error.apply(n.console, arguments) : i(t));\n    }\n};\nfunction o(t, e, r) {\n    var n = new XMLHttpRequest;\n    n.open(\"GET\", t), n.responseType = \"blob\", n.onload = function() {\n        l(n.response, e, r);\n    }, n.onerror = function() {\n        a.error(\"could not download file\");\n    }, n.send();\n}\nfunction s(t) {\n    var e = new XMLHttpRequest;\n    e.open(\"HEAD\", t, !1);\n    try {\n        e.send();\n    } catch (t) {}\n    return e.status >= 200 && e.status <= 299;\n}\nfunction c(t) {\n    try {\n        t.dispatchEvent(new MouseEvent(\"click\"));\n    } catch (r) {\n        var e = document.createEvent(\"MouseEvents\");\n        e.initMouseEvent(\"click\", !0, !0, window, 0, 0, 0, 80, 20, !1, !1, !1, !1, 0, null), t.dispatchEvent(e);\n    }\n}\nvar u, h, l = n.saveAs || (\"object\" !== ( false ? 0 : (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(window)) || window !== n ? function() {} : \"undefined\" != typeof HTMLAnchorElement && \"download\" in HTMLAnchorElement.prototype ? function(t, e, r) {\n    var i = n.URL || n.webkitURL, a = document.createElement(\"a\");\n    e = e || t.name || \"download\", a.download = e, a.rel = \"noopener\", \"string\" == typeof t ? (a.href = t, a.origin !== location.origin ? s(a.href) ? o(t, e, r) : c(a, a.target = \"_blank\") : c(a)) : (a.href = i.createObjectURL(t), setTimeout(function() {\n        i.revokeObjectURL(a.href);\n    }, 4e4), setTimeout(function() {\n        c(a);\n    }, 0));\n} : \"msSaveOrOpenBlob\" in navigator ? function(e, r, n) {\n    if (r = r || e.name || \"download\", \"string\" == typeof e) if (s(e)) o(e, r, n);\n    else {\n        var i = document.createElement(\"a\");\n        i.href = e, i.target = \"_blank\", setTimeout(function() {\n            c(i);\n        });\n    }\n    else navigator.msSaveOrOpenBlob(function(e, r) {\n        return void 0 === r ? r = {\n            autoBom: !1\n        } : \"object\" !== (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(r) && (a.warn(\"Deprecated: Expected third argument to be a object\"), r = {\n            autoBom: !r\n        }), r.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(e.type) ? new Blob([\n            String.fromCharCode(65279),\n            e\n        ], {\n            type: e.type\n        }) : e;\n    }(e, n), r);\n} : function(e, r, i, a) {\n    if ((a = a || open(\"\", \"_blank\")) && (a.document.title = a.document.body.innerText = \"downloading...\"), \"string\" == typeof e) return o(e, r, i);\n    var s = \"application/octet-stream\" === e.type, c = /constructor/i.test(n.HTMLElement) || n.safari, u = /CriOS\\/[\\d]+/.test(navigator.userAgent);\n    if ((u || s && c) && \"object\" === (\"undefined\" == typeof FileReader ? \"undefined\" : (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(FileReader))) {\n        var h = new FileReader;\n        h.onloadend = function() {\n            var t = h.result;\n            t = u ? t : t.replace(/^data:[^;]*;/, \"data:attachment/file;\"), a ? a.location.href = t : location = t, a = null;\n        }, h.readAsDataURL(e);\n    } else {\n        var l = n.URL || n.webkitURL, f = l.createObjectURL(e);\n        a ? a.location = f : location.href = f, a = null, setTimeout(function() {\n            l.revokeObjectURL(f);\n        }, 4e4);\n    }\n});\n/**\n * A class to parse color values\n * @author Stoyan Stefanov <sstoo@gmail.com>\n * {@link   http://www.phpied.com/rgb-color-parser-in-javascript/}\n * @license Use it if you like it\n */ function f(t) {\n    var e;\n    t = t || \"\", this.ok = !1, \"#\" == t.charAt(0) && (t = t.substr(1, 6));\n    t = ({\n        aliceblue: \"f0f8ff\",\n        antiquewhite: \"faebd7\",\n        aqua: \"00ffff\",\n        aquamarine: \"7fffd4\",\n        azure: \"f0ffff\",\n        beige: \"f5f5dc\",\n        bisque: \"ffe4c4\",\n        black: \"000000\",\n        blanchedalmond: \"ffebcd\",\n        blue: \"0000ff\",\n        blueviolet: \"8a2be2\",\n        brown: \"a52a2a\",\n        burlywood: \"deb887\",\n        cadetblue: \"5f9ea0\",\n        chartreuse: \"7fff00\",\n        chocolate: \"d2691e\",\n        coral: \"ff7f50\",\n        cornflowerblue: \"6495ed\",\n        cornsilk: \"fff8dc\",\n        crimson: \"dc143c\",\n        cyan: \"00ffff\",\n        darkblue: \"00008b\",\n        darkcyan: \"008b8b\",\n        darkgoldenrod: \"b8860b\",\n        darkgray: \"a9a9a9\",\n        darkgreen: \"006400\",\n        darkkhaki: \"bdb76b\",\n        darkmagenta: \"8b008b\",\n        darkolivegreen: \"556b2f\",\n        darkorange: \"ff8c00\",\n        darkorchid: \"9932cc\",\n        darkred: \"8b0000\",\n        darksalmon: \"e9967a\",\n        darkseagreen: \"8fbc8f\",\n        darkslateblue: \"483d8b\",\n        darkslategray: \"2f4f4f\",\n        darkturquoise: \"00ced1\",\n        darkviolet: \"9400d3\",\n        deeppink: \"ff1493\",\n        deepskyblue: \"00bfff\",\n        dimgray: \"696969\",\n        dodgerblue: \"1e90ff\",\n        feldspar: \"d19275\",\n        firebrick: \"b22222\",\n        floralwhite: \"fffaf0\",\n        forestgreen: \"228b22\",\n        fuchsia: \"ff00ff\",\n        gainsboro: \"dcdcdc\",\n        ghostwhite: \"f8f8ff\",\n        gold: \"ffd700\",\n        goldenrod: \"daa520\",\n        gray: \"808080\",\n        green: \"008000\",\n        greenyellow: \"adff2f\",\n        honeydew: \"f0fff0\",\n        hotpink: \"ff69b4\",\n        indianred: \"cd5c5c\",\n        indigo: \"4b0082\",\n        ivory: \"fffff0\",\n        khaki: \"f0e68c\",\n        lavender: \"e6e6fa\",\n        lavenderblush: \"fff0f5\",\n        lawngreen: \"7cfc00\",\n        lemonchiffon: \"fffacd\",\n        lightblue: \"add8e6\",\n        lightcoral: \"f08080\",\n        lightcyan: \"e0ffff\",\n        lightgoldenrodyellow: \"fafad2\",\n        lightgrey: \"d3d3d3\",\n        lightgreen: \"90ee90\",\n        lightpink: \"ffb6c1\",\n        lightsalmon: \"ffa07a\",\n        lightseagreen: \"20b2aa\",\n        lightskyblue: \"87cefa\",\n        lightslateblue: \"8470ff\",\n        lightslategray: \"778899\",\n        lightsteelblue: \"b0c4de\",\n        lightyellow: \"ffffe0\",\n        lime: \"00ff00\",\n        limegreen: \"32cd32\",\n        linen: \"faf0e6\",\n        magenta: \"ff00ff\",\n        maroon: \"800000\",\n        mediumaquamarine: \"66cdaa\",\n        mediumblue: \"0000cd\",\n        mediumorchid: \"ba55d3\",\n        mediumpurple: \"9370d8\",\n        mediumseagreen: \"3cb371\",\n        mediumslateblue: \"7b68ee\",\n        mediumspringgreen: \"00fa9a\",\n        mediumturquoise: \"48d1cc\",\n        mediumvioletred: \"c71585\",\n        midnightblue: \"191970\",\n        mintcream: \"f5fffa\",\n        mistyrose: \"ffe4e1\",\n        moccasin: \"ffe4b5\",\n        navajowhite: \"ffdead\",\n        navy: \"000080\",\n        oldlace: \"fdf5e6\",\n        olive: \"808000\",\n        olivedrab: \"6b8e23\",\n        orange: \"ffa500\",\n        orangered: \"ff4500\",\n        orchid: \"da70d6\",\n        palegoldenrod: \"eee8aa\",\n        palegreen: \"98fb98\",\n        paleturquoise: \"afeeee\",\n        palevioletred: \"d87093\",\n        papayawhip: \"ffefd5\",\n        peachpuff: \"ffdab9\",\n        peru: \"cd853f\",\n        pink: \"ffc0cb\",\n        plum: \"dda0dd\",\n        powderblue: \"b0e0e6\",\n        purple: \"800080\",\n        red: \"ff0000\",\n        rosybrown: \"bc8f8f\",\n        royalblue: \"4169e1\",\n        saddlebrown: \"8b4513\",\n        salmon: \"fa8072\",\n        sandybrown: \"f4a460\",\n        seagreen: \"2e8b57\",\n        seashell: \"fff5ee\",\n        sienna: \"a0522d\",\n        silver: \"c0c0c0\",\n        skyblue: \"87ceeb\",\n        slateblue: \"6a5acd\",\n        slategray: \"708090\",\n        snow: \"fffafa\",\n        springgreen: \"00ff7f\",\n        steelblue: \"4682b4\",\n        tan: \"d2b48c\",\n        teal: \"008080\",\n        thistle: \"d8bfd8\",\n        tomato: \"ff6347\",\n        turquoise: \"40e0d0\",\n        violet: \"ee82ee\",\n        violetred: \"d02090\",\n        wheat: \"f5deb3\",\n        white: \"ffffff\",\n        whitesmoke: \"f5f5f5\",\n        yellow: \"ffff00\",\n        yellowgreen: \"9acd32\"\n    })[t = (t = t.replace(/ /g, \"\")).toLowerCase()] || t;\n    for(var r = [\n        {\n            re: /^rgb\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})\\)$/,\n            example: [\n                \"rgb(123, 234, 45)\",\n                \"rgb(255,234,245)\"\n            ],\n            process: function(t) {\n                return [\n                    parseInt(t[1]),\n                    parseInt(t[2]),\n                    parseInt(t[3])\n                ];\n            }\n        },\n        {\n            re: /^(\\w{2})(\\w{2})(\\w{2})$/,\n            example: [\n                \"#00ff00\",\n                \"336699\"\n            ],\n            process: function(t) {\n                return [\n                    parseInt(t[1], 16),\n                    parseInt(t[2], 16),\n                    parseInt(t[3], 16)\n                ];\n            }\n        },\n        {\n            re: /^(\\w{1})(\\w{1})(\\w{1})$/,\n            example: [\n                \"#fb0\",\n                \"f0f\"\n            ],\n            process: function(t) {\n                return [\n                    parseInt(t[1] + t[1], 16),\n                    parseInt(t[2] + t[2], 16),\n                    parseInt(t[3] + t[3], 16)\n                ];\n            }\n        }\n    ], n = 0; n < r.length; n++){\n        var i = r[n].re, a = r[n].process, o = i.exec(t);\n        o && (e = a(o), this.r = e[0], this.g = e[1], this.b = e[2], this.ok = !0);\n    }\n    this.r = this.r < 0 || isNaN(this.r) ? 0 : this.r > 255 ? 255 : this.r, this.g = this.g < 0 || isNaN(this.g) ? 0 : this.g > 255 ? 255 : this.g, this.b = this.b < 0 || isNaN(this.b) ? 0 : this.b > 255 ? 255 : this.b, this.toRGB = function() {\n        return \"rgb(\" + this.r + \", \" + this.g + \", \" + this.b + \")\";\n    }, this.toHex = function() {\n        var t = this.r.toString(16), e = this.g.toString(16), r = this.b.toString(16);\n        return 1 == t.length && (t = \"0\" + t), 1 == e.length && (e = \"0\" + e), 1 == r.length && (r = \"0\" + r), \"#\" + t + e + r;\n    };\n}\n/**\n * @license\n * Joseph Myers does not specify a particular license for his work.\n *\n * Author: Joseph Myers\n * Accessed from: http://www.myersdaily.org/joseph/javascript/md5.js\n *\n * Modified by: Owen Leong\n */ function d(t, e) {\n    var r = t[0], n = t[1], i = t[2], a = t[3];\n    r = g(r, n, i, a, e[0], 7, -680876936), a = g(a, r, n, i, e[1], 12, -389564586), i = g(i, a, r, n, e[2], 17, 606105819), n = g(n, i, a, r, e[3], 22, -1044525330), r = g(r, n, i, a, e[4], 7, -176418897), a = g(a, r, n, i, e[5], 12, 1200080426), i = g(i, a, r, n, e[6], 17, -1473231341), n = g(n, i, a, r, e[7], 22, -45705983), r = g(r, n, i, a, e[8], 7, 1770035416), a = g(a, r, n, i, e[9], 12, -1958414417), i = g(i, a, r, n, e[10], 17, -42063), n = g(n, i, a, r, e[11], 22, -1990404162), r = g(r, n, i, a, e[12], 7, 1804603682), a = g(a, r, n, i, e[13], 12, -40341101), i = g(i, a, r, n, e[14], 17, -1502002290), r = m(r, n = g(n, i, a, r, e[15], 22, 1236535329), i, a, e[1], 5, -165796510), a = m(a, r, n, i, e[6], 9, -1069501632), i = m(i, a, r, n, e[11], 14, 643717713), n = m(n, i, a, r, e[0], 20, -373897302), r = m(r, n, i, a, e[5], 5, -701558691), a = m(a, r, n, i, e[10], 9, 38016083), i = m(i, a, r, n, e[15], 14, -660478335), n = m(n, i, a, r, e[4], 20, -405537848), r = m(r, n, i, a, e[9], 5, 568446438), a = m(a, r, n, i, e[14], 9, -1019803690), i = m(i, a, r, n, e[3], 14, -187363961), n = m(n, i, a, r, e[8], 20, 1163531501), r = m(r, n, i, a, e[13], 5, -1444681467), a = m(a, r, n, i, e[2], 9, -51403784), i = m(i, a, r, n, e[7], 14, 1735328473), r = v(r, n = m(n, i, a, r, e[12], 20, -1926607734), i, a, e[5], 4, -378558), a = v(a, r, n, i, e[8], 11, -2022574463), i = v(i, a, r, n, e[11], 16, 1839030562), n = v(n, i, a, r, e[14], 23, -35309556), r = v(r, n, i, a, e[1], 4, -1530992060), a = v(a, r, n, i, e[4], 11, 1272893353), i = v(i, a, r, n, e[7], 16, -155497632), n = v(n, i, a, r, e[10], 23, -1094730640), r = v(r, n, i, a, e[13], 4, 681279174), a = v(a, r, n, i, e[0], 11, -358537222), i = v(i, a, r, n, e[3], 16, -722521979), n = v(n, i, a, r, e[6], 23, 76029189), r = v(r, n, i, a, e[9], 4, -640364487), a = v(a, r, n, i, e[12], 11, -421815835), i = v(i, a, r, n, e[15], 16, 530742520), r = b(r, n = v(n, i, a, r, e[2], 23, -995338651), i, a, e[0], 6, -198630844), a = b(a, r, n, i, e[7], 10, 1126891415), i = b(i, a, r, n, e[14], 15, -1416354905), n = b(n, i, a, r, e[5], 21, -57434055), r = b(r, n, i, a, e[12], 6, 1700485571), a = b(a, r, n, i, e[3], 10, -1894986606), i = b(i, a, r, n, e[10], 15, -1051523), n = b(n, i, a, r, e[1], 21, -2054922799), r = b(r, n, i, a, e[8], 6, 1873313359), a = b(a, r, n, i, e[15], 10, -30611744), i = b(i, a, r, n, e[6], 15, -1560198380), n = b(n, i, a, r, e[13], 21, 1309151649), r = b(r, n, i, a, e[4], 6, -145523070), a = b(a, r, n, i, e[11], 10, -1120210379), i = b(i, a, r, n, e[2], 15, 718787259), n = b(n, i, a, r, e[9], 21, -343485551), t[0] = _(r, t[0]), t[1] = _(n, t[1]), t[2] = _(i, t[2]), t[3] = _(a, t[3]);\n}\nfunction p(t, e, r, n, i, a) {\n    return e = _(_(e, t), _(n, a)), _(e << i | e >>> 32 - i, r);\n}\nfunction g(t, e, r, n, i, a, o) {\n    return p(e & r | ~e & n, t, e, i, a, o);\n}\nfunction m(t, e, r, n, i, a, o) {\n    return p(e & n | r & ~n, t, e, i, a, o);\n}\nfunction v(t, e, r, n, i, a, o) {\n    return p(e ^ r ^ n, t, e, i, a, o);\n}\nfunction b(t, e, r, n, i, a, o) {\n    return p(r ^ (e | ~n), t, e, i, a, o);\n}\nfunction y(t) {\n    var e, r = t.length, n = [\n        1732584193,\n        -271733879,\n        -1732584194,\n        271733878\n    ];\n    for(e = 64; e <= t.length; e += 64)d(n, w(t.substring(e - 64, e)));\n    t = t.substring(e - 64);\n    var i = [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0\n    ];\n    for(e = 0; e < t.length; e++)i[e >> 2] |= t.charCodeAt(e) << (e % 4 << 3);\n    if (i[e >> 2] |= 128 << (e % 4 << 3), e > 55) for(d(n, i), e = 0; e < 16; e++)i[e] = 0;\n    return i[14] = 8 * r, d(n, i), n;\n}\nfunction w(t) {\n    var e, r = [];\n    for(e = 0; e < 64; e += 4)r[e >> 2] = t.charCodeAt(e) + (t.charCodeAt(e + 1) << 8) + (t.charCodeAt(e + 2) << 16) + (t.charCodeAt(e + 3) << 24);\n    return r;\n}\nu = n.atob.bind(n), h = n.btoa.bind(n);\nvar N = \"0123456789abcdef\".split(\"\");\nfunction L(t) {\n    for(var e = \"\", r = 0; r < 4; r++)e += N[t >> 8 * r + 4 & 15] + N[t >> 8 * r & 15];\n    return e;\n}\n_c = L;\nfunction A(t) {\n    return String.fromCharCode((255 & t) >> 0, (65280 & t) >> 8, (16711680 & t) >> 16, (4278190080 & t) >> 24);\n}\n_c1 = A;\nfunction x(t) {\n    return y(t).map(A).join(\"\");\n}\nvar S = \"5d41402abc4b2a76b9719d911017c592\" != function(t) {\n    for(var e = 0; e < t.length; e++)t[e] = L(t[e]);\n    return t.join(\"\");\n}(y(\"hello\"));\nfunction _(t, e) {\n    if (S) {\n        var r = (65535 & t) + (65535 & e);\n        return (t >> 16) + (e >> 16) + (r >> 16) << 16 | 65535 & r;\n    }\n    return t + e & 4294967295;\n}\n/**\n * @license\n * FPDF is released under a permissive license: there is no usage restriction.\n * You may embed it freely in your application (commercial or not), with or\n * without modifications.\n *\n * Reference: http://www.fpdf.org/en/script/script37.php\n */ function P(t, e) {\n    var r, n, i, a;\n    if (t !== r) {\n        for(var o = (i = t, a = 1 + (256 / t.length >> 0), new Array(a + 1).join(i)), s = [], c = 0; c < 256; c++)s[c] = c;\n        var u = 0;\n        for(c = 0; c < 256; c++){\n            var h = s[c];\n            u = (u + h + o.charCodeAt(c)) % 256, s[c] = s[u], s[u] = h;\n        }\n        r = t, n = s;\n    } else s = n;\n    var l = e.length, f = 0, d = 0, p = \"\";\n    for(c = 0; c < l; c++)d = (d + (h = s[f = (f + 1) % 256])) % 256, s[f] = s[d], s[d] = h, o = s[(s[f] + s[d]) % 256], p += String.fromCharCode(e.charCodeAt(c) ^ o);\n    return p;\n}\n_c2 = P;\n/**\n * @license\n * Licensed under the MIT License.\n * http://opensource.org/licenses/mit-license\n * Author: Owen Leong (@owenl131)\n * Date: 15 Oct 2020\n * References:\n * https://www.cs.cmu.edu/~dst/Adobe/Gallery/anon21jul01-pdf-encryption.txt\n * https://github.com/foliojs/pdfkit/blob/master/lib/security.js\n * http://www.fpdf.org/en/script/script37.php\n */ var k = {\n    print: 4,\n    modify: 8,\n    copy: 16,\n    \"annot-forms\": 32\n};\nfunction I(t, e, r, n) {\n    this.v = 1, this.r = 2;\n    var i = 192;\n    t.forEach(function(t) {\n        if (void 0 !== k.perm) throw new Error(\"Invalid permission: \" + t);\n        i += k[t];\n    }), this.padding = \"(\\xbfN^Nu\\x8aAd\\x00NV\\xff\\xfa\\x01\\b..\\x00\\xb6\\xd0h>\\x80/\\f\\xa9\\xfedSiz\";\n    var a = (e + this.padding).substr(0, 32), o = (r + this.padding).substr(0, 32);\n    this.O = this.processOwnerPassword(a, o), this.P = -(1 + (255 ^ i)), this.encryptionKey = x(a + this.O + this.lsbFirstWord(this.P) + this.hexToBytes(n)).substr(0, 5), this.U = P(this.encryptionKey, this.padding);\n}\n_c3 = I;\nfunction F(t) {\n    if (/[^\\u0000-\\u00ff]/.test(t)) throw new Error(\"Invalid PDF Name Object: \" + t + \", Only accept ASCII characters.\");\n    for(var e = \"\", r = t.length, n = 0; n < r; n++){\n        var i = t.charCodeAt(n);\n        if (i < 33 || 35 === i || 37 === i || 40 === i || 41 === i || 47 === i || 60 === i || 62 === i || 91 === i || 93 === i || 123 === i || 125 === i || i > 126) e += \"#\" + (\"0\" + i.toString(16)).slice(-2);\n        else e += t[n];\n    }\n    return e;\n}\n_c4 = F;\nfunction C(e) {\n    if (\"object\" !== (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(e)) throw new Error(\"Invalid Context passed to initialize PubSub (jsPDF-module)\");\n    var r = {};\n    this.subscribe = function(t, e, n) {\n        if (n = n || !1, \"string\" != typeof t || \"function\" != typeof e || \"boolean\" != typeof n) throw new Error(\"Invalid arguments passed to PubSub.subscribe (jsPDF-module)\");\n        r.hasOwnProperty(t) || (r[t] = {});\n        var i = Math.random().toString(35);\n        return r[t][i] = [\n            e,\n            !!n\n        ], i;\n    }, this.unsubscribe = function(t) {\n        for(var e in r)if (r[e][t]) return delete r[e][t], 0 === Object.keys(r[e]).length && delete r[e], !0;\n        return !1;\n    }, this.publish = function(t) {\n        if (r.hasOwnProperty(t)) {\n            var i = Array.prototype.slice.call(arguments, 1), o = [];\n            for(var s in r[t]){\n                var c = r[t][s];\n                try {\n                    c[0].apply(e, i);\n                } catch (t) {\n                    n.console && a.error(\"jsPDF PubSub Error\", t.message, t);\n                }\n                c[1] && o.push(s);\n            }\n            o.length && o.forEach(this.unsubscribe);\n        }\n    }, this.getTopics = function() {\n        return r;\n    };\n}\n_c5 = C;\nfunction j(t) {\n    if (!(this instanceof j)) return new j(t);\n    var e = \"opacity,stroke-opacity\".split(\",\");\n    for(var r in t)t.hasOwnProperty(r) && e.indexOf(r) >= 0 && (this[r] = t[r]);\n    this.id = \"\", this.objectNumber = -1;\n}\nfunction O(t, e) {\n    this.gState = t, this.matrix = e, this.id = \"\", this.objectNumber = -1;\n}\n_c6 = O;\nfunction B(t, e, r, n, i) {\n    if (!(this instanceof B)) return new B(t, e, r, n, i);\n    this.type = \"axial\" === t ? 2 : 3, this.coords = e, this.colors = r, O.call(this, n, i);\n}\n_c7 = B;\nfunction M(t, e, r, n, i) {\n    if (!(this instanceof M)) return new M(t, e, r, n, i);\n    this.boundingBox = t, this.xStep = e, this.yStep = r, this.stream = \"\", this.cloneIndex = 0, O.call(this, n, i);\n}\n_c8 = M;\nfunction E(e) {\n    var r, i = \"string\" == typeof arguments[0] ? arguments[0] : \"p\", o = arguments[1], s = arguments[2], c = arguments[3], u = [], d = 1, p = 16, g = \"S\", m = null;\n    \"object\" === (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(e = e || {}) && (i = e.orientation, o = e.unit || o, s = e.format || s, c = e.compress || e.compressPdf || c, null !== (m = e.encryption || null) && (m.userPassword = m.userPassword || \"\", m.ownerPassword = m.ownerPassword || \"\", m.userPermissions = m.userPermissions || []), d = \"number\" == typeof e.userUnit ? Math.abs(e.userUnit) : 1, void 0 !== e.precision && (r = e.precision), void 0 !== e.floatPrecision && (p = e.floatPrecision), g = e.defaultPathOperation || \"S\"), u = e.filters || (!0 === c ? [\n        \"FlateEncode\"\n    ] : u), o = o || \"mm\", i = (\"\" + (i || \"P\")).toLowerCase();\n    var v = e.putOnlyUsedFonts || !1, b = {}, y = {\n        internal: {},\n        __private__: {}\n    };\n    y.__private__.PubSub = C;\n    var w = \"1.3\", N = y.__private__.getPdfVersion = function() {\n        return w;\n    };\n    y.__private__.setPdfVersion = function(t) {\n        w = t;\n    };\n    var L = {\n        a0: [\n            2383.94,\n            3370.39\n        ],\n        a1: [\n            1683.78,\n            2383.94\n        ],\n        a2: [\n            1190.55,\n            1683.78\n        ],\n        a3: [\n            841.89,\n            1190.55\n        ],\n        a4: [\n            595.28,\n            841.89\n        ],\n        a5: [\n            419.53,\n            595.28\n        ],\n        a6: [\n            297.64,\n            419.53\n        ],\n        a7: [\n            209.76,\n            297.64\n        ],\n        a8: [\n            147.4,\n            209.76\n        ],\n        a9: [\n            104.88,\n            147.4\n        ],\n        a10: [\n            73.7,\n            104.88\n        ],\n        b0: [\n            2834.65,\n            4008.19\n        ],\n        b1: [\n            2004.09,\n            2834.65\n        ],\n        b2: [\n            1417.32,\n            2004.09\n        ],\n        b3: [\n            1000.63,\n            1417.32\n        ],\n        b4: [\n            708.66,\n            1000.63\n        ],\n        b5: [\n            498.9,\n            708.66\n        ],\n        b6: [\n            354.33,\n            498.9\n        ],\n        b7: [\n            249.45,\n            354.33\n        ],\n        b8: [\n            175.75,\n            249.45\n        ],\n        b9: [\n            124.72,\n            175.75\n        ],\n        b10: [\n            87.87,\n            124.72\n        ],\n        c0: [\n            2599.37,\n            3676.54\n        ],\n        c1: [\n            1836.85,\n            2599.37\n        ],\n        c2: [\n            1298.27,\n            1836.85\n        ],\n        c3: [\n            918.43,\n            1298.27\n        ],\n        c4: [\n            649.13,\n            918.43\n        ],\n        c5: [\n            459.21,\n            649.13\n        ],\n        c6: [\n            323.15,\n            459.21\n        ],\n        c7: [\n            229.61,\n            323.15\n        ],\n        c8: [\n            161.57,\n            229.61\n        ],\n        c9: [\n            113.39,\n            161.57\n        ],\n        c10: [\n            79.37,\n            113.39\n        ],\n        dl: [\n            311.81,\n            623.62\n        ],\n        letter: [\n            612,\n            792\n        ],\n        \"government-letter\": [\n            576,\n            756\n        ],\n        legal: [\n            612,\n            1008\n        ],\n        \"junior-legal\": [\n            576,\n            360\n        ],\n        ledger: [\n            1224,\n            792\n        ],\n        tabloid: [\n            792,\n            1224\n        ],\n        \"credit-card\": [\n            153,\n            243\n        ]\n    };\n    y.__private__.getPageFormats = function() {\n        return L;\n    };\n    var A = y.__private__.getPageFormat = function(t) {\n        return L[t];\n    };\n    s = s || \"a4\";\n    var x = {\n        COMPAT: \"compat\",\n        ADVANCED: \"advanced\"\n    }, S = x.COMPAT;\n    function _() {\n        this.saveGraphicsState(), lt(new Vt(_t, 0, 0, -_t, 0, Rr() * _t).toString() + \" cm\"), this.setFontSize(this.getFontSize() / _t), g = \"n\", S = x.ADVANCED;\n    }\n    function P() {\n        this.restoreGraphicsState(), g = \"S\", S = x.COMPAT;\n    }\n    var k = y.__private__.combineFontStyleAndFontWeight = function(t, e) {\n        if (\"bold\" == t && \"normal\" == e || \"bold\" == t && 400 == e || \"normal\" == t && \"italic\" == e || \"bold\" == t && \"italic\" == e) throw new Error(\"Invalid Combination of fontweight and fontstyle\");\n        return e && (t = 400 == e || \"normal\" === e ? \"italic\" === t ? \"italic\" : \"normal\" : 700 != e && \"bold\" !== e || \"normal\" !== t ? (700 == e ? \"bold\" : e) + \"\" + t : \"bold\"), t;\n    };\n    y.advancedAPI = function(t) {\n        var e = S === x.COMPAT;\n        return e && _.call(this), \"function\" != typeof t || (t(this), e && P.call(this)), this;\n    }, y.compatAPI = function(t) {\n        var e = S === x.ADVANCED;\n        return e && P.call(this), \"function\" != typeof t || (t(this), e && _.call(this)), this;\n    }, y.isAdvancedAPI = function() {\n        return S === x.ADVANCED;\n    };\n    var O, q = function(t) {\n        if (S !== x.ADVANCED) throw new Error(t + \" is only available in 'advanced' API mode. You need to call advancedAPI() first.\");\n    }, D = y.roundToPrecision = y.__private__.roundToPrecision = function(t, e) {\n        var n = r || e;\n        if (isNaN(t) || isNaN(n)) throw new Error(\"Invalid argument passed to jsPDF.roundToPrecision\");\n        return t.toFixed(n).replace(/0+$/, \"\");\n    };\n    O = y.hpf = y.__private__.hpf = \"number\" == typeof p ? function(t) {\n        if (isNaN(t)) throw new Error(\"Invalid argument passed to jsPDF.hpf\");\n        return D(t, p);\n    } : \"smart\" === p ? function(t) {\n        if (isNaN(t)) throw new Error(\"Invalid argument passed to jsPDF.hpf\");\n        return D(t, t > -1 && t < 1 ? 16 : 5);\n    } : function(t) {\n        if (isNaN(t)) throw new Error(\"Invalid argument passed to jsPDF.hpf\");\n        return D(t, 16);\n    };\n    var R = y.f2 = y.__private__.f2 = function(t) {\n        if (isNaN(t)) throw new Error(\"Invalid argument passed to jsPDF.f2\");\n        return D(t, 2);\n    }, T = y.__private__.f3 = function(t) {\n        if (isNaN(t)) throw new Error(\"Invalid argument passed to jsPDF.f3\");\n        return D(t, 3);\n    }, U = y.scale = y.__private__.scale = function(t) {\n        if (isNaN(t)) throw new Error(\"Invalid argument passed to jsPDF.scale\");\n        return S === x.COMPAT ? t * _t : S === x.ADVANCED ? t : void 0;\n    }, z = function(t) {\n        return S === x.COMPAT ? Rr() - t : S === x.ADVANCED ? t : void 0;\n    }, H = function(t) {\n        return U(z(t));\n    };\n    y.__private__.setPrecision = y.setPrecision = function(t) {\n        \"number\" == typeof parseInt(t, 10) && (r = parseInt(t, 10));\n    };\n    var W, V = \"00000000000000000000000000000000\", G = y.__private__.getFileId = function() {\n        return V;\n    }, Y = y.__private__.setFileId = function(t) {\n        return V = void 0 !== t && /^[a-fA-F0-9]{32}$/.test(t) ? t.toUpperCase() : V.split(\"\").map(function() {\n            return \"ABCDEF0123456789\".charAt(Math.floor(16 * Math.random()));\n        }).join(\"\"), null !== m && (Ye = new I(m.userPermissions, m.userPassword, m.ownerPassword, V)), V;\n    };\n    y.setFileId = function(t) {\n        return Y(t), this;\n    }, y.getFileId = function() {\n        return G();\n    };\n    var J = y.__private__.convertDateToPDFDate = function(t) {\n        var e = t.getTimezoneOffset(), r = e < 0 ? \"+\" : \"-\", n = Math.floor(Math.abs(e / 60)), i = Math.abs(e % 60), a = [\n            r,\n            Q(n),\n            \"'\",\n            Q(i),\n            \"'\"\n        ].join(\"\");\n        return [\n            \"D:\",\n            t.getFullYear(),\n            Q(t.getMonth() + 1),\n            Q(t.getDate()),\n            Q(t.getHours()),\n            Q(t.getMinutes()),\n            Q(t.getSeconds()),\n            a\n        ].join(\"\");\n    }, X = y.__private__.convertPDFDateToDate = function(t) {\n        var e = parseInt(t.substr(2, 4), 10), r = parseInt(t.substr(6, 2), 10) - 1, n = parseInt(t.substr(8, 2), 10), i = parseInt(t.substr(10, 2), 10), a = parseInt(t.substr(12, 2), 10), o = parseInt(t.substr(14, 2), 10);\n        return new Date(e, r, n, i, a, o, 0);\n    }, K = y.__private__.setCreationDate = function(t) {\n        var e;\n        if (void 0 === t && (t = new Date), t instanceof Date) e = J(t);\n        else {\n            if (!/^D:(20[0-2][0-9]|203[0-7]|19[7-9][0-9])(0[0-9]|1[0-2])([0-2][0-9]|3[0-1])(0[0-9]|1[0-9]|2[0-3])(0[0-9]|[1-5][0-9])(0[0-9]|[1-5][0-9])(\\+0[0-9]|\\+1[0-4]|-0[0-9]|-1[0-1])'(0[0-9]|[1-5][0-9])'?$/.test(t)) throw new Error(\"Invalid argument passed to jsPDF.setCreationDate\");\n            e = t;\n        }\n        return W = e;\n    }, Z = y.__private__.getCreationDate = function(t) {\n        var e = W;\n        return \"jsDate\" === t && (e = X(W)), e;\n    };\n    y.setCreationDate = function(t) {\n        return K(t), this;\n    }, y.getCreationDate = function(t) {\n        return Z(t);\n    };\n    var $, Q = y.__private__.padd2 = function(t) {\n        return (\"0\" + parseInt(t)).slice(-2);\n    }, tt = y.__private__.padd2Hex = function(t) {\n        return (\"00\" + (t = t.toString())).substr(t.length);\n    }, et = 0, rt = [], nt = [], it = 0, at = [], ot = [], st = !1, ct = nt, ut = function() {\n        et = 0, it = 0, nt = [], rt = [], at = [], Qt = Kt(), te = Kt();\n    };\n    y.__private__.setCustomOutputDestination = function(t) {\n        st = !0, ct = t;\n    };\n    var ht = function(t) {\n        st || (ct = t);\n    };\n    y.__private__.resetCustomOutputDestination = function() {\n        st = !1, ct = nt;\n    };\n    var lt = y.__private__.out = function(t) {\n        return t = t.toString(), it += t.length + 1, ct.push(t), ct;\n    }, ft = y.__private__.write = function(t) {\n        return lt(1 === arguments.length ? t.toString() : Array.prototype.join.call(arguments, \" \"));\n    }, dt = y.__private__.getArrayBuffer = function(t) {\n        for(var e = t.length, r = new ArrayBuffer(e), n = new Uint8Array(r); e--;)n[e] = t.charCodeAt(e);\n        return r;\n    }, pt = [\n        [\n            \"Helvetica\",\n            \"helvetica\",\n            \"normal\",\n            \"WinAnsiEncoding\"\n        ],\n        [\n            \"Helvetica-Bold\",\n            \"helvetica\",\n            \"bold\",\n            \"WinAnsiEncoding\"\n        ],\n        [\n            \"Helvetica-Oblique\",\n            \"helvetica\",\n            \"italic\",\n            \"WinAnsiEncoding\"\n        ],\n        [\n            \"Helvetica-BoldOblique\",\n            \"helvetica\",\n            \"bolditalic\",\n            \"WinAnsiEncoding\"\n        ],\n        [\n            \"Courier\",\n            \"courier\",\n            \"normal\",\n            \"WinAnsiEncoding\"\n        ],\n        [\n            \"Courier-Bold\",\n            \"courier\",\n            \"bold\",\n            \"WinAnsiEncoding\"\n        ],\n        [\n            \"Courier-Oblique\",\n            \"courier\",\n            \"italic\",\n            \"WinAnsiEncoding\"\n        ],\n        [\n            \"Courier-BoldOblique\",\n            \"courier\",\n            \"bolditalic\",\n            \"WinAnsiEncoding\"\n        ],\n        [\n            \"Times-Roman\",\n            \"times\",\n            \"normal\",\n            \"WinAnsiEncoding\"\n        ],\n        [\n            \"Times-Bold\",\n            \"times\",\n            \"bold\",\n            \"WinAnsiEncoding\"\n        ],\n        [\n            \"Times-Italic\",\n            \"times\",\n            \"italic\",\n            \"WinAnsiEncoding\"\n        ],\n        [\n            \"Times-BoldItalic\",\n            \"times\",\n            \"bolditalic\",\n            \"WinAnsiEncoding\"\n        ],\n        [\n            \"ZapfDingbats\",\n            \"zapfdingbats\",\n            \"normal\",\n            null\n        ],\n        [\n            \"Symbol\",\n            \"symbol\",\n            \"normal\",\n            null\n        ]\n    ];\n    y.__private__.getStandardFonts = function() {\n        return pt;\n    };\n    var gt = e.fontSize || 16;\n    y.__private__.setFontSize = y.setFontSize = function(t) {\n        return gt = S === x.ADVANCED ? t / _t : t, this;\n    };\n    var mt, vt = y.__private__.getFontSize = y.getFontSize = function() {\n        return S === x.COMPAT ? gt : gt * _t;\n    }, bt = e.R2L || !1;\n    y.__private__.setR2L = y.setR2L = function(t) {\n        return bt = t, this;\n    }, y.__private__.getR2L = y.getR2L = function() {\n        return bt;\n    };\n    var yt, wt = y.__private__.setZoomMode = function(t) {\n        var e = [\n            void 0,\n            null,\n            \"fullwidth\",\n            \"fullheight\",\n            \"fullpage\",\n            \"original\"\n        ];\n        if (/^(?:\\d+\\.\\d*|\\d*\\.\\d+|\\d+)%$/.test(t)) mt = t;\n        else if (isNaN(t)) {\n            if (-1 === e.indexOf(t)) throw new Error('zoom must be Integer (e.g. 2), a percentage Value (e.g. 300%) or fullwidth, fullheight, fullpage, original. \"' + t + '\" is not recognized.');\n            mt = t;\n        } else mt = parseInt(t, 10);\n    };\n    y.__private__.getZoomMode = function() {\n        return mt;\n    };\n    var Nt, Lt = y.__private__.setPageMode = function(t) {\n        if (-1 == [\n            void 0,\n            null,\n            \"UseNone\",\n            \"UseOutlines\",\n            \"UseThumbs\",\n            \"FullScreen\"\n        ].indexOf(t)) throw new Error('Page mode must be one of UseNone, UseOutlines, UseThumbs, or FullScreen. \"' + t + '\" is not recognized.');\n        yt = t;\n    };\n    y.__private__.getPageMode = function() {\n        return yt;\n    };\n    var At = y.__private__.setLayoutMode = function(t) {\n        if (-1 == [\n            void 0,\n            null,\n            \"continuous\",\n            \"single\",\n            \"twoleft\",\n            \"tworight\",\n            \"two\"\n        ].indexOf(t)) throw new Error('Layout mode must be one of continuous, single, twoleft, tworight. \"' + t + '\" is not recognized.');\n        Nt = t;\n    };\n    y.__private__.getLayoutMode = function() {\n        return Nt;\n    }, y.__private__.setDisplayMode = y.setDisplayMode = function(t, e, r) {\n        return wt(t), At(e), Lt(r), this;\n    };\n    var xt = {\n        title: \"\",\n        subject: \"\",\n        author: \"\",\n        keywords: \"\",\n        creator: \"\"\n    };\n    y.__private__.getDocumentProperty = function(t) {\n        if (-1 === Object.keys(xt).indexOf(t)) throw new Error(\"Invalid argument passed to jsPDF.getDocumentProperty\");\n        return xt[t];\n    }, y.__private__.getDocumentProperties = function() {\n        return xt;\n    }, y.__private__.setDocumentProperties = y.setProperties = y.setDocumentProperties = function(t) {\n        for(var e in xt)xt.hasOwnProperty(e) && t[e] && (xt[e] = t[e]);\n        return this;\n    }, y.__private__.setDocumentProperty = function(t, e) {\n        if (-1 === Object.keys(xt).indexOf(t)) throw new Error(\"Invalid arguments passed to jsPDF.setDocumentProperty\");\n        return xt[t] = e;\n    };\n    var St, _t, Pt, kt, It, Ft = {}, Ct = {}, jt = [], Ot = {}, Bt = {}, Mt = {}, Et = {}, qt = null, Dt = 0, Rt = [], Tt = new C(y), Ut = e.hotfixes || [], zt = {}, Ht = {}, Wt = [], Vt = function t(e, r, n, i, a, o) {\n        if (!(this instanceof t)) return new t(e, r, n, i, a, o);\n        isNaN(e) && (e = 1), isNaN(r) && (r = 0), isNaN(n) && (n = 0), isNaN(i) && (i = 1), isNaN(a) && (a = 0), isNaN(o) && (o = 0), this._matrix = [\n            e,\n            r,\n            n,\n            i,\n            a,\n            o\n        ];\n    };\n    Object.defineProperty(Vt.prototype, \"sx\", {\n        get: function() {\n            return this._matrix[0];\n        },\n        set: function(t) {\n            this._matrix[0] = t;\n        }\n    }), Object.defineProperty(Vt.prototype, \"shy\", {\n        get: function() {\n            return this._matrix[1];\n        },\n        set: function(t) {\n            this._matrix[1] = t;\n        }\n    }), Object.defineProperty(Vt.prototype, \"shx\", {\n        get: function() {\n            return this._matrix[2];\n        },\n        set: function(t) {\n            this._matrix[2] = t;\n        }\n    }), Object.defineProperty(Vt.prototype, \"sy\", {\n        get: function() {\n            return this._matrix[3];\n        },\n        set: function(t) {\n            this._matrix[3] = t;\n        }\n    }), Object.defineProperty(Vt.prototype, \"tx\", {\n        get: function() {\n            return this._matrix[4];\n        },\n        set: function(t) {\n            this._matrix[4] = t;\n        }\n    }), Object.defineProperty(Vt.prototype, \"ty\", {\n        get: function() {\n            return this._matrix[5];\n        },\n        set: function(t) {\n            this._matrix[5] = t;\n        }\n    }), Object.defineProperty(Vt.prototype, \"a\", {\n        get: function() {\n            return this._matrix[0];\n        },\n        set: function(t) {\n            this._matrix[0] = t;\n        }\n    }), Object.defineProperty(Vt.prototype, \"b\", {\n        get: function() {\n            return this._matrix[1];\n        },\n        set: function(t) {\n            this._matrix[1] = t;\n        }\n    }), Object.defineProperty(Vt.prototype, \"c\", {\n        get: function() {\n            return this._matrix[2];\n        },\n        set: function(t) {\n            this._matrix[2] = t;\n        }\n    }), Object.defineProperty(Vt.prototype, \"d\", {\n        get: function() {\n            return this._matrix[3];\n        },\n        set: function(t) {\n            this._matrix[3] = t;\n        }\n    }), Object.defineProperty(Vt.prototype, \"e\", {\n        get: function() {\n            return this._matrix[4];\n        },\n        set: function(t) {\n            this._matrix[4] = t;\n        }\n    }), Object.defineProperty(Vt.prototype, \"f\", {\n        get: function() {\n            return this._matrix[5];\n        },\n        set: function(t) {\n            this._matrix[5] = t;\n        }\n    }), Object.defineProperty(Vt.prototype, \"rotation\", {\n        get: function() {\n            return Math.atan2(this.shx, this.sx);\n        }\n    }), Object.defineProperty(Vt.prototype, \"scaleX\", {\n        get: function() {\n            return this.decompose().scale.sx;\n        }\n    }), Object.defineProperty(Vt.prototype, \"scaleY\", {\n        get: function() {\n            return this.decompose().scale.sy;\n        }\n    }), Object.defineProperty(Vt.prototype, \"isIdentity\", {\n        get: function() {\n            return 1 === this.sx && 0 === this.shy && 0 === this.shx && 1 === this.sy && 0 === this.tx && 0 === this.ty;\n        }\n    }), Vt.prototype.join = function(t) {\n        return [\n            this.sx,\n            this.shy,\n            this.shx,\n            this.sy,\n            this.tx,\n            this.ty\n        ].map(O).join(t);\n    }, Vt.prototype.multiply = function(t) {\n        var e = t.sx * this.sx + t.shy * this.shx, r = t.sx * this.shy + t.shy * this.sy, n = t.shx * this.sx + t.sy * this.shx, i = t.shx * this.shy + t.sy * this.sy, a = t.tx * this.sx + t.ty * this.shx + this.tx, o = t.tx * this.shy + t.ty * this.sy + this.ty;\n        return new Vt(e, r, n, i, a, o);\n    }, Vt.prototype.decompose = function() {\n        var t = this.sx, e = this.shy, r = this.shx, n = this.sy, i = this.tx, a = this.ty, o = Math.sqrt(t * t + e * e), s = (t /= o) * r + (e /= o) * n;\n        r -= t * s, n -= e * s;\n        var c = Math.sqrt(r * r + n * n);\n        return s /= c, t * (n /= c) < e * (r /= c) && (t = -t, e = -e, s = -s, o = -o), {\n            scale: new Vt(o, 0, 0, c, 0, 0),\n            translate: new Vt(1, 0, 0, 1, i, a),\n            rotate: new Vt(t, e, -e, t, 0, 0),\n            skew: new Vt(1, 0, s, 1, 0, 0)\n        };\n    }, Vt.prototype.toString = function(t) {\n        return this.join(\" \");\n    }, Vt.prototype.inversed = function() {\n        var t = this.sx, e = this.shy, r = this.shx, n = this.sy, i = this.tx, a = this.ty, o = 1 / (t * n - e * r), s = n * o, c = -e * o, u = -r * o, h = t * o;\n        return new Vt(s, c, u, h, -s * i - u * a, -c * i - h * a);\n    }, Vt.prototype.applyToPoint = function(t) {\n        var e = t.x * this.sx + t.y * this.shx + this.tx, r = t.x * this.shy + t.y * this.sy + this.ty;\n        return new Cr(e, r);\n    }, Vt.prototype.applyToRectangle = function(t) {\n        var e = this.applyToPoint(t), r = this.applyToPoint(new Cr(t.x + t.w, t.y + t.h));\n        return new jr(e.x, e.y, r.x - e.x, r.y - e.y);\n    }, Vt.prototype.clone = function() {\n        var t = this.sx, e = this.shy, r = this.shx, n = this.sy, i = this.tx, a = this.ty;\n        return new Vt(t, e, r, n, i, a);\n    }, y.Matrix = Vt;\n    var Gt = y.matrixMult = function(t, e) {\n        return e.multiply(t);\n    }, Yt = new Vt(1, 0, 0, 1, 0, 0);\n    y.unitMatrix = y.identityMatrix = Yt;\n    var Jt = function(t, e) {\n        if (!Bt[t]) {\n            var r = (e instanceof B ? \"Sh\" : \"P\") + (Object.keys(Ot).length + 1).toString(10);\n            e.id = r, Bt[t] = r, Ot[r] = e, Tt.publish(\"addPattern\", e);\n        }\n    };\n    y.ShadingPattern = B, y.TilingPattern = M, y.addShadingPattern = function(t, e) {\n        return q(\"addShadingPattern()\"), Jt(t, e), this;\n    }, y.beginTilingPattern = function(t) {\n        q(\"beginTilingPattern()\"), Br(t.boundingBox[0], t.boundingBox[1], t.boundingBox[2] - t.boundingBox[0], t.boundingBox[3] - t.boundingBox[1], t.matrix);\n    }, y.endTilingPattern = function(t, e) {\n        q(\"endTilingPattern()\"), e.stream = ot[$].join(\"\\n\"), Jt(t, e), Tt.publish(\"endTilingPattern\", e), Wt.pop().restore();\n    };\n    var Xt = y.__private__.newObject = function() {\n        var t = Kt();\n        return Zt(t, !0), t;\n    }, Kt = y.__private__.newObjectDeferred = function() {\n        return et++, rt[et] = function() {\n            return it;\n        }, et;\n    }, Zt = function(t, e) {\n        return e = \"boolean\" == typeof e && e, rt[t] = it, e && lt(t + \" 0 obj\"), t;\n    }, $t = y.__private__.newAdditionalObject = function() {\n        var t = {\n            objId: Kt(),\n            content: \"\"\n        };\n        return at.push(t), t;\n    }, Qt = Kt(), te = Kt(), ee = y.__private__.decodeColorString = function(t) {\n        var e = t.split(\" \");\n        if (2 !== e.length || \"g\" !== e[1] && \"G\" !== e[1]) {\n            if (5 === e.length && (\"k\" === e[4] || \"K\" === e[4])) {\n                e = [\n                    (1 - e[0]) * (1 - e[3]),\n                    (1 - e[1]) * (1 - e[3]),\n                    (1 - e[2]) * (1 - e[3]),\n                    \"r\"\n                ];\n            }\n        } else {\n            var r = parseFloat(e[0]);\n            e = [\n                r,\n                r,\n                r,\n                \"r\"\n            ];\n        }\n        for(var n = \"#\", i = 0; i < 3; i++)n += (\"0\" + Math.floor(255 * parseFloat(e[i])).toString(16)).slice(-2);\n        return n;\n    }, re = y.__private__.encodeColorString = function(e) {\n        var r;\n        \"string\" == typeof e && (e = {\n            ch1: e\n        });\n        var n = e.ch1, i = e.ch2, a = e.ch3, o = e.ch4, s = \"draw\" === e.pdfColorType ? [\n            \"G\",\n            \"RG\",\n            \"K\"\n        ] : [\n            \"g\",\n            \"rg\",\n            \"k\"\n        ];\n        if (\"string\" == typeof n && \"#\" !== n.charAt(0)) {\n            var c = new f(n);\n            if (c.ok) n = c.toHex();\n            else if (!/^\\d*\\.?\\d*$/.test(n)) throw new Error('Invalid color \"' + n + '\" passed to jsPDF.encodeColorString.');\n        }\n        if (\"string\" == typeof n && /^#[0-9A-Fa-f]{3}$/.test(n) && (n = \"#\" + n[1] + n[1] + n[2] + n[2] + n[3] + n[3]), \"string\" == typeof n && /^#[0-9A-Fa-f]{6}$/.test(n)) {\n            var u = parseInt(n.substr(1), 16);\n            n = u >> 16 & 255, i = u >> 8 & 255, a = 255 & u;\n        }\n        if (void 0 === i || void 0 === o && n === i && i === a) if (\"string\" == typeof n) r = n + \" \" + s[0];\n        else switch(e.precision){\n            case 2:\n                r = R(n / 255) + \" \" + s[0];\n                break;\n            case 3:\n            default:\n                r = T(n / 255) + \" \" + s[0];\n        }\n        else if (void 0 === o || \"object\" === (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(o)) {\n            if (o && !isNaN(o.a) && 0 === o.a) return r = [\n                \"1.\",\n                \"1.\",\n                \"1.\",\n                s[1]\n            ].join(\" \");\n            if (\"string\" == typeof n) r = [\n                n,\n                i,\n                a,\n                s[1]\n            ].join(\" \");\n            else switch(e.precision){\n                case 2:\n                    r = [\n                        R(n / 255),\n                        R(i / 255),\n                        R(a / 255),\n                        s[1]\n                    ].join(\" \");\n                    break;\n                default:\n                case 3:\n                    r = [\n                        T(n / 255),\n                        T(i / 255),\n                        T(a / 255),\n                        s[1]\n                    ].join(\" \");\n            }\n        } else if (\"string\" == typeof n) r = [\n            n,\n            i,\n            a,\n            o,\n            s[2]\n        ].join(\" \");\n        else switch(e.precision){\n            case 2:\n                r = [\n                    R(n),\n                    R(i),\n                    R(a),\n                    R(o),\n                    s[2]\n                ].join(\" \");\n                break;\n            case 3:\n            default:\n                r = [\n                    T(n),\n                    T(i),\n                    T(a),\n                    T(o),\n                    s[2]\n                ].join(\" \");\n        }\n        return r;\n    }, ne = y.__private__.getFilters = function() {\n        return u;\n    }, ie = y.__private__.putStream = function(t) {\n        var e = (t = t || {}).data || \"\", r = t.filters || ne(), n = t.alreadyAppliedFilters || [], i = t.addLength1 || !1, a = e.length, o = t.objectId, s = function(t) {\n            return t;\n        };\n        if (null !== m && void 0 === o) throw new Error(\"ObjectId must be passed to putStream for file encryption\");\n        null !== m && (s = Ye.encryptor(o, 0));\n        var c = {};\n        !0 === r && (r = [\n            \"FlateEncode\"\n        ]);\n        var u = t.additionalKeyValues || [], h = (c = void 0 !== E.API.processDataByFilters ? E.API.processDataByFilters(e, r) : {\n            data: e,\n            reverseChain: []\n        }).reverseChain + (Array.isArray(n) ? n.join(\" \") : n.toString());\n        if (0 !== c.data.length && (u.push({\n            key: \"Length\",\n            value: c.data.length\n        }), !0 === i && u.push({\n            key: \"Length1\",\n            value: a\n        })), 0 != h.length) if (h.split(\"/\").length - 1 == 1) u.push({\n            key: \"Filter\",\n            value: h\n        });\n        else {\n            u.push({\n                key: \"Filter\",\n                value: \"[\" + h + \"]\"\n            });\n            for(var l = 0; l < u.length; l += 1)if (\"DecodeParms\" === u[l].key) {\n                for(var f = [], d = 0; d < c.reverseChain.split(\"/\").length - 1; d += 1)f.push(\"null\");\n                f.push(u[l].value), u[l].value = \"[\" + f.join(\" \") + \"]\";\n            }\n        }\n        lt(\"<<\");\n        for(var p = 0; p < u.length; p++)lt(\"/\" + u[p].key + \" \" + u[p].value);\n        lt(\">>\"), 0 !== c.data.length && (lt(\"stream\"), lt(s(c.data)), lt(\"endstream\"));\n    }, ae = y.__private__.putPage = function(t) {\n        var e = t.number, r = t.data, n = t.objId, i = t.contentsObjId;\n        Zt(n, !0), lt(\"<</Type /Page\"), lt(\"/Parent \" + t.rootDictionaryObjId + \" 0 R\"), lt(\"/Resources \" + t.resourceDictionaryObjId + \" 0 R\"), lt(\"/MediaBox [\" + parseFloat(O(t.mediaBox.bottomLeftX)) + \" \" + parseFloat(O(t.mediaBox.bottomLeftY)) + \" \" + O(t.mediaBox.topRightX) + \" \" + O(t.mediaBox.topRightY) + \"]\"), null !== t.cropBox && lt(\"/CropBox [\" + O(t.cropBox.bottomLeftX) + \" \" + O(t.cropBox.bottomLeftY) + \" \" + O(t.cropBox.topRightX) + \" \" + O(t.cropBox.topRightY) + \"]\"), null !== t.bleedBox && lt(\"/BleedBox [\" + O(t.bleedBox.bottomLeftX) + \" \" + O(t.bleedBox.bottomLeftY) + \" \" + O(t.bleedBox.topRightX) + \" \" + O(t.bleedBox.topRightY) + \"]\"), null !== t.trimBox && lt(\"/TrimBox [\" + O(t.trimBox.bottomLeftX) + \" \" + O(t.trimBox.bottomLeftY) + \" \" + O(t.trimBox.topRightX) + \" \" + O(t.trimBox.topRightY) + \"]\"), null !== t.artBox && lt(\"/ArtBox [\" + O(t.artBox.bottomLeftX) + \" \" + O(t.artBox.bottomLeftY) + \" \" + O(t.artBox.topRightX) + \" \" + O(t.artBox.topRightY) + \"]\"), \"number\" == typeof t.userUnit && 1 !== t.userUnit && lt(\"/UserUnit \" + t.userUnit), Tt.publish(\"putPage\", {\n            objId: n,\n            pageContext: Rt[e],\n            pageNumber: e,\n            page: r\n        }), lt(\"/Contents \" + i + \" 0 R\"), lt(\">>\"), lt(\"endobj\");\n        var a = r.join(\"\\n\");\n        return S === x.ADVANCED && (a += \"\\nQ\"), Zt(i, !0), ie({\n            data: a,\n            filters: ne(),\n            objectId: i\n        }), lt(\"endobj\"), n;\n    }, oe = y.__private__.putPages = function() {\n        var t, e, r = [];\n        for(t = 1; t <= Dt; t++)Rt[t].objId = Kt(), Rt[t].contentsObjId = Kt();\n        for(t = 1; t <= Dt; t++)r.push(ae({\n            number: t,\n            data: ot[t],\n            objId: Rt[t].objId,\n            contentsObjId: Rt[t].contentsObjId,\n            mediaBox: Rt[t].mediaBox,\n            cropBox: Rt[t].cropBox,\n            bleedBox: Rt[t].bleedBox,\n            trimBox: Rt[t].trimBox,\n            artBox: Rt[t].artBox,\n            userUnit: Rt[t].userUnit,\n            rootDictionaryObjId: Qt,\n            resourceDictionaryObjId: te\n        }));\n        Zt(Qt, !0), lt(\"<</Type /Pages\");\n        var n = \"/Kids [\";\n        for(e = 0; e < Dt; e++)n += r[e] + \" 0 R \";\n        lt(n + \"]\"), lt(\"/Count \" + Dt), lt(\">>\"), lt(\"endobj\"), Tt.publish(\"postPutPages\");\n    }, se = function(t) {\n        Tt.publish(\"putFont\", {\n            font: t,\n            out: lt,\n            newObject: Xt,\n            putStream: ie\n        }), !0 !== t.isAlreadyPutted && (t.objectNumber = Xt(), lt(\"<<\"), lt(\"/Type /Font\"), lt(\"/BaseFont /\" + F(t.postScriptName)), lt(\"/Subtype /Type1\"), \"string\" == typeof t.encoding && lt(\"/Encoding /\" + t.encoding), lt(\"/FirstChar 32\"), lt(\"/LastChar 255\"), lt(\">>\"), lt(\"endobj\"));\n    }, ce = function() {\n        for(var t in Ft)Ft.hasOwnProperty(t) && (!1 === v || !0 === v && b.hasOwnProperty(t)) && se(Ft[t]);\n    }, ue = function(t) {\n        t.objectNumber = Xt();\n        var e = [];\n        e.push({\n            key: \"Type\",\n            value: \"/XObject\"\n        }), e.push({\n            key: \"Subtype\",\n            value: \"/Form\"\n        }), e.push({\n            key: \"BBox\",\n            value: \"[\" + [\n                O(t.x),\n                O(t.y),\n                O(t.x + t.width),\n                O(t.y + t.height)\n            ].join(\" \") + \"]\"\n        }), e.push({\n            key: \"Matrix\",\n            value: \"[\" + t.matrix.toString() + \"]\"\n        });\n        var r = t.pages[1].join(\"\\n\");\n        ie({\n            data: r,\n            additionalKeyValues: e,\n            objectId: t.objectNumber\n        }), lt(\"endobj\");\n    }, he = function() {\n        for(var t in zt)zt.hasOwnProperty(t) && ue(zt[t]);\n    }, le = function(t, e) {\n        var r, n = [], i = 1 / (e - 1);\n        for(r = 0; r < 1; r += i)n.push(r);\n        if (n.push(1), 0 != t[0].offset) {\n            var a = {\n                offset: 0,\n                color: t[0].color\n            };\n            t.unshift(a);\n        }\n        if (1 != t[t.length - 1].offset) {\n            var o = {\n                offset: 1,\n                color: t[t.length - 1].color\n            };\n            t.push(o);\n        }\n        for(var s = \"\", c = 0, u = 0; u < n.length; u++){\n            for(r = n[u]; r > t[c + 1].offset;)c++;\n            var h = t[c].offset, l = (r - h) / (t[c + 1].offset - h), f = t[c].color, d = t[c + 1].color;\n            s += tt(Math.round((1 - l) * f[0] + l * d[0]).toString(16)) + tt(Math.round((1 - l) * f[1] + l * d[1]).toString(16)) + tt(Math.round((1 - l) * f[2] + l * d[2]).toString(16));\n        }\n        return s.trim();\n    }, fe = function(t, e) {\n        e || (e = 21);\n        var r = Xt(), n = le(t.colors, e), i = [];\n        i.push({\n            key: \"FunctionType\",\n            value: \"0\"\n        }), i.push({\n            key: \"Domain\",\n            value: \"[0.0 1.0]\"\n        }), i.push({\n            key: \"Size\",\n            value: \"[\" + e + \"]\"\n        }), i.push({\n            key: \"BitsPerSample\",\n            value: \"8\"\n        }), i.push({\n            key: \"Range\",\n            value: \"[0.0 1.0 0.0 1.0 0.0 1.0]\"\n        }), i.push({\n            key: \"Decode\",\n            value: \"[0.0 1.0 0.0 1.0 0.0 1.0]\"\n        }), ie({\n            data: n,\n            additionalKeyValues: i,\n            alreadyAppliedFilters: [\n                \"/ASCIIHexDecode\"\n            ],\n            objectId: r\n        }), lt(\"endobj\"), t.objectNumber = Xt(), lt(\"<< /ShadingType \" + t.type), lt(\"/ColorSpace /DeviceRGB\");\n        var a = \"/Coords [\" + O(parseFloat(t.coords[0])) + \" \" + O(parseFloat(t.coords[1])) + \" \";\n        2 === t.type ? a += O(parseFloat(t.coords[2])) + \" \" + O(parseFloat(t.coords[3])) : a += O(parseFloat(t.coords[2])) + \" \" + O(parseFloat(t.coords[3])) + \" \" + O(parseFloat(t.coords[4])) + \" \" + O(parseFloat(t.coords[5])), lt(a += \"]\"), t.matrix && lt(\"/Matrix [\" + t.matrix.toString() + \"]\"), lt(\"/Function \" + r + \" 0 R\"), lt(\"/Extend [true true]\"), lt(\">>\"), lt(\"endobj\");\n    }, de = function(t, e) {\n        var r = Kt(), n = Xt();\n        e.push({\n            resourcesOid: r,\n            objectOid: n\n        }), t.objectNumber = n;\n        var i = [];\n        i.push({\n            key: \"Type\",\n            value: \"/Pattern\"\n        }), i.push({\n            key: \"PatternType\",\n            value: \"1\"\n        }), i.push({\n            key: \"PaintType\",\n            value: \"1\"\n        }), i.push({\n            key: \"TilingType\",\n            value: \"1\"\n        }), i.push({\n            key: \"BBox\",\n            value: \"[\" + t.boundingBox.map(O).join(\" \") + \"]\"\n        }), i.push({\n            key: \"XStep\",\n            value: O(t.xStep)\n        }), i.push({\n            key: \"YStep\",\n            value: O(t.yStep)\n        }), i.push({\n            key: \"Resources\",\n            value: r + \" 0 R\"\n        }), t.matrix && i.push({\n            key: \"Matrix\",\n            value: \"[\" + t.matrix.toString() + \"]\"\n        }), ie({\n            data: t.stream,\n            additionalKeyValues: i,\n            objectId: t.objectNumber\n        }), lt(\"endobj\");\n    }, pe = function(t) {\n        var e;\n        for(e in Ot)Ot.hasOwnProperty(e) && (Ot[e] instanceof B ? fe(Ot[e]) : Ot[e] instanceof M && de(Ot[e], t));\n    }, ge = function(t) {\n        for(var e in t.objectNumber = Xt(), lt(\"<<\"), t)switch(e){\n            case \"opacity\":\n                lt(\"/ca \" + R(t[e]));\n                break;\n            case \"stroke-opacity\":\n                lt(\"/CA \" + R(t[e]));\n        }\n        lt(\">>\"), lt(\"endobj\");\n    }, me = function() {\n        var t;\n        for(t in Mt)Mt.hasOwnProperty(t) && ge(Mt[t]);\n    }, ve = function() {\n        for(var t in lt(\"/XObject <<\"), zt)zt.hasOwnProperty(t) && zt[t].objectNumber >= 0 && lt(\"/\" + t + \" \" + zt[t].objectNumber + \" 0 R\");\n        Tt.publish(\"putXobjectDict\"), lt(\">>\");\n    }, be = function() {\n        Ye.oid = Xt(), lt(\"<<\"), lt(\"/Filter /Standard\"), lt(\"/V \" + Ye.v), lt(\"/R \" + Ye.r), lt(\"/U <\" + Ye.toHexString(Ye.U) + \">\"), lt(\"/O <\" + Ye.toHexString(Ye.O) + \">\"), lt(\"/P \" + Ye.P), lt(\">>\"), lt(\"endobj\");\n    }, ye = function() {\n        for(var t in lt(\"/Font <<\"), Ft)Ft.hasOwnProperty(t) && (!1 === v || !0 === v && b.hasOwnProperty(t)) && lt(\"/\" + t + \" \" + Ft[t].objectNumber + \" 0 R\");\n        lt(\">>\");\n    }, we = function() {\n        if (Object.keys(Ot).length > 0) {\n            for(var t in lt(\"/Shading <<\"), Ot)Ot.hasOwnProperty(t) && Ot[t] instanceof B && Ot[t].objectNumber >= 0 && lt(\"/\" + t + \" \" + Ot[t].objectNumber + \" 0 R\");\n            Tt.publish(\"putShadingPatternDict\"), lt(\">>\");\n        }\n    }, Ne = function(t) {\n        if (Object.keys(Ot).length > 0) {\n            for(var e in lt(\"/Pattern <<\"), Ot)Ot.hasOwnProperty(e) && Ot[e] instanceof y.TilingPattern && Ot[e].objectNumber >= 0 && Ot[e].objectNumber < t && lt(\"/\" + e + \" \" + Ot[e].objectNumber + \" 0 R\");\n            Tt.publish(\"putTilingPatternDict\"), lt(\">>\");\n        }\n    }, Le = function() {\n        if (Object.keys(Mt).length > 0) {\n            var t;\n            for(t in lt(\"/ExtGState <<\"), Mt)Mt.hasOwnProperty(t) && Mt[t].objectNumber >= 0 && lt(\"/\" + t + \" \" + Mt[t].objectNumber + \" 0 R\");\n            Tt.publish(\"putGStateDict\"), lt(\">>\");\n        }\n    }, Ae = function(t) {\n        Zt(t.resourcesOid, !0), lt(\"<<\"), lt(\"/ProcSet [/PDF /Text /ImageB /ImageC /ImageI]\"), ye(), we(), Ne(t.objectOid), Le(), ve(), lt(\">>\"), lt(\"endobj\");\n    }, xe = function() {\n        var t = [];\n        ce(), me(), he(), pe(t), Tt.publish(\"putResources\"), t.forEach(Ae), Ae({\n            resourcesOid: te,\n            objectOid: Number.MAX_SAFE_INTEGER\n        }), Tt.publish(\"postPutResources\");\n    }, Se = function() {\n        Tt.publish(\"putAdditionalObjects\");\n        for(var t = 0; t < at.length; t++){\n            var e = at[t];\n            Zt(e.objId, !0), lt(e.content), lt(\"endobj\");\n        }\n        Tt.publish(\"postPutAdditionalObjects\");\n    }, _e = function(t) {\n        Ct[t.fontName] = Ct[t.fontName] || {}, Ct[t.fontName][t.fontStyle] = t.id;\n    }, Pe = function(t, e, r, n, i) {\n        var a = {\n            id: \"F\" + (Object.keys(Ft).length + 1).toString(10),\n            postScriptName: t,\n            fontName: e,\n            fontStyle: r,\n            encoding: n,\n            isStandardFont: i || !1,\n            metadata: {}\n        };\n        return Tt.publish(\"addFont\", {\n            font: a,\n            instance: this\n        }), Ft[a.id] = a, _e(a), a.id;\n    }, ke = function(t) {\n        for(var e = 0, r = pt.length; e < r; e++){\n            var n = Pe.call(this, t[e][0], t[e][1], t[e][2], pt[e][3], !0);\n            !1 === v && (b[n] = !0);\n            var i = t[e][0].split(\"-\");\n            _e({\n                id: n,\n                fontName: i[0],\n                fontStyle: i[1] || \"\"\n            });\n        }\n        Tt.publish(\"addFonts\", {\n            fonts: Ft,\n            dictionary: Ct\n        });\n    }, Ie = function(t) {\n        return t.foo = function() {\n            try {\n                return t.apply(this, arguments);\n            } catch (t) {\n                var e = t.stack || \"\";\n                ~e.indexOf(\" at \") && (e = e.split(\" at \")[1]);\n                var r = \"Error in function \" + e.split(\"\\n\")[0].split(\"<\")[0] + \": \" + t.message;\n                if (!n.console) throw new Error(r);\n                n.console.error(r, t), n.alert && alert(r);\n            }\n        }, t.foo.bar = t, t.foo;\n    }, Fe = function(t, e) {\n        var r, n, i, a, o, s, c, u, h;\n        if (i = (e = e || {}).sourceEncoding || \"Unicode\", o = e.outputEncoding, (e.autoencode || o) && Ft[St].metadata && Ft[St].metadata[i] && Ft[St].metadata[i].encoding && (a = Ft[St].metadata[i].encoding, !o && Ft[St].encoding && (o = Ft[St].encoding), !o && a.codePages && (o = a.codePages[0]), \"string\" == typeof o && (o = a[o]), o)) {\n            for(c = !1, s = [], r = 0, n = t.length; r < n; r++)(u = o[t.charCodeAt(r)]) ? s.push(String.fromCharCode(u)) : s.push(t[r]), s[r].charCodeAt(0) >> 8 && (c = !0);\n            t = s.join(\"\");\n        }\n        for(r = t.length; void 0 === c && 0 !== r;)t.charCodeAt(r - 1) >> 8 && (c = !0), r--;\n        if (!c) return t;\n        for(s = e.noBOM ? [] : [\n            254,\n            255\n        ], r = 0, n = t.length; r < n; r++){\n            if ((h = (u = t.charCodeAt(r)) >> 8) >> 8) throw new Error(\"Character at position \" + r + \" of string '\" + t + \"' exceeds 16bits. Cannot be encoded into UCS-2 BE\");\n            s.push(h), s.push(u - (h << 8));\n        }\n        return String.fromCharCode.apply(void 0, s);\n    }, Ce = y.__private__.pdfEscape = y.pdfEscape = function(t, e) {\n        return Fe(t, e).replace(/\\\\/g, \"\\\\\\\\\").replace(/\\(/g, \"\\\\(\").replace(/\\)/g, \"\\\\)\");\n    }, je = y.__private__.beginPage = function(t) {\n        ot[++Dt] = [], Rt[Dt] = {\n            objId: 0,\n            contentsObjId: 0,\n            userUnit: Number(d),\n            artBox: null,\n            bleedBox: null,\n            cropBox: null,\n            trimBox: null,\n            mediaBox: {\n                bottomLeftX: 0,\n                bottomLeftY: 0,\n                topRightX: Number(t[0]),\n                topRightY: Number(t[1])\n            }\n        }, Me(Dt), ht(ot[$]);\n    }, Oe = function(t, e) {\n        var r, n, o;\n        switch(i = e || i, \"string\" == typeof t && (r = A(t.toLowerCase()), Array.isArray(r) && (n = r[0], o = r[1])), Array.isArray(t) && (n = t[0] * _t, o = t[1] * _t), isNaN(n) && (n = s[0], o = s[1]), (n > 14400 || o > 14400) && (a.warn(\"A page in a PDF can not be wider or taller than 14400 userUnit. jsPDF limits the width/height to 14400\"), n = Math.min(14400, n), o = Math.min(14400, o)), s = [\n            n,\n            o\n        ], i.substr(0, 1)){\n            case \"l\":\n                o > n && (s = [\n                    o,\n                    n\n                ]);\n                break;\n            case \"p\":\n                n > o && (s = [\n                    o,\n                    n\n                ]);\n        }\n        je(s), pr(fr), lt(Lr), 0 !== kr && lt(kr + \" J\"), 0 !== Ir && lt(Ir + \" j\"), Tt.publish(\"addPage\", {\n            pageNumber: Dt\n        });\n    }, Be = function(t) {\n        t > 0 && t <= Dt && (ot.splice(t, 1), Rt.splice(t, 1), Dt--, $ > Dt && ($ = Dt), this.setPage($));\n    }, Me = function(t) {\n        t > 0 && t <= Dt && ($ = t);\n    }, Ee = y.__private__.getNumberOfPages = y.getNumberOfPages = function() {\n        return ot.length - 1;\n    }, qe = function(t, e, r) {\n        var n, i = void 0;\n        return r = r || {}, t = void 0 !== t ? t : Ft[St].fontName, e = void 0 !== e ? e : Ft[St].fontStyle, n = t.toLowerCase(), void 0 !== Ct[n] && void 0 !== Ct[n][e] ? i = Ct[n][e] : void 0 !== Ct[t] && void 0 !== Ct[t][e] ? i = Ct[t][e] : !1 === r.disableWarning && a.warn(\"Unable to look up font label for font '\" + t + \"', '\" + e + \"'. Refer to getFontList() for available fonts.\"), i || r.noFallback || null == (i = Ct.times[e]) && (i = Ct.times.normal), i;\n    }, De = y.__private__.putInfo = function() {\n        var t = Xt(), e = function(t) {\n            return t;\n        };\n        for(var r in null !== m && (e = Ye.encryptor(t, 0)), lt(\"<<\"), lt(\"/Producer (\" + Ce(e(\"jsPDF \" + E.version)) + \")\"), xt)xt.hasOwnProperty(r) && xt[r] && lt(\"/\" + r.substr(0, 1).toUpperCase() + r.substr(1) + \" (\" + Ce(e(xt[r])) + \")\");\n        lt(\"/CreationDate (\" + Ce(e(W)) + \")\"), lt(\">>\"), lt(\"endobj\");\n    }, Re = y.__private__.putCatalog = function(t) {\n        var e = (t = t || {}).rootDictionaryObjId || Qt;\n        switch(Xt(), lt(\"<<\"), lt(\"/Type /Catalog\"), lt(\"/Pages \" + e + \" 0 R\"), mt || (mt = \"fullwidth\"), mt){\n            case \"fullwidth\":\n                lt(\"/OpenAction [3 0 R /FitH null]\");\n                break;\n            case \"fullheight\":\n                lt(\"/OpenAction [3 0 R /FitV null]\");\n                break;\n            case \"fullpage\":\n                lt(\"/OpenAction [3 0 R /Fit]\");\n                break;\n            case \"original\":\n                lt(\"/OpenAction [3 0 R /XYZ null null 1]\");\n                break;\n            default:\n                var r = \"\" + mt;\n                \"%\" === r.substr(r.length - 1) && (mt = parseInt(mt) / 100), \"number\" == typeof mt && lt(\"/OpenAction [3 0 R /XYZ null null \" + R(mt) + \"]\");\n        }\n        switch(Nt || (Nt = \"continuous\"), Nt){\n            case \"continuous\":\n                lt(\"/PageLayout /OneColumn\");\n                break;\n            case \"single\":\n                lt(\"/PageLayout /SinglePage\");\n                break;\n            case \"two\":\n            case \"twoleft\":\n                lt(\"/PageLayout /TwoColumnLeft\");\n                break;\n            case \"tworight\":\n                lt(\"/PageLayout /TwoColumnRight\");\n        }\n        yt && lt(\"/PageMode /\" + yt), Tt.publish(\"putCatalog\"), lt(\">>\"), lt(\"endobj\");\n    }, Te = y.__private__.putTrailer = function() {\n        lt(\"trailer\"), lt(\"<<\"), lt(\"/Size \" + (et + 1)), lt(\"/Root \" + et + \" 0 R\"), lt(\"/Info \" + (et - 1) + \" 0 R\"), null !== m && lt(\"/Encrypt \" + Ye.oid + \" 0 R\"), lt(\"/ID [ <\" + V + \"> <\" + V + \"> ]\"), lt(\">>\");\n    }, Ue = y.__private__.putHeader = function() {\n        lt(\"%PDF-\" + w), lt(\"%\\xba\\xdf\\xac\\xe0\");\n    }, ze = y.__private__.putXRef = function() {\n        var t = \"0000000000\";\n        lt(\"xref\"), lt(\"0 \" + (et + 1)), lt(\"0000000000 65535 f \");\n        for(var e = 1; e <= et; e++){\n            \"function\" == typeof rt[e] ? lt((t + rt[e]()).slice(-10) + \" 00000 n \") : void 0 !== rt[e] ? lt((t + rt[e]).slice(-10) + \" 00000 n \") : lt(\"0000000000 00000 n \");\n        }\n    }, He = y.__private__.buildDocument = function() {\n        ut(), ht(nt), Tt.publish(\"buildDocument\"), Ue(), oe(), Se(), xe(), null !== m && be(), De(), Re();\n        var t = it;\n        return ze(), Te(), lt(\"startxref\"), lt(\"\" + t), lt(\"%%EOF\"), ht(ot[$]), nt.join(\"\\n\");\n    }, We = y.__private__.getBlob = function(t) {\n        return new Blob([\n            dt(t)\n        ], {\n            type: \"application/pdf\"\n        });\n    }, Ve = y.output = y.__private__.output = Ie(function(t, e) {\n        switch(\"string\" == typeof (e = e || {}) ? e = {\n            filename: e\n        } : e.filename = e.filename || \"generated.pdf\", t){\n            case void 0:\n                return He();\n            case \"save\":\n                y.save(e.filename);\n                break;\n            case \"arraybuffer\":\n                return dt(He());\n            case \"blob\":\n                return We(He());\n            case \"bloburi\":\n            case \"bloburl\":\n                if (void 0 !== n.URL && \"function\" == typeof n.URL.createObjectURL) return n.URL && n.URL.createObjectURL(We(He())) || void 0;\n                a.warn(\"bloburl is not supported by your system, because URL.createObjectURL is not supported by your browser.\");\n                break;\n            case \"datauristring\":\n            case \"dataurlstring\":\n                var r = \"\", i = He();\n                try {\n                    r = h(i);\n                } catch (t) {\n                    r = h(unescape(encodeURIComponent(i)));\n                }\n                return \"data:application/pdf;filename=\" + e.filename + \";base64,\" + r;\n            case \"pdfobjectnewwindow\":\n                if (\"[object Window]\" === Object.prototype.toString.call(n)) {\n                    var o = \"https://cdnjs.cloudflare.com/ajax/libs/pdfobject/2.1.1/pdfobject.min.js\", s = ' integrity=\"sha512-4ze/a9/4jqu+tX9dfOqJYSvyYd5M6qum/3HpCLr+/Jqf0whc37VUbkpNGHR7/8pSnCFw47T1fmIpwBV7UySh3g==\" crossorigin=\"anonymous\"';\n                    e.pdfObjectUrl && (o = e.pdfObjectUrl, s = \"\");\n                    var c = '<html><style>html, body { padding: 0; margin: 0; } iframe { width: 100%; height: 100%; border: 0;}  </style><body><script src=\"' + o + '\"' + s + '></script><script >PDFObject.embed(\"' + this.output(\"dataurlstring\") + '\", ' + JSON.stringify(e) + \");</script></body></html>\", u = n.open();\n                    return null !== u && u.document.write(c), u;\n                }\n                throw new Error(\"The option pdfobjectnewwindow just works in a browser-environment.\");\n            case \"pdfjsnewwindow\":\n                if (\"[object Window]\" === Object.prototype.toString.call(n)) {\n                    var l = '<html><style>html, body { padding: 0; margin: 0; } iframe { width: 100%; height: 100%; border: 0;}  </style><body><iframe id=\"pdfViewer\" src=\"' + (e.pdfJsUrl || \"examples/PDF.js/web/viewer.html\") + \"?file=&downloadName=\" + e.filename + '\" width=\"500px\" height=\"400px\" /></body></html>', f = n.open();\n                    if (null !== f) {\n                        f.document.write(l);\n                        var d = this;\n                        f.document.documentElement.querySelector(\"#pdfViewer\").onload = function() {\n                            f.document.title = e.filename, f.document.documentElement.querySelector(\"#pdfViewer\").contentWindow.PDFViewerApplication.open(d.output(\"bloburl\"));\n                        };\n                    }\n                    return f;\n                }\n                throw new Error(\"The option pdfjsnewwindow just works in a browser-environment.\");\n            case \"dataurlnewwindow\":\n                if (\"[object Window]\" !== Object.prototype.toString.call(n)) throw new Error(\"The option dataurlnewwindow just works in a browser-environment.\");\n                var p = '<html><style>html, body { padding: 0; margin: 0; } iframe { width: 100%; height: 100%; border: 0;}  </style><body><iframe src=\"' + this.output(\"datauristring\", e) + '\"></iframe></body></html>', g = n.open();\n                if (null !== g && (g.document.write(p), g.document.title = e.filename), g || \"undefined\" == typeof safari) return g;\n                break;\n            case \"datauri\":\n            case \"dataurl\":\n                return n.document.location.href = this.output(\"datauristring\", e);\n            default:\n                return null;\n        }\n    }), Ge = function(t) {\n        return !0 === Array.isArray(Ut) && Ut.indexOf(t) > -1;\n    };\n    switch(o){\n        case \"pt\":\n            _t = 1;\n            break;\n        case \"mm\":\n            _t = 72 / 25.4;\n            break;\n        case \"cm\":\n            _t = 72 / 2.54;\n            break;\n        case \"in\":\n            _t = 72;\n            break;\n        case \"px\":\n            _t = 1 == Ge(\"px_scaling\") ? .75 : 96 / 72;\n            break;\n        case \"pc\":\n        case \"em\":\n            _t = 12;\n            break;\n        case \"ex\":\n            _t = 6;\n            break;\n        default:\n            if (\"number\" != typeof o) throw new Error(\"Invalid unit: \" + o);\n            _t = o;\n    }\n    var Ye = null;\n    K(), Y();\n    var Je = function(t) {\n        return null !== m ? Ye.encryptor(t, 0) : function(t) {\n            return t;\n        };\n    }, Xe = y.__private__.getPageInfo = y.getPageInfo = function(t) {\n        if (isNaN(t) || t % 1 != 0) throw new Error(\"Invalid argument passed to jsPDF.getPageInfo\");\n        return {\n            objId: Rt[t].objId,\n            pageNumber: t,\n            pageContext: Rt[t]\n        };\n    }, Ke = y.__private__.getPageInfoByObjId = function(t) {\n        if (isNaN(t) || t % 1 != 0) throw new Error(\"Invalid argument passed to jsPDF.getPageInfoByObjId\");\n        for(var e in Rt)if (Rt[e].objId === t) break;\n        return Xe(e);\n    }, Ze = y.__private__.getCurrentPageInfo = y.getCurrentPageInfo = function() {\n        return {\n            objId: Rt[$].objId,\n            pageNumber: $,\n            pageContext: Rt[$]\n        };\n    };\n    y.addPage = function() {\n        return Oe.apply(this, arguments), this;\n    }, y.setPage = function() {\n        return Me.apply(this, arguments), ht.call(this, ot[$]), this;\n    }, y.insertPage = function(t) {\n        return this.addPage(), this.movePage($, t), this;\n    }, y.movePage = function(t, e) {\n        var r, n;\n        if (t > e) {\n            r = ot[t], n = Rt[t];\n            for(var i = t; i > e; i--)ot[i] = ot[i - 1], Rt[i] = Rt[i - 1];\n            ot[e] = r, Rt[e] = n, this.setPage(e);\n        } else if (t < e) {\n            r = ot[t], n = Rt[t];\n            for(var a = t; a < e; a++)ot[a] = ot[a + 1], Rt[a] = Rt[a + 1];\n            ot[e] = r, Rt[e] = n, this.setPage(e);\n        }\n        return this;\n    }, y.deletePage = function() {\n        return Be.apply(this, arguments), this;\n    }, y.__private__.text = y.text = function(e, r, n, i, a) {\n        var o, s, c, u, h, l, f, d, p, g = (i = i || {}).scope || this;\n        if (\"number\" == typeof e && \"number\" == typeof r && (\"string\" == typeof n || Array.isArray(n))) {\n            var m = n;\n            n = r, r = e, e = m;\n        }\n        if (arguments[3] instanceof Vt == !1 ? (c = arguments[4], u = arguments[5], \"object\" === (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(f = arguments[3]) && null !== f || (\"string\" == typeof c && (u = c, c = null), \"string\" == typeof f && (u = f, f = null), \"number\" == typeof f && (c = f, f = null), i = {\n            flags: f,\n            angle: c,\n            align: u\n        })) : (q(\"The transform parameter of text() with a Matrix value\"), p = a), isNaN(r) || isNaN(n) || null == e) throw new Error(\"Invalid arguments passed to jsPDF.text\");\n        if (0 === e.length) return g;\n        var v = \"\", y = !1, w = \"number\" == typeof i.lineHeightFactor ? i.lineHeightFactor : lr, N = g.internal.scaleFactor;\n        function L(t) {\n            return t = t.split(\"\t\").join(Array(i.TabLen || 9).join(\" \")), Ce(t, f);\n        }\n        function A(t) {\n            for(var e, r = t.concat(), n = [], i = r.length; i--;)\"string\" == typeof (e = r.shift()) ? n.push(e) : Array.isArray(t) && (1 === e.length || void 0 === e[1] && void 0 === e[2]) ? n.push(e[0]) : n.push([\n                e[0],\n                e[1],\n                e[2]\n            ]);\n            return n;\n        }\n        function _(t, e) {\n            var r;\n            if (\"string\" == typeof t) r = e(t)[0];\n            else if (Array.isArray(t)) {\n                for(var n, i, a = t.concat(), o = [], s = a.length; s--;)\"string\" == typeof (n = a.shift()) ? o.push(e(n)[0]) : Array.isArray(n) && \"string\" == typeof n[0] && (i = e(n[0], n[1], n[2]), o.push([\n                    i[0],\n                    i[1],\n                    i[2]\n                ]));\n                r = o;\n            }\n            return r;\n        }\n        var P = !1, k = !0;\n        if (\"string\" == typeof e) P = !0;\n        else if (Array.isArray(e)) {\n            var I = e.concat();\n            s = [];\n            for(var F, C = I.length; C--;)(\"string\" != typeof (F = I.shift()) || Array.isArray(F) && \"string\" != typeof F[0]) && (k = !1);\n            P = k;\n        }\n        if (!1 === P) throw new Error('Type of text must be string or Array. \"' + e + '\" is not recognized.');\n        \"string\" == typeof e && (e = e.match(/[\\r?\\n]/) ? e.split(/\\r\\n|\\r|\\n/g) : [\n            e\n        ]);\n        var j = gt / g.internal.scaleFactor, B = j * (w - 1);\n        switch(i.baseline){\n            case \"bottom\":\n                n -= B;\n                break;\n            case \"top\":\n                n += j - B;\n                break;\n            case \"hanging\":\n                n += j - 2 * B;\n                break;\n            case \"middle\":\n                n += j / 2 - B;\n        }\n        if ((l = i.maxWidth || 0) > 0 && (\"string\" == typeof e ? e = g.splitTextToSize(e, l) : \"[object Array]\" === Object.prototype.toString.call(e) && (e = e.reduce(function(t, e) {\n            return t.concat(g.splitTextToSize(e, l));\n        }, []))), o = {\n            text: e,\n            x: r,\n            y: n,\n            options: i,\n            mutex: {\n                pdfEscape: Ce,\n                activeFontKey: St,\n                fonts: Ft,\n                activeFontSize: gt\n            }\n        }, Tt.publish(\"preProcessText\", o), e = o.text, c = (i = o.options).angle, p instanceof Vt == !1 && c && \"number\" == typeof c) {\n            c *= Math.PI / 180, 0 === i.rotationDirection && (c = -c), S === x.ADVANCED && (c = -c);\n            var M = Math.cos(c), E = Math.sin(c);\n            p = new Vt(M, E, -E, M, 0, 0);\n        } else c && c instanceof Vt && (p = c);\n        S !== x.ADVANCED || p || (p = Yt), void 0 !== (h = i.charSpace || _r) && (v += O(U(h)) + \" Tc\\n\", this.setCharSpace(this.getCharSpace() || 0)), void 0 !== (d = i.horizontalScale) && (v += O(100 * d) + \" Tz\\n\"), i.lang;\n        var D = -1, R = void 0 !== i.renderingMode ? i.renderingMode : i.stroke, T = g.internal.getCurrentPageInfo().pageContext;\n        switch(R){\n            case 0:\n            case !1:\n            case \"fill\":\n                D = 0;\n                break;\n            case 1:\n            case !0:\n            case \"stroke\":\n                D = 1;\n                break;\n            case 2:\n            case \"fillThenStroke\":\n                D = 2;\n                break;\n            case 3:\n            case \"invisible\":\n                D = 3;\n                break;\n            case 4:\n            case \"fillAndAddForClipping\":\n                D = 4;\n                break;\n            case 5:\n            case \"strokeAndAddPathForClipping\":\n                D = 5;\n                break;\n            case 6:\n            case \"fillThenStrokeAndAddToPathForClipping\":\n                D = 6;\n                break;\n            case 7:\n            case \"addToPathForClipping\":\n                D = 7;\n        }\n        var z = void 0 !== T.usedRenderingMode ? T.usedRenderingMode : -1;\n        -1 !== D ? v += D + \" Tr\\n\" : -1 !== z && (v += \"0 Tr\\n\"), -1 !== D && (T.usedRenderingMode = D), u = i.align || \"left\";\n        var H, W = gt * w, V = g.internal.pageSize.getWidth(), G = Ft[St];\n        h = i.charSpace || _r, l = i.maxWidth || 0, f = Object.assign({\n            autoencode: !0,\n            noBOM: !0\n        }, i.flags);\n        var Y = [], J = function(t) {\n            return g.getStringUnitWidth(t, {\n                font: G,\n                charSpace: h,\n                fontSize: gt,\n                doKerning: !1\n            }) * gt / N;\n        };\n        if (\"[object Array]\" === Object.prototype.toString.call(e)) {\n            var X;\n            s = A(e), \"left\" !== u && (H = s.map(J));\n            var K, Z = 0;\n            if (\"right\" === u) {\n                r -= H[0], e = [], C = s.length;\n                for(var $ = 0; $ < C; $++)0 === $ ? (K = br(r), X = yr(n)) : (K = U(Z - H[$]), X = -W), e.push([\n                    s[$],\n                    K,\n                    X\n                ]), Z = H[$];\n            } else if (\"center\" === u) {\n                r -= H[0] / 2, e = [], C = s.length;\n                for(var Q = 0; Q < C; Q++)0 === Q ? (K = br(r), X = yr(n)) : (K = U((Z - H[Q]) / 2), X = -W), e.push([\n                    s[Q],\n                    K,\n                    X\n                ]), Z = H[Q];\n            } else if (\"left\" === u) {\n                e = [], C = s.length;\n                for(var tt = 0; tt < C; tt++)e.push(s[tt]);\n            } else if (\"justify\" === u && \"Identity-H\" === G.encoding) {\n                e = [], C = s.length, l = 0 !== l ? l : V;\n                for(var et = 0, rt = 0; rt < C; rt++)if (X = 0 === rt ? yr(n) : -W, K = 0 === rt ? br(r) : et, rt < C - 1) {\n                    var nt = U((l - H[rt]) / (s[rt].split(\" \").length - 1)), it = s[rt].split(\" \");\n                    e.push([\n                        it[0] + \" \",\n                        K,\n                        X\n                    ]), et = 0;\n                    for(var at = 1; at < it.length; at++){\n                        var ot = (J(it[at - 1] + \" \" + it[at]) - J(it[at])) * N + nt;\n                        at == it.length - 1 ? e.push([\n                            it[at],\n                            ot,\n                            0\n                        ]) : e.push([\n                            it[at] + \" \",\n                            ot,\n                            0\n                        ]), et -= ot;\n                    }\n                } else e.push([\n                    s[rt],\n                    K,\n                    X\n                ]);\n                e.push([\n                    \"\",\n                    et,\n                    0\n                ]);\n            } else {\n                if (\"justify\" !== u) throw new Error('Unrecognized alignment option, use \"left\", \"center\", \"right\" or \"justify\".');\n                e = [], C = s.length, l = 0 !== l ? l : V;\n                for(rt = 0; rt < C; rt++)X = 0 === rt ? yr(n) : -W, K = 0 === rt ? br(r) : 0, rt < C - 1 ? Y.push(O(U((l - H[rt]) / (s[rt].split(\" \").length - 1)))) : Y.push(0), e.push([\n                    s[rt],\n                    K,\n                    X\n                ]);\n            }\n        }\n        var st = \"boolean\" == typeof i.R2L ? i.R2L : bt;\n        !0 === st && (e = _(e, function(t, e, r) {\n            return [\n                t.split(\"\").reverse().join(\"\"),\n                e,\n                r\n            ];\n        })), o = {\n            text: e,\n            x: r,\n            y: n,\n            options: i,\n            mutex: {\n                pdfEscape: Ce,\n                activeFontKey: St,\n                fonts: Ft,\n                activeFontSize: gt\n            }\n        }, Tt.publish(\"postProcessText\", o), e = o.text, y = o.mutex.isHex || !1;\n        var ct = Ft[St].encoding;\n        \"WinAnsiEncoding\" !== ct && \"StandardEncoding\" !== ct || (e = _(e, function(t, e, r) {\n            return [\n                L(t),\n                e,\n                r\n            ];\n        })), s = A(e), e = [];\n        for(var ut, ht, ft, dt = 0, pt = 1, mt = Array.isArray(s[0]) ? pt : dt, vt = \"\", yt = function(t, e, r) {\n            var n = \"\";\n            return r instanceof Vt ? (r = \"number\" == typeof i.angle ? Gt(r, new Vt(1, 0, 0, 1, t, e)) : Gt(new Vt(1, 0, 0, 1, t, e), r), S === x.ADVANCED && (r = Gt(new Vt(1, 0, 0, -1, 0, 0), r)), n = r.join(\" \") + \" Tm\\n\") : n = O(t) + \" \" + O(e) + \" Td\\n\", n;\n        }, wt = 0; wt < s.length; wt++){\n            switch(vt = \"\", mt){\n                case pt:\n                    ft = (y ? \"<\" : \"(\") + s[wt][0] + (y ? \">\" : \")\"), ut = parseFloat(s[wt][1]), ht = parseFloat(s[wt][2]);\n                    break;\n                case dt:\n                    ft = (y ? \"<\" : \"(\") + s[wt] + (y ? \">\" : \")\"), ut = br(r), ht = yr(n);\n            }\n            void 0 !== Y && void 0 !== Y[wt] && (vt = Y[wt] + \" Tw\\n\"), 0 === wt ? e.push(vt + yt(ut, ht, p) + ft) : mt === dt ? e.push(vt + ft) : mt === pt && e.push(vt + yt(ut, ht, p) + ft);\n        }\n        e = mt === dt ? e.join(\" Tj\\nT* \") : e.join(\" Tj\\n\"), e += \" Tj\\n\";\n        var Nt = \"BT\\n/\";\n        return Nt += St + \" \" + gt + \" Tf\\n\", Nt += O(gt * w) + \" TL\\n\", Nt += xr + \"\\n\", Nt += v, Nt += e, lt(Nt += \"ET\"), b[St] = !0, g;\n    };\n    var $e = y.__private__.clip = y.clip = function(t) {\n        return lt(\"evenodd\" === t ? \"W*\" : \"W\"), this;\n    };\n    y.clipEvenOdd = function() {\n        return $e(\"evenodd\");\n    }, y.__private__.discardPath = y.discardPath = function() {\n        return lt(\"n\"), this;\n    };\n    var Qe = y.__private__.isValidStyle = function(t) {\n        var e = !1;\n        return -1 !== [\n            void 0,\n            null,\n            \"S\",\n            \"D\",\n            \"F\",\n            \"DF\",\n            \"FD\",\n            \"f\",\n            \"f*\",\n            \"B\",\n            \"B*\",\n            \"n\"\n        ].indexOf(t) && (e = !0), e;\n    };\n    y.__private__.setDefaultPathOperation = y.setDefaultPathOperation = function(t) {\n        return Qe(t) && (g = t), this;\n    };\n    var tr = y.__private__.getStyle = y.getStyle = function(t) {\n        var e = g;\n        switch(t){\n            case \"D\":\n            case \"S\":\n                e = \"S\";\n                break;\n            case \"F\":\n                e = \"f\";\n                break;\n            case \"FD\":\n            case \"DF\":\n                e = \"B\";\n                break;\n            case \"f\":\n            case \"f*\":\n            case \"B\":\n            case \"B*\":\n                e = t;\n        }\n        return e;\n    }, er = y.close = function() {\n        return lt(\"h\"), this;\n    };\n    y.stroke = function() {\n        return lt(\"S\"), this;\n    }, y.fill = function(t) {\n        return rr(\"f\", t), this;\n    }, y.fillEvenOdd = function(t) {\n        return rr(\"f*\", t), this;\n    }, y.fillStroke = function(t) {\n        return rr(\"B\", t), this;\n    }, y.fillStrokeEvenOdd = function(t) {\n        return rr(\"B*\", t), this;\n    };\n    var rr = function(e, r) {\n        \"object\" === (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(r) ? ar(r, e) : lt(e);\n    }, nr = function(t) {\n        null === t || S === x.ADVANCED && void 0 === t || (t = tr(t), lt(t));\n    };\n    function ir(t, e, r, n, i) {\n        var a = new M(e || this.boundingBox, r || this.xStep, n || this.yStep, this.gState, i || this.matrix);\n        a.stream = this.stream;\n        var o = t + \"$$\" + this.cloneIndex++ + \"$$\";\n        return Jt(o, a), a;\n    }\n    var ar = function(t, e) {\n        var r = Bt[t.key], n = Ot[r];\n        if (n instanceof B) lt(\"q\"), lt(or(e)), n.gState && y.setGState(n.gState), lt(t.matrix.toString() + \" cm\"), lt(\"/\" + r + \" sh\"), lt(\"Q\");\n        else if (n instanceof M) {\n            var i = new Vt(1, 0, 0, -1, 0, Rr());\n            t.matrix && (i = i.multiply(t.matrix || Yt), r = ir.call(n, t.key, t.boundingBox, t.xStep, t.yStep, i).id), lt(\"q\"), lt(\"/Pattern cs\"), lt(\"/\" + r + \" scn\"), n.gState && y.setGState(n.gState), lt(e), lt(\"Q\");\n        }\n    }, or = function(t) {\n        switch(t){\n            case \"f\":\n            case \"F\":\n                return \"W n\";\n            case \"f*\":\n                return \"W* n\";\n            case \"B\":\n                return \"W S\";\n            case \"B*\":\n                return \"W* S\";\n            case \"S\":\n                return \"W S\";\n            case \"n\":\n                return \"W n\";\n        }\n    }, sr = y.moveTo = function(t, e) {\n        return lt(O(U(t)) + \" \" + O(H(e)) + \" m\"), this;\n    }, cr = y.lineTo = function(t, e) {\n        return lt(O(U(t)) + \" \" + O(H(e)) + \" l\"), this;\n    }, ur = y.curveTo = function(t, e, r, n, i, a) {\n        return lt([\n            O(U(t)),\n            O(H(e)),\n            O(U(r)),\n            O(H(n)),\n            O(U(i)),\n            O(H(a)),\n            \"c\"\n        ].join(\" \")), this;\n    };\n    y.__private__.line = y.line = function(t, e, r, n, i) {\n        if (isNaN(t) || isNaN(e) || isNaN(r) || isNaN(n) || !Qe(i)) throw new Error(\"Invalid arguments passed to jsPDF.line\");\n        return S === x.COMPAT ? this.lines([\n            [\n                r - t,\n                n - e\n            ]\n        ], t, e, [\n            1,\n            1\n        ], i || \"S\") : this.lines([\n            [\n                r - t,\n                n - e\n            ]\n        ], t, e, [\n            1,\n            1\n        ]).stroke();\n    }, y.__private__.lines = y.lines = function(t, e, r, n, i, a) {\n        var o, s, c, u, h, l, f, d, p, g, m, v;\n        if (\"number\" == typeof t && (v = r, r = e, e = t, t = v), n = n || [\n            1,\n            1\n        ], a = a || !1, isNaN(e) || isNaN(r) || !Array.isArray(t) || !Array.isArray(n) || !Qe(i) || \"boolean\" != typeof a) throw new Error(\"Invalid arguments passed to jsPDF.lines\");\n        for(sr(e, r), o = n[0], s = n[1], u = t.length, g = e, m = r, c = 0; c < u; c++)2 === (h = t[c]).length ? (g = h[0] * o + g, m = h[1] * s + m, cr(g, m)) : (l = h[0] * o + g, f = h[1] * s + m, d = h[2] * o + g, p = h[3] * s + m, g = h[4] * o + g, m = h[5] * s + m, ur(l, f, d, p, g, m));\n        return a && er(), nr(i), this;\n    }, y.path = function(t) {\n        for(var e = 0; e < t.length; e++){\n            var r = t[e], n = r.c;\n            switch(r.op){\n                case \"m\":\n                    sr(n[0], n[1]);\n                    break;\n                case \"l\":\n                    cr(n[0], n[1]);\n                    break;\n                case \"c\":\n                    ur.apply(this, n);\n                    break;\n                case \"h\":\n                    er();\n            }\n        }\n        return this;\n    }, y.__private__.rect = y.rect = function(t, e, r, n, i) {\n        if (isNaN(t) || isNaN(e) || isNaN(r) || isNaN(n) || !Qe(i)) throw new Error(\"Invalid arguments passed to jsPDF.rect\");\n        return S === x.COMPAT && (n = -n), lt([\n            O(U(t)),\n            O(H(e)),\n            O(U(r)),\n            O(U(n)),\n            \"re\"\n        ].join(\" \")), nr(i), this;\n    }, y.__private__.triangle = y.triangle = function(t, e, r, n, i, a, o) {\n        if (isNaN(t) || isNaN(e) || isNaN(r) || isNaN(n) || isNaN(i) || isNaN(a) || !Qe(o)) throw new Error(\"Invalid arguments passed to jsPDF.triangle\");\n        return this.lines([\n            [\n                r - t,\n                n - e\n            ],\n            [\n                i - r,\n                a - n\n            ],\n            [\n                t - i,\n                e - a\n            ]\n        ], t, e, [\n            1,\n            1\n        ], o, !0), this;\n    }, y.__private__.roundedRect = y.roundedRect = function(t, e, r, n, i, a, o) {\n        if (isNaN(t) || isNaN(e) || isNaN(r) || isNaN(n) || isNaN(i) || isNaN(a) || !Qe(o)) throw new Error(\"Invalid arguments passed to jsPDF.roundedRect\");\n        var s = 4 / 3 * (Math.SQRT2 - 1);\n        return i = Math.min(i, .5 * r), a = Math.min(a, .5 * n), this.lines([\n            [\n                r - 2 * i,\n                0\n            ],\n            [\n                i * s,\n                0,\n                i,\n                a - a * s,\n                i,\n                a\n            ],\n            [\n                0,\n                n - 2 * a\n            ],\n            [\n                0,\n                a * s,\n                -i * s,\n                a,\n                -i,\n                a\n            ],\n            [\n                2 * i - r,\n                0\n            ],\n            [\n                -i * s,\n                0,\n                -i,\n                -a * s,\n                -i,\n                -a\n            ],\n            [\n                0,\n                2 * a - n\n            ],\n            [\n                0,\n                -a * s,\n                i * s,\n                -a,\n                i,\n                -a\n            ]\n        ], t + i, e, [\n            1,\n            1\n        ], o, !0), this;\n    }, y.__private__.ellipse = y.ellipse = function(t, e, r, n, i) {\n        if (isNaN(t) || isNaN(e) || isNaN(r) || isNaN(n) || !Qe(i)) throw new Error(\"Invalid arguments passed to jsPDF.ellipse\");\n        var a = 4 / 3 * (Math.SQRT2 - 1) * r, o = 4 / 3 * (Math.SQRT2 - 1) * n;\n        return sr(t + r, e), ur(t + r, e - o, t + a, e - n, t, e - n), ur(t - a, e - n, t - r, e - o, t - r, e), ur(t - r, e + o, t - a, e + n, t, e + n), ur(t + a, e + n, t + r, e + o, t + r, e), nr(i), this;\n    }, y.__private__.circle = y.circle = function(t, e, r, n) {\n        if (isNaN(t) || isNaN(e) || isNaN(r) || !Qe(n)) throw new Error(\"Invalid arguments passed to jsPDF.circle\");\n        return this.ellipse(t, e, r, r, n);\n    }, y.setFont = function(t, e, r) {\n        return r && (e = k(e, r)), St = qe(t, e, {\n            disableWarning: !1\n        }), this;\n    };\n    var hr = y.__private__.getFont = y.getFont = function() {\n        return Ft[qe.apply(y, arguments)];\n    };\n    y.__private__.getFontList = y.getFontList = function() {\n        var t, e, r = {};\n        for(t in Ct)if (Ct.hasOwnProperty(t)) for(e in r[t] = [], Ct[t])Ct[t].hasOwnProperty(e) && r[t].push(e);\n        return r;\n    }, y.addFont = function(t, e, r, n, i) {\n        var a = [\n            \"StandardEncoding\",\n            \"MacRomanEncoding\",\n            \"Identity-H\",\n            \"WinAnsiEncoding\"\n        ];\n        return arguments[3] && -1 !== a.indexOf(arguments[3]) ? i = arguments[3] : arguments[3] && -1 == a.indexOf(arguments[3]) && (r = k(r, n)), i = i || \"Identity-H\", Pe.call(this, t, e, r, i);\n    };\n    var lr, fr = e.lineWidth || .200025, dr = y.__private__.getLineWidth = y.getLineWidth = function() {\n        return fr;\n    }, pr = y.__private__.setLineWidth = y.setLineWidth = function(t) {\n        return fr = t, lt(O(U(t)) + \" w\"), this;\n    };\n    y.__private__.setLineDash = E.API.setLineDash = E.API.setLineDashPattern = function(t, e) {\n        if (t = t || [], e = e || 0, isNaN(e) || !Array.isArray(t)) throw new Error(\"Invalid arguments passed to jsPDF.setLineDash\");\n        return t = t.map(function(t) {\n            return O(U(t));\n        }).join(\" \"), e = O(U(e)), lt(\"[\" + t + \"] \" + e + \" d\"), this;\n    };\n    var gr = y.__private__.getLineHeight = y.getLineHeight = function() {\n        return gt * lr;\n    };\n    y.__private__.getLineHeight = y.getLineHeight = function() {\n        return gt * lr;\n    };\n    var mr = y.__private__.setLineHeightFactor = y.setLineHeightFactor = function(t) {\n        return \"number\" == typeof (t = t || 1.15) && (lr = t), this;\n    }, vr = y.__private__.getLineHeightFactor = y.getLineHeightFactor = function() {\n        return lr;\n    };\n    mr(e.lineHeight);\n    var br = y.__private__.getHorizontalCoordinate = function(t) {\n        return U(t);\n    }, yr = y.__private__.getVerticalCoordinate = function(t) {\n        return S === x.ADVANCED ? t : Rt[$].mediaBox.topRightY - Rt[$].mediaBox.bottomLeftY - U(t);\n    }, wr = y.__private__.getHorizontalCoordinateString = y.getHorizontalCoordinateString = function(t) {\n        return O(br(t));\n    }, Nr = y.__private__.getVerticalCoordinateString = y.getVerticalCoordinateString = function(t) {\n        return O(yr(t));\n    }, Lr = e.strokeColor || \"0 G\";\n    y.__private__.getStrokeColor = y.getDrawColor = function() {\n        return ee(Lr);\n    }, y.__private__.setStrokeColor = y.setDrawColor = function(t, e, r, n) {\n        return Lr = re({\n            ch1: t,\n            ch2: e,\n            ch3: r,\n            ch4: n,\n            pdfColorType: \"draw\",\n            precision: 2\n        }), lt(Lr), this;\n    };\n    var Ar = e.fillColor || \"0 g\";\n    y.__private__.getFillColor = y.getFillColor = function() {\n        return ee(Ar);\n    }, y.__private__.setFillColor = y.setFillColor = function(t, e, r, n) {\n        return Ar = re({\n            ch1: t,\n            ch2: e,\n            ch3: r,\n            ch4: n,\n            pdfColorType: \"fill\",\n            precision: 2\n        }), lt(Ar), this;\n    };\n    var xr = e.textColor || \"0 g\", Sr = y.__private__.getTextColor = y.getTextColor = function() {\n        return ee(xr);\n    };\n    y.__private__.setTextColor = y.setTextColor = function(t, e, r, n) {\n        return xr = re({\n            ch1: t,\n            ch2: e,\n            ch3: r,\n            ch4: n,\n            pdfColorType: \"text\",\n            precision: 3\n        }), this;\n    };\n    var _r = e.charSpace, Pr = y.__private__.getCharSpace = y.getCharSpace = function() {\n        return parseFloat(_r || 0);\n    };\n    y.__private__.setCharSpace = y.setCharSpace = function(t) {\n        if (isNaN(t)) throw new Error(\"Invalid argument passed to jsPDF.setCharSpace\");\n        return _r = t, this;\n    };\n    var kr = 0;\n    y.CapJoinStyles = {\n        0: 0,\n        butt: 0,\n        but: 0,\n        miter: 0,\n        1: 1,\n        round: 1,\n        rounded: 1,\n        circle: 1,\n        2: 2,\n        projecting: 2,\n        project: 2,\n        square: 2,\n        bevel: 2\n    }, y.__private__.setLineCap = y.setLineCap = function(t) {\n        var e = y.CapJoinStyles[t];\n        if (void 0 === e) throw new Error(\"Line cap style of '\" + t + \"' is not recognized. See or extend .CapJoinStyles property for valid styles\");\n        return kr = e, lt(e + \" J\"), this;\n    };\n    var Ir = 0;\n    y.__private__.setLineJoin = y.setLineJoin = function(t) {\n        var e = y.CapJoinStyles[t];\n        if (void 0 === e) throw new Error(\"Line join style of '\" + t + \"' is not recognized. See or extend .CapJoinStyles property for valid styles\");\n        return Ir = e, lt(e + \" j\"), this;\n    }, y.__private__.setLineMiterLimit = y.__private__.setMiterLimit = y.setLineMiterLimit = y.setMiterLimit = function(t) {\n        if (t = t || 0, isNaN(t)) throw new Error(\"Invalid argument passed to jsPDF.setLineMiterLimit\");\n        return lt(O(U(t)) + \" M\"), this;\n    }, y.GState = j, y.setGState = function(t) {\n        (t = \"string\" == typeof t ? Mt[Et[t]] : Fr(null, t)).equals(qt) || (lt(\"/\" + t.id + \" gs\"), qt = t);\n    };\n    var Fr = function(t, e) {\n        if (!t || !Et[t]) {\n            var r = !1;\n            for(var n in Mt)if (Mt.hasOwnProperty(n) && Mt[n].equals(e)) {\n                r = !0;\n                break;\n            }\n            if (r) e = Mt[n];\n            else {\n                var i = \"GS\" + (Object.keys(Mt).length + 1).toString(10);\n                Mt[i] = e, e.id = i;\n            }\n            return t && (Et[t] = e.id), Tt.publish(\"addGState\", e), e;\n        }\n    };\n    y.addGState = function(t, e) {\n        return Fr(t, e), this;\n    }, y.saveGraphicsState = function() {\n        return lt(\"q\"), jt.push({\n            key: St,\n            size: gt,\n            color: xr\n        }), this;\n    }, y.restoreGraphicsState = function() {\n        lt(\"Q\");\n        var t = jt.pop();\n        return St = t.key, gt = t.size, xr = t.color, qt = null, this;\n    }, y.setCurrentTransformationMatrix = function(t) {\n        return lt(t.toString() + \" cm\"), this;\n    }, y.comment = function(t) {\n        return lt(\"#\" + t), this;\n    };\n    var Cr = function(t, e) {\n        var r = t || 0;\n        Object.defineProperty(this, \"x\", {\n            enumerable: !0,\n            get: function() {\n                return r;\n            },\n            set: function(t) {\n                isNaN(t) || (r = parseFloat(t));\n            }\n        });\n        var n = e || 0;\n        Object.defineProperty(this, \"y\", {\n            enumerable: !0,\n            get: function() {\n                return n;\n            },\n            set: function(t) {\n                isNaN(t) || (n = parseFloat(t));\n            }\n        });\n        var i = \"pt\";\n        return Object.defineProperty(this, \"type\", {\n            enumerable: !0,\n            get: function() {\n                return i;\n            },\n            set: function(t) {\n                i = t.toString();\n            }\n        }), this;\n    }, jr = function(t, e, r, n) {\n        Cr.call(this, t, e), this.type = \"rect\";\n        var i = r || 0;\n        Object.defineProperty(this, \"w\", {\n            enumerable: !0,\n            get: function() {\n                return i;\n            },\n            set: function(t) {\n                isNaN(t) || (i = parseFloat(t));\n            }\n        });\n        var a = n || 0;\n        return Object.defineProperty(this, \"h\", {\n            enumerable: !0,\n            get: function() {\n                return a;\n            },\n            set: function(t) {\n                isNaN(t) || (a = parseFloat(t));\n            }\n        }), this;\n    }, Or = function() {\n        this.page = Dt, this.currentPage = $, this.pages = ot.slice(0), this.pagesContext = Rt.slice(0), this.x = Pt, this.y = kt, this.matrix = It, this.width = qr($), this.height = Rr($), this.outputDestination = ct, this.id = \"\", this.objectNumber = -1;\n    };\n    Or.prototype.restore = function() {\n        Dt = this.page, $ = this.currentPage, Rt = this.pagesContext, ot = this.pages, Pt = this.x, kt = this.y, It = this.matrix, Dr($, this.width), Tr($, this.height), ct = this.outputDestination;\n    };\n    var Br = function(t, e, r, n, i) {\n        Wt.push(new Or), Dt = $ = 0, ot = [], Pt = t, kt = e, It = i, je([\n            r,\n            n\n        ]);\n    }, Mr = function(t) {\n        if (Ht[t]) Wt.pop().restore();\n        else {\n            var e = new Or, r = \"Xo\" + (Object.keys(zt).length + 1).toString(10);\n            e.id = r, Ht[t] = r, zt[r] = e, Tt.publish(\"addFormObject\", e), Wt.pop().restore();\n        }\n    };\n    for(var Er in y.beginFormObject = function(t, e, r, n, i) {\n        return Br(t, e, r, n, i), this;\n    }, y.endFormObject = function(t) {\n        return Mr(t), this;\n    }, y.doFormObject = function(t, e) {\n        var r = zt[Ht[t]];\n        return lt(\"q\"), lt(e.toString() + \" cm\"), lt(\"/\" + r.id + \" Do\"), lt(\"Q\"), this;\n    }, y.getFormObject = function(t) {\n        var e = zt[Ht[t]];\n        return {\n            x: e.x,\n            y: e.y,\n            width: e.width,\n            height: e.height,\n            matrix: e.matrix\n        };\n    }, y.save = function(t, e) {\n        return t = t || \"generated.pdf\", (e = e || {}).returnPromise = e.returnPromise || !1, !1 === e.returnPromise ? (l(We(He()), t), \"function\" == typeof l.unload && n.setTimeout && setTimeout(l.unload, 911), this) : new Promise(function(e, r) {\n            try {\n                var i = l(We(He()), t);\n                \"function\" == typeof l.unload && n.setTimeout && setTimeout(l.unload, 911), e(i);\n            } catch (t) {\n                r(t.message);\n            }\n        });\n    }, E.API)E.API.hasOwnProperty(Er) && (\"events\" === Er && E.API.events.length ? function(t, e) {\n        var r, n, i;\n        for(i = e.length - 1; -1 !== i; i--)r = e[i][0], n = e[i][1], t.subscribe.apply(t, [\n            r\n        ].concat(\"function\" == typeof n ? [\n            n\n        ] : n));\n    }(Tt, E.API.events) : y[Er] = E.API[Er]);\n    var qr = y.getPageWidth = function(t) {\n        return (Rt[t = t || $].mediaBox.topRightX - Rt[t].mediaBox.bottomLeftX) / _t;\n    }, Dr = y.setPageWidth = function(t, e) {\n        Rt[t].mediaBox.topRightX = e * _t + Rt[t].mediaBox.bottomLeftX;\n    }, Rr = y.getPageHeight = function(t) {\n        return (Rt[t = t || $].mediaBox.topRightY - Rt[t].mediaBox.bottomLeftY) / _t;\n    }, Tr = y.setPageHeight = function(t, e) {\n        Rt[t].mediaBox.topRightY = e * _t + Rt[t].mediaBox.bottomLeftY;\n    };\n    return y.internal = {\n        pdfEscape: Ce,\n        getStyle: tr,\n        getFont: hr,\n        getFontSize: vt,\n        getCharSpace: Pr,\n        getTextColor: Sr,\n        getLineHeight: gr,\n        getLineHeightFactor: vr,\n        getLineWidth: dr,\n        write: ft,\n        getHorizontalCoordinate: br,\n        getVerticalCoordinate: yr,\n        getCoordinateString: wr,\n        getVerticalCoordinateString: Nr,\n        collections: {},\n        newObject: Xt,\n        newAdditionalObject: $t,\n        newObjectDeferred: Kt,\n        newObjectDeferredBegin: Zt,\n        getFilters: ne,\n        putStream: ie,\n        events: Tt,\n        scaleFactor: _t,\n        pageSize: {\n            getWidth: function() {\n                return qr($);\n            },\n            setWidth: function(t) {\n                Dr($, t);\n            },\n            getHeight: function() {\n                return Rr($);\n            },\n            setHeight: function(t) {\n                Tr($, t);\n            }\n        },\n        encryptionOptions: m,\n        encryption: Ye,\n        getEncryptor: Je,\n        output: Ve,\n        getNumberOfPages: Ee,\n        pages: ot,\n        out: lt,\n        f2: R,\n        f3: T,\n        getPageInfo: Xe,\n        getPageInfoByObjId: Ke,\n        getCurrentPageInfo: Ze,\n        getPDFVersion: N,\n        Point: Cr,\n        Rectangle: jr,\n        Matrix: Vt,\n        hasHotfix: Ge\n    }, Object.defineProperty(y.internal.pageSize, \"width\", {\n        get: function() {\n            return qr($);\n        },\n        set: function(t) {\n            Dr($, t);\n        },\n        enumerable: !0,\n        configurable: !0\n    }), Object.defineProperty(y.internal.pageSize, \"height\", {\n        get: function() {\n            return Rr($);\n        },\n        set: function(t) {\n            Tr($, t);\n        },\n        enumerable: !0,\n        configurable: !0\n    }), ke.call(y, pt), St = \"F1\", Oe(s, i), Tt.publish(\"initialized\"), y;\n}\n_c9 = E;\nI.prototype.lsbFirstWord = function(t) {\n    return String.fromCharCode(t >> 0 & 255, t >> 8 & 255, t >> 16 & 255, t >> 24 & 255);\n}, I.prototype.toHexString = function(t) {\n    return t.split(\"\").map(function(t) {\n        return (\"0\" + (255 & t.charCodeAt(0)).toString(16)).slice(-2);\n    }).join(\"\");\n}, I.prototype.hexToBytes = function(t) {\n    for(var e = [], r = 0; r < t.length; r += 2)e.push(String.fromCharCode(parseInt(t.substr(r, 2), 16)));\n    return e.join(\"\");\n}, I.prototype.processOwnerPassword = function(t, e) {\n    return P(x(e).substr(0, 5), t);\n}, I.prototype.encryptor = function(t, e) {\n    var r = x(this.encryptionKey + String.fromCharCode(255 & t, t >> 8 & 255, t >> 16 & 255, 255 & e, e >> 8 & 255)).substr(0, 10);\n    return function(t) {\n        return P(r, t);\n    };\n}, j.prototype.equals = function(e) {\n    var r, n = \"id,objectNumber,equals\";\n    if (!e || (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(e) !== (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this)) return !1;\n    var i = 0;\n    for(r in this)if (!(n.indexOf(r) >= 0)) {\n        if (this.hasOwnProperty(r) && !e.hasOwnProperty(r)) return !1;\n        if (this[r] !== e[r]) return !1;\n        i++;\n    }\n    for(r in e)e.hasOwnProperty(r) && n.indexOf(r) < 0 && i--;\n    return 0 === i;\n}, E.API = {\n    events: []\n}, E.version = \"3.0.1\";\nvar q = E.API, D = 1, R = function(t) {\n    return t.replace(/\\\\/g, \"\\\\\\\\\").replace(/\\(/g, \"\\\\(\").replace(/\\)/g, \"\\\\)\");\n}, T = function(t) {\n    return t.replace(/\\\\\\\\/g, \"\\\\\").replace(/\\\\\\(/g, \"(\").replace(/\\\\\\)/g, \")\");\n}, U = function(t) {\n    return t.toFixed(2);\n}, z = function(t) {\n    return t.toFixed(5);\n};\nq.__acroform__ = {};\nvar H = function(t, e) {\n    t.prototype = Object.create(e.prototype), t.prototype.constructor = t;\n}, W = function(t) {\n    return t * D;\n}, V = function(t) {\n    var e = new ut, r = At.internal.getHeight(t) || 0, n = At.internal.getWidth(t) || 0;\n    return e.BBox = [\n        0,\n        0,\n        Number(U(n)),\n        Number(U(r))\n    ], e;\n}, G = q.__acroform__.setBit = function(t, e) {\n    if (t = t || 0, e = e || 0, isNaN(t) || isNaN(e)) throw new Error(\"Invalid arguments passed to jsPDF.API.__acroform__.setBit\");\n    return t |= 1 << e;\n}, Y = q.__acroform__.clearBit = function(t, e) {\n    if (t = t || 0, e = e || 0, isNaN(t) || isNaN(e)) throw new Error(\"Invalid arguments passed to jsPDF.API.__acroform__.clearBit\");\n    return t &= ~(1 << e);\n}, J = q.__acroform__.getBit = function(t, e) {\n    if (isNaN(t) || isNaN(e)) throw new Error(\"Invalid arguments passed to jsPDF.API.__acroform__.getBit\");\n    return 0 == (t & 1 << e) ? 0 : 1;\n}, X = q.__acroform__.getBitForPdf = function(t, e) {\n    if (isNaN(t) || isNaN(e)) throw new Error(\"Invalid arguments passed to jsPDF.API.__acroform__.getBitForPdf\");\n    return J(t, e - 1);\n}, K = q.__acroform__.setBitForPdf = function(t, e) {\n    if (isNaN(t) || isNaN(e)) throw new Error(\"Invalid arguments passed to jsPDF.API.__acroform__.setBitForPdf\");\n    return G(t, e - 1);\n}, Z = q.__acroform__.clearBitForPdf = function(t, e) {\n    if (isNaN(t) || isNaN(e)) throw new Error(\"Invalid arguments passed to jsPDF.API.__acroform__.clearBitForPdf\");\n    return Y(t, e - 1);\n}, $ = q.__acroform__.calculateCoordinates = function(t, e) {\n    var r = e.internal.getHorizontalCoordinate, n = e.internal.getVerticalCoordinate, i = t[0], a = t[1], o = t[2], s = t[3], c = {};\n    return c.lowerLeft_X = r(i) || 0, c.lowerLeft_Y = n(a + s) || 0, c.upperRight_X = r(i + o) || 0, c.upperRight_Y = n(a) || 0, [\n        Number(U(c.lowerLeft_X)),\n        Number(U(c.lowerLeft_Y)),\n        Number(U(c.upperRight_X)),\n        Number(U(c.upperRight_Y))\n    ];\n}, Q = function(t) {\n    if (t.appearanceStreamContent) return t.appearanceStreamContent;\n    if (t.V || t.DV) {\n        var e = [], r = t._V || t.DV, n = tt(t, r), i = t.scope.internal.getFont(t.fontName, t.fontStyle).id;\n        e.push(\"/Tx BMC\"), e.push(\"q\"), e.push(\"BT\"), e.push(t.scope.__private__.encodeColorString(t.color)), e.push(\"/\" + i + \" \" + U(n.fontSize) + \" Tf\"), e.push(\"1 0 0 1 0 0 Tm\"), e.push(n.text), e.push(\"ET\"), e.push(\"Q\"), e.push(\"EMC\");\n        var a = V(t);\n        return a.scope = t.scope, a.stream = e.join(\"\\n\"), a;\n    }\n}, tt = function(t, e) {\n    var r = 0 === t.fontSize ? t.maxFontSize : t.fontSize, n = {\n        text: \"\",\n        fontSize: \"\"\n    }, i = (e = \")\" == (e = \"(\" == e.substr(0, 1) ? e.substr(1) : e).substr(e.length - 1) ? e.substr(0, e.length - 1) : e).split(\" \");\n    i = t.multiline ? i.map(function(t) {\n        return t.split(\"\\n\");\n    }) : i.map(function(t) {\n        return [\n            t\n        ];\n    });\n    var a = r, o = At.internal.getHeight(t) || 0;\n    o = o < 0 ? -o : o;\n    var s = At.internal.getWidth(t) || 0;\n    s = s < 0 ? -s : s;\n    var c = function(e, r, n) {\n        if (e + 1 < i.length) {\n            var a = r + \" \" + i[e + 1][0];\n            return et(a, t, n).width <= s - 4;\n        }\n        return !1;\n    };\n    a++;\n    t: for(; a > 0;){\n        e = \"\", a--;\n        var u, h, l = et(\"3\", t, a).height, f = t.multiline ? o - a : (o - l) / 2, d = f += 2, p = 0, g = 0, m = 0;\n        if (a <= 0) {\n            e = \"(...) Tj\\n\", e += \"% Width of Text: \" + et(e, t, a = 12).width + \", FieldWidth:\" + s + \"\\n\";\n            break;\n        }\n        for(var v = \"\", b = 0, y = 0; y < i.length; y++)if (i.hasOwnProperty(y)) {\n            var w = !1;\n            if (1 !== i[y].length && m !== i[y].length - 1) {\n                if ((l + 2) * (b + 2) + 2 > o) continue t;\n                v += i[y][m], w = !0, g = y, y--;\n            } else {\n                v = \" \" == (v += i[y][m] + \" \").substr(v.length - 1) ? v.substr(0, v.length - 1) : v;\n                var N = parseInt(y), L = c(N, v, a), A = y >= i.length - 1;\n                if (L && !A) {\n                    v += \" \", m = 0;\n                    continue;\n                }\n                if (L || A) {\n                    if (A) g = N;\n                    else if (t.multiline && (l + 2) * (b + 2) + 2 > o) continue t;\n                } else {\n                    if (!t.multiline) continue t;\n                    if ((l + 2) * (b + 2) + 2 > o) continue t;\n                    g = N;\n                }\n            }\n            for(var x = \"\", S = p; S <= g; S++){\n                var _ = i[S];\n                if (t.multiline) {\n                    if (S === g) {\n                        x += _[m] + \" \", m = (m + 1) % _.length;\n                        continue;\n                    }\n                    if (S === p) {\n                        x += _[_.length - 1] + \" \";\n                        continue;\n                    }\n                }\n                x += _[0] + \" \";\n            }\n            switch(x = \" \" == x.substr(x.length - 1) ? x.substr(0, x.length - 1) : x, h = et(x, t, a).width, t.textAlign){\n                case \"right\":\n                    u = s - h - 2;\n                    break;\n                case \"center\":\n                    u = (s - h) / 2;\n                    break;\n                case \"left\":\n                default:\n                    u = 2;\n            }\n            e += U(u) + \" \" + U(d) + \" Td\\n\", e += \"(\" + R(x) + \") Tj\\n\", e += -U(u) + \" 0 Td\\n\", d = -(a + 2), h = 0, p = w ? g : g + 1, b++, v = \"\";\n        } else ;\n        break;\n    }\n    return n.text = e, n.fontSize = a, n;\n}, et = function(t, e, r) {\n    var n = e.scope.internal.getFont(e.fontName, e.fontStyle), i = e.scope.getStringUnitWidth(t, {\n        font: n,\n        fontSize: parseFloat(r),\n        charSpace: 0\n    }) * parseFloat(r);\n    return {\n        height: e.scope.getStringUnitWidth(\"3\", {\n            font: n,\n            fontSize: parseFloat(r),\n            charSpace: 0\n        }) * parseFloat(r) * 1.5,\n        width: i\n    };\n}, rt = {\n    fields: [],\n    xForms: [],\n    acroFormDictionaryRoot: null,\n    printedOut: !1,\n    internal: null,\n    isInitialized: !1\n}, nt = function(t, e) {\n    var r = {\n        type: \"reference\",\n        object: t\n    };\n    void 0 === e.internal.getPageInfo(t.page).pageContext.annotations.find(function(t) {\n        return t.type === r.type && t.object === r.object;\n    }) && e.internal.getPageInfo(t.page).pageContext.annotations.push(r);\n}, it = function(e, r) {\n    for(var n in e)if (e.hasOwnProperty(n)) {\n        var i = n, a = e[n];\n        r.internal.newObjectDeferredBegin(a.objId, !0), \"object\" === (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(a) && \"function\" == typeof a.putStream && a.putStream(), delete e[i];\n    }\n}, at = function(e, r) {\n    if (r.scope = e, void 0 !== e.internal && (void 0 === e.internal.acroformPlugin || !1 === e.internal.acroformPlugin.isInitialized)) {\n        if (lt.FieldNum = 0, e.internal.acroformPlugin = JSON.parse(JSON.stringify(rt)), e.internal.acroformPlugin.acroFormDictionaryRoot) throw new Error(\"Exception while creating AcroformDictionary\");\n        D = e.internal.scaleFactor, e.internal.acroformPlugin.acroFormDictionaryRoot = new ht, e.internal.acroformPlugin.acroFormDictionaryRoot.scope = e, e.internal.acroformPlugin.acroFormDictionaryRoot._eventID = e.internal.events.subscribe(\"postPutResources\", function() {\n            !function(t) {\n                t.internal.events.unsubscribe(t.internal.acroformPlugin.acroFormDictionaryRoot._eventID), delete t.internal.acroformPlugin.acroFormDictionaryRoot._eventID, t.internal.acroformPlugin.printedOut = !0;\n            }(e);\n        }), e.internal.events.subscribe(\"buildDocument\", function() {\n            !function(t) {\n                t.internal.acroformPlugin.acroFormDictionaryRoot.objId = void 0;\n                var e = t.internal.acroformPlugin.acroFormDictionaryRoot.Fields;\n                for(var r in e)if (e.hasOwnProperty(r)) {\n                    var n = e[r];\n                    n.objId = void 0, n.hasAnnotation && nt(n, t);\n                }\n            }(e);\n        }), e.internal.events.subscribe(\"putCatalog\", function() {\n            !function(t) {\n                if (void 0 === t.internal.acroformPlugin.acroFormDictionaryRoot) throw new Error(\"putCatalogCallback: Root missing.\");\n                t.internal.write(\"/AcroForm \" + t.internal.acroformPlugin.acroFormDictionaryRoot.objId + \" 0 R\");\n            }(e);\n        }), e.internal.events.subscribe(\"postPutPages\", function(r) {\n            !function(e, r) {\n                var n = !e;\n                for(var i in e || (r.internal.newObjectDeferredBegin(r.internal.acroformPlugin.acroFormDictionaryRoot.objId, !0), r.internal.acroformPlugin.acroFormDictionaryRoot.putStream()), e = e || r.internal.acroformPlugin.acroFormDictionaryRoot.Kids)if (e.hasOwnProperty(i)) {\n                    var a = e[i], o = [], s = a.Rect;\n                    if (a.Rect && (a.Rect = $(a.Rect, r)), r.internal.newObjectDeferredBegin(a.objId, !0), a.DA = At.createDefaultAppearanceStream(a), \"object\" === (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(a) && \"function\" == typeof a.getKeyValueListForStream && (o = a.getKeyValueListForStream()), a.Rect = s, a.hasAppearanceStream && !a.appearanceStreamContent) {\n                        var c = Q(a);\n                        o.push({\n                            key: \"AP\",\n                            value: \"<</N \" + c + \">>\"\n                        }), r.internal.acroformPlugin.xForms.push(c);\n                    }\n                    if (a.appearanceStreamContent) {\n                        var u = \"\";\n                        for(var h in a.appearanceStreamContent)if (a.appearanceStreamContent.hasOwnProperty(h)) {\n                            var l = a.appearanceStreamContent[h];\n                            if (u += \"/\" + h + \" \", u += \"<<\", Object.keys(l).length >= 1 || Array.isArray(l)) {\n                                for(var i in l)if (l.hasOwnProperty(i)) {\n                                    var f = l[i];\n                                    \"function\" == typeof f && (f = f.call(r, a)), u += \"/\" + i + \" \" + f + \" \", r.internal.acroformPlugin.xForms.indexOf(f) >= 0 || r.internal.acroformPlugin.xForms.push(f);\n                                }\n                            } else \"function\" == typeof (f = l) && (f = f.call(r, a)), u += \"/\" + i + \" \" + f, r.internal.acroformPlugin.xForms.indexOf(f) >= 0 || r.internal.acroformPlugin.xForms.push(f);\n                            u += \">>\";\n                        }\n                        o.push({\n                            key: \"AP\",\n                            value: \"<<\\n\" + u + \">>\"\n                        });\n                    }\n                    r.internal.putStream({\n                        additionalKeyValues: o,\n                        objectId: a.objId\n                    }), r.internal.out(\"endobj\");\n                }\n                n && it(r.internal.acroformPlugin.xForms, r);\n            }(r, e);\n        }), e.internal.acroformPlugin.isInitialized = !0;\n    }\n}, ot = q.__acroform__.arrayToPdfArray = function(e, r, n) {\n    var i = function(t) {\n        return t;\n    };\n    if (Array.isArray(e)) {\n        for(var a = \"[\", o = 0; o < e.length; o++)switch(0 !== o && (a += \" \"), (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(e[o])){\n            case \"boolean\":\n            case \"number\":\n            case \"object\":\n                a += e[o].toString();\n                break;\n            case \"string\":\n                \"/\" !== e[o].substr(0, 1) ? (void 0 !== r && n && (i = n.internal.getEncryptor(r)), a += \"(\" + R(i(e[o].toString())) + \")\") : a += e[o].toString();\n        }\n        return a += \"]\";\n    }\n    throw new Error(\"Invalid argument passed to jsPDF.__acroform__.arrayToPdfArray\");\n};\nvar st = function(t, e, r) {\n    var n = function(t) {\n        return t;\n    };\n    return void 0 !== e && r && (n = r.internal.getEncryptor(e)), (t = t || \"\").toString(), t = \"(\" + R(n(t)) + \")\";\n}, ct = function() {\n    this._objId = void 0, this._scope = void 0, Object.defineProperty(this, \"objId\", {\n        get: function() {\n            if (void 0 === this._objId) {\n                if (void 0 === this.scope) return;\n                this._objId = this.scope.internal.newObjectDeferred();\n            }\n            return this._objId;\n        },\n        set: function(t) {\n            this._objId = t;\n        }\n    }), Object.defineProperty(this, \"scope\", {\n        value: this._scope,\n        writable: !0\n    });\n};\nct.prototype.toString = function() {\n    return this.objId + \" 0 R\";\n}, ct.prototype.putStream = function() {\n    var t = this.getKeyValueListForStream();\n    this.scope.internal.putStream({\n        data: this.stream,\n        additionalKeyValues: t,\n        objectId: this.objId\n    }), this.scope.internal.out(\"endobj\");\n}, ct.prototype.getKeyValueListForStream = function() {\n    var t = [], e = Object.getOwnPropertyNames(this).filter(function(t) {\n        return \"content\" != t && \"appearanceStreamContent\" != t && \"scope\" != t && \"objId\" != t && \"_\" != t.substring(0, 1);\n    });\n    for(var r in e)if (!1 === Object.getOwnPropertyDescriptor(this, e[r]).configurable) {\n        var n = e[r], i = this[n];\n        i && (Array.isArray(i) ? t.push({\n            key: n,\n            value: ot(i, this.objId, this.scope)\n        }) : i instanceof ct ? (i.scope = this.scope, t.push({\n            key: n,\n            value: i.objId + \" 0 R\"\n        })) : \"function\" != typeof i && t.push({\n            key: n,\n            value: i\n        }));\n    }\n    return t;\n};\nvar ut = function() {\n    ct.call(this), Object.defineProperty(this, \"Type\", {\n        value: \"/XObject\",\n        configurable: !1,\n        writable: !0\n    }), Object.defineProperty(this, \"Subtype\", {\n        value: \"/Form\",\n        configurable: !1,\n        writable: !0\n    }), Object.defineProperty(this, \"FormType\", {\n        value: 1,\n        configurable: !1,\n        writable: !0\n    });\n    var t, e = [];\n    Object.defineProperty(this, \"BBox\", {\n        configurable: !1,\n        get: function() {\n            return e;\n        },\n        set: function(t) {\n            e = t;\n        }\n    }), Object.defineProperty(this, \"Resources\", {\n        value: \"2 0 R\",\n        configurable: !1,\n        writable: !0\n    }), Object.defineProperty(this, \"stream\", {\n        enumerable: !1,\n        configurable: !0,\n        set: function(e) {\n            t = e.trim();\n        },\n        get: function() {\n            return t || null;\n        }\n    });\n};\nH(ut, ct);\nvar ht = function() {\n    ct.call(this);\n    var t, e = [];\n    Object.defineProperty(this, \"Kids\", {\n        enumerable: !1,\n        configurable: !0,\n        get: function() {\n            return e.length > 0 ? e : void 0;\n        }\n    }), Object.defineProperty(this, \"Fields\", {\n        enumerable: !1,\n        configurable: !1,\n        get: function() {\n            return e;\n        }\n    }), Object.defineProperty(this, \"DA\", {\n        enumerable: !1,\n        configurable: !1,\n        get: function() {\n            if (t) {\n                var e = function(t) {\n                    return t;\n                };\n                return this.scope && (e = this.scope.internal.getEncryptor(this.objId)), \"(\" + R(e(t)) + \")\";\n            }\n        },\n        set: function(e) {\n            t = e;\n        }\n    });\n};\nH(ht, ct);\nvar lt = function t() {\n    ct.call(this);\n    var e = 4;\n    Object.defineProperty(this, \"F\", {\n        enumerable: !1,\n        configurable: !1,\n        get: function() {\n            return e;\n        },\n        set: function(t) {\n            if (isNaN(t)) throw new Error('Invalid value \"' + t + '\" for attribute F supplied.');\n            e = t;\n        }\n    }), Object.defineProperty(this, \"showWhenPrinted\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return Boolean(X(e, 3));\n        },\n        set: function(t) {\n            !0 === Boolean(t) ? this.F = K(e, 3) : this.F = Z(e, 3);\n        }\n    });\n    var r = 0;\n    Object.defineProperty(this, \"Ff\", {\n        enumerable: !1,\n        configurable: !1,\n        get: function() {\n            return r;\n        },\n        set: function(t) {\n            if (isNaN(t)) throw new Error('Invalid value \"' + t + '\" for attribute Ff supplied.');\n            r = t;\n        }\n    });\n    var n = [];\n    Object.defineProperty(this, \"Rect\", {\n        enumerable: !1,\n        configurable: !1,\n        get: function() {\n            if (0 !== n.length) return n;\n        },\n        set: function(t) {\n            n = void 0 !== t ? t : [];\n        }\n    }), Object.defineProperty(this, \"x\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return !n || isNaN(n[0]) ? 0 : n[0];\n        },\n        set: function(t) {\n            n[0] = t;\n        }\n    }), Object.defineProperty(this, \"y\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return !n || isNaN(n[1]) ? 0 : n[1];\n        },\n        set: function(t) {\n            n[1] = t;\n        }\n    }), Object.defineProperty(this, \"width\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return !n || isNaN(n[2]) ? 0 : n[2];\n        },\n        set: function(t) {\n            n[2] = t;\n        }\n    }), Object.defineProperty(this, \"height\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return !n || isNaN(n[3]) ? 0 : n[3];\n        },\n        set: function(t) {\n            n[3] = t;\n        }\n    });\n    var i = \"\";\n    Object.defineProperty(this, \"FT\", {\n        enumerable: !0,\n        configurable: !1,\n        get: function() {\n            return i;\n        },\n        set: function(t) {\n            switch(t){\n                case \"/Btn\":\n                case \"/Tx\":\n                case \"/Ch\":\n                case \"/Sig\":\n                    i = t;\n                    break;\n                default:\n                    throw new Error('Invalid value \"' + t + '\" for attribute FT supplied.');\n            }\n        }\n    });\n    var a = null;\n    Object.defineProperty(this, \"T\", {\n        enumerable: !0,\n        configurable: !1,\n        get: function() {\n            if (!a || a.length < 1) {\n                if (this instanceof yt) return;\n                a = \"FieldObject\" + t.FieldNum++;\n            }\n            var e = function(t) {\n                return t;\n            };\n            return this.scope && (e = this.scope.internal.getEncryptor(this.objId)), \"(\" + R(e(a)) + \")\";\n        },\n        set: function(t) {\n            a = t.toString();\n        }\n    }), Object.defineProperty(this, \"fieldName\", {\n        configurable: !0,\n        enumerable: !0,\n        get: function() {\n            return a;\n        },\n        set: function(t) {\n            a = t;\n        }\n    });\n    var o = \"helvetica\";\n    Object.defineProperty(this, \"fontName\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return o;\n        },\n        set: function(t) {\n            o = t;\n        }\n    });\n    var s = \"normal\";\n    Object.defineProperty(this, \"fontStyle\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return s;\n        },\n        set: function(t) {\n            s = t;\n        }\n    });\n    var c = 0;\n    Object.defineProperty(this, \"fontSize\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return c;\n        },\n        set: function(t) {\n            c = t;\n        }\n    });\n    var u = void 0;\n    Object.defineProperty(this, \"maxFontSize\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return void 0 === u ? 50 / D : u;\n        },\n        set: function(t) {\n            u = t;\n        }\n    });\n    var h = \"black\";\n    Object.defineProperty(this, \"color\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return h;\n        },\n        set: function(t) {\n            h = t;\n        }\n    });\n    var l = \"/F1 0 Tf 0 g\";\n    Object.defineProperty(this, \"DA\", {\n        enumerable: !0,\n        configurable: !1,\n        get: function() {\n            if (!(!l || this instanceof yt || this instanceof Nt)) return st(l, this.objId, this.scope);\n        },\n        set: function(t) {\n            t = t.toString(), l = t;\n        }\n    });\n    var f = null;\n    Object.defineProperty(this, \"DV\", {\n        enumerable: !1,\n        configurable: !1,\n        get: function() {\n            if (f) return this instanceof mt == !1 ? st(f, this.objId, this.scope) : f;\n        },\n        set: function(t) {\n            t = t.toString(), f = this instanceof mt == !1 ? \"(\" === t.substr(0, 1) ? T(t.substr(1, t.length - 2)) : T(t) : t;\n        }\n    }), Object.defineProperty(this, \"defaultValue\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return this instanceof mt == !0 ? T(f.substr(1, f.length - 1)) : f;\n        },\n        set: function(t) {\n            t = t.toString(), f = this instanceof mt == !0 ? \"/\" + t : t;\n        }\n    });\n    var d = null;\n    Object.defineProperty(this, \"_V\", {\n        enumerable: !1,\n        configurable: !1,\n        get: function() {\n            if (d) return d;\n        },\n        set: function(t) {\n            this.V = t;\n        }\n    }), Object.defineProperty(this, \"V\", {\n        enumerable: !1,\n        configurable: !1,\n        get: function() {\n            if (d) return this instanceof mt == !1 ? st(d, this.objId, this.scope) : d;\n        },\n        set: function(t) {\n            t = t.toString(), d = this instanceof mt == !1 ? \"(\" === t.substr(0, 1) ? T(t.substr(1, t.length - 2)) : T(t) : t;\n        }\n    }), Object.defineProperty(this, \"value\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return this instanceof mt == !0 ? T(d.substr(1, d.length - 1)) : d;\n        },\n        set: function(t) {\n            t = t.toString(), d = this instanceof mt == !0 ? \"/\" + t : t;\n        }\n    }), Object.defineProperty(this, \"hasAnnotation\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return this.Rect;\n        }\n    }), Object.defineProperty(this, \"Type\", {\n        enumerable: !0,\n        configurable: !1,\n        get: function() {\n            return this.hasAnnotation ? \"/Annot\" : null;\n        }\n    }), Object.defineProperty(this, \"Subtype\", {\n        enumerable: !0,\n        configurable: !1,\n        get: function() {\n            return this.hasAnnotation ? \"/Widget\" : null;\n        }\n    });\n    var p, g = !1;\n    Object.defineProperty(this, \"hasAppearanceStream\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return g;\n        },\n        set: function(t) {\n            t = Boolean(t), g = t;\n        }\n    }), Object.defineProperty(this, \"page\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            if (p) return p;\n        },\n        set: function(t) {\n            p = t;\n        }\n    }), Object.defineProperty(this, \"readOnly\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return Boolean(X(this.Ff, 1));\n        },\n        set: function(t) {\n            !0 === Boolean(t) ? this.Ff = K(this.Ff, 1) : this.Ff = Z(this.Ff, 1);\n        }\n    }), Object.defineProperty(this, \"required\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return Boolean(X(this.Ff, 2));\n        },\n        set: function(t) {\n            !0 === Boolean(t) ? this.Ff = K(this.Ff, 2) : this.Ff = Z(this.Ff, 2);\n        }\n    }), Object.defineProperty(this, \"noExport\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return Boolean(X(this.Ff, 3));\n        },\n        set: function(t) {\n            !0 === Boolean(t) ? this.Ff = K(this.Ff, 3) : this.Ff = Z(this.Ff, 3);\n        }\n    });\n    var m = null;\n    Object.defineProperty(this, \"Q\", {\n        enumerable: !0,\n        configurable: !1,\n        get: function() {\n            if (null !== m) return m;\n        },\n        set: function(t) {\n            if (-1 === [\n                0,\n                1,\n                2\n            ].indexOf(t)) throw new Error('Invalid value \"' + t + '\" for attribute Q supplied.');\n            m = t;\n        }\n    }), Object.defineProperty(this, \"textAlign\", {\n        get: function() {\n            var t;\n            switch(m){\n                case 0:\n                default:\n                    t = \"left\";\n                    break;\n                case 1:\n                    t = \"center\";\n                    break;\n                case 2:\n                    t = \"right\";\n            }\n            return t;\n        },\n        configurable: !0,\n        enumerable: !0,\n        set: function(t) {\n            switch(t){\n                case \"right\":\n                case 2:\n                    m = 2;\n                    break;\n                case \"center\":\n                case 1:\n                    m = 1;\n                    break;\n                case \"left\":\n                case 0:\n                default:\n                    m = 0;\n            }\n        }\n    });\n};\nH(lt, ct);\nvar ft = function() {\n    lt.call(this), this.FT = \"/Ch\", this.V = \"()\", this.fontName = \"zapfdingbats\";\n    var t = 0;\n    Object.defineProperty(this, \"TI\", {\n        enumerable: !0,\n        configurable: !1,\n        get: function() {\n            return t;\n        },\n        set: function(e) {\n            t = e;\n        }\n    }), Object.defineProperty(this, \"topIndex\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return t;\n        },\n        set: function(e) {\n            t = e;\n        }\n    });\n    var e = [];\n    Object.defineProperty(this, \"Opt\", {\n        enumerable: !0,\n        configurable: !1,\n        get: function() {\n            return ot(e, this.objId, this.scope);\n        },\n        set: function(t) {\n            var r, n;\n            n = [], \"string\" == typeof (r = t) && (n = function(t, e, r) {\n                r || (r = 1);\n                for(var n, i = []; n = e.exec(t);)i.push(n[r]);\n                return i;\n            }(r, /\\((.*?)\\)/g)), e = n;\n        }\n    }), this.getOptions = function() {\n        return e;\n    }, this.setOptions = function(t) {\n        e = t, this.sort && e.sort();\n    }, this.addOption = function(t) {\n        t = (t = t || \"\").toString(), e.push(t), this.sort && e.sort();\n    }, this.removeOption = function(t, r) {\n        for(r = r || !1, t = (t = t || \"\").toString(); -1 !== e.indexOf(t) && (e.splice(e.indexOf(t), 1), !1 !== r););\n    }, Object.defineProperty(this, \"combo\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return Boolean(X(this.Ff, 18));\n        },\n        set: function(t) {\n            !0 === Boolean(t) ? this.Ff = K(this.Ff, 18) : this.Ff = Z(this.Ff, 18);\n        }\n    }), Object.defineProperty(this, \"edit\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return Boolean(X(this.Ff, 19));\n        },\n        set: function(t) {\n            !0 === this.combo && (!0 === Boolean(t) ? this.Ff = K(this.Ff, 19) : this.Ff = Z(this.Ff, 19));\n        }\n    }), Object.defineProperty(this, \"sort\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return Boolean(X(this.Ff, 20));\n        },\n        set: function(t) {\n            !0 === Boolean(t) ? (this.Ff = K(this.Ff, 20), e.sort()) : this.Ff = Z(this.Ff, 20);\n        }\n    }), Object.defineProperty(this, \"multiSelect\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return Boolean(X(this.Ff, 22));\n        },\n        set: function(t) {\n            !0 === Boolean(t) ? this.Ff = K(this.Ff, 22) : this.Ff = Z(this.Ff, 22);\n        }\n    }), Object.defineProperty(this, \"doNotSpellCheck\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return Boolean(X(this.Ff, 23));\n        },\n        set: function(t) {\n            !0 === Boolean(t) ? this.Ff = K(this.Ff, 23) : this.Ff = Z(this.Ff, 23);\n        }\n    }), Object.defineProperty(this, \"commitOnSelChange\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return Boolean(X(this.Ff, 27));\n        },\n        set: function(t) {\n            !0 === Boolean(t) ? this.Ff = K(this.Ff, 27) : this.Ff = Z(this.Ff, 27);\n        }\n    }), this.hasAppearanceStream = !1;\n};\nH(ft, lt);\nvar dt = function() {\n    ft.call(this), this.fontName = \"helvetica\", this.combo = !1;\n};\nH(dt, ft);\nvar pt = function() {\n    dt.call(this), this.combo = !0;\n};\nH(pt, dt);\nvar gt = function() {\n    pt.call(this), this.edit = !0;\n};\nH(gt, pt);\nvar mt = function() {\n    lt.call(this), this.FT = \"/Btn\", Object.defineProperty(this, \"noToggleToOff\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return Boolean(X(this.Ff, 15));\n        },\n        set: function(t) {\n            !0 === Boolean(t) ? this.Ff = K(this.Ff, 15) : this.Ff = Z(this.Ff, 15);\n        }\n    }), Object.defineProperty(this, \"radio\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return Boolean(X(this.Ff, 16));\n        },\n        set: function(t) {\n            !0 === Boolean(t) ? this.Ff = K(this.Ff, 16) : this.Ff = Z(this.Ff, 16);\n        }\n    }), Object.defineProperty(this, \"pushButton\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return Boolean(X(this.Ff, 17));\n        },\n        set: function(t) {\n            !0 === Boolean(t) ? this.Ff = K(this.Ff, 17) : this.Ff = Z(this.Ff, 17);\n        }\n    }), Object.defineProperty(this, \"radioIsUnison\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return Boolean(X(this.Ff, 26));\n        },\n        set: function(t) {\n            !0 === Boolean(t) ? this.Ff = K(this.Ff, 26) : this.Ff = Z(this.Ff, 26);\n        }\n    });\n    var e, r = {};\n    Object.defineProperty(this, \"MK\", {\n        enumerable: !1,\n        configurable: !1,\n        get: function() {\n            var t = function(t) {\n                return t;\n            };\n            if (this.scope && (t = this.scope.internal.getEncryptor(this.objId)), 0 !== Object.keys(r).length) {\n                var e, n = [];\n                for(e in n.push(\"<<\"), r)n.push(\"/\" + e + \" (\" + R(t(r[e])) + \")\");\n                return n.push(\">>\"), n.join(\"\\n\");\n            }\n        },\n        set: function(e) {\n            \"object\" === (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(e) && (r = e);\n        }\n    }), Object.defineProperty(this, \"caption\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return r.CA || \"\";\n        },\n        set: function(t) {\n            \"string\" == typeof t && (r.CA = t);\n        }\n    }), Object.defineProperty(this, \"AS\", {\n        enumerable: !1,\n        configurable: !1,\n        get: function() {\n            return e;\n        },\n        set: function(t) {\n            e = t;\n        }\n    }), Object.defineProperty(this, \"appearanceState\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return e.substr(1, e.length - 1);\n        },\n        set: function(t) {\n            e = \"/\" + t;\n        }\n    });\n};\nH(mt, lt);\nvar vt = function() {\n    mt.call(this), this.pushButton = !0;\n};\nH(vt, mt);\nvar bt = function() {\n    mt.call(this), this.radio = !0, this.pushButton = !1;\n    var t = [];\n    Object.defineProperty(this, \"Kids\", {\n        enumerable: !0,\n        configurable: !1,\n        get: function() {\n            return t;\n        },\n        set: function(e) {\n            t = void 0 !== e ? e : [];\n        }\n    });\n};\nH(bt, mt);\nvar yt = function() {\n    var e, r;\n    lt.call(this), Object.defineProperty(this, \"Parent\", {\n        enumerable: !1,\n        configurable: !1,\n        get: function() {\n            return e;\n        },\n        set: function(t) {\n            e = t;\n        }\n    }), Object.defineProperty(this, \"optionName\", {\n        enumerable: !1,\n        configurable: !0,\n        get: function() {\n            return r;\n        },\n        set: function(t) {\n            r = t;\n        }\n    });\n    var n, i = {};\n    Object.defineProperty(this, \"MK\", {\n        enumerable: !1,\n        configurable: !1,\n        get: function() {\n            var t = function(t) {\n                return t;\n            };\n            this.scope && (t = this.scope.internal.getEncryptor(this.objId));\n            var e, r = [];\n            for(e in r.push(\"<<\"), i)r.push(\"/\" + e + \" (\" + R(t(i[e])) + \")\");\n            return r.push(\">>\"), r.join(\"\\n\");\n        },\n        set: function(e) {\n            \"object\" === (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(e) && (i = e);\n        }\n    }), Object.defineProperty(this, \"caption\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return i.CA || \"\";\n        },\n        set: function(t) {\n            \"string\" == typeof t && (i.CA = t);\n        }\n    }), Object.defineProperty(this, \"AS\", {\n        enumerable: !1,\n        configurable: !1,\n        get: function() {\n            return n;\n        },\n        set: function(t) {\n            n = t;\n        }\n    }), Object.defineProperty(this, \"appearanceState\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return n.substr(1, n.length - 1);\n        },\n        set: function(t) {\n            n = \"/\" + t;\n        }\n    }), this.caption = \"l\", this.appearanceState = \"Off\", this._AppearanceType = At.RadioButton.Circle, this.appearanceStreamContent = this._AppearanceType.createAppearanceStream(this.optionName);\n};\nH(yt, lt), bt.prototype.setAppearance = function(t) {\n    if (!(\"createAppearanceStream\" in t) || !(\"getCA\" in t)) throw new Error(\"Couldn't assign Appearance to RadioButton. Appearance was Invalid!\");\n    for(var e in this.Kids)if (this.Kids.hasOwnProperty(e)) {\n        var r = this.Kids[e];\n        r.appearanceStreamContent = t.createAppearanceStream(r.optionName), r.caption = t.getCA();\n    }\n}, bt.prototype.createOption = function(t) {\n    var e = new yt;\n    return e.Parent = this, e.optionName = t, this.Kids.push(e), xt.call(this.scope, e), e;\n};\nvar wt = function() {\n    mt.call(this), this.fontName = \"zapfdingbats\", this.caption = \"3\", this.appearanceState = \"On\", this.value = \"On\", this.textAlign = \"center\", this.appearanceStreamContent = At.CheckBox.createAppearanceStream();\n};\nH(wt, mt);\nvar Nt = function() {\n    lt.call(this), this.FT = \"/Tx\", Object.defineProperty(this, \"multiline\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return Boolean(X(this.Ff, 13));\n        },\n        set: function(t) {\n            !0 === Boolean(t) ? this.Ff = K(this.Ff, 13) : this.Ff = Z(this.Ff, 13);\n        }\n    }), Object.defineProperty(this, \"fileSelect\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return Boolean(X(this.Ff, 21));\n        },\n        set: function(t) {\n            !0 === Boolean(t) ? this.Ff = K(this.Ff, 21) : this.Ff = Z(this.Ff, 21);\n        }\n    }), Object.defineProperty(this, \"doNotSpellCheck\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return Boolean(X(this.Ff, 23));\n        },\n        set: function(t) {\n            !0 === Boolean(t) ? this.Ff = K(this.Ff, 23) : this.Ff = Z(this.Ff, 23);\n        }\n    }), Object.defineProperty(this, \"doNotScroll\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return Boolean(X(this.Ff, 24));\n        },\n        set: function(t) {\n            !0 === Boolean(t) ? this.Ff = K(this.Ff, 24) : this.Ff = Z(this.Ff, 24);\n        }\n    }), Object.defineProperty(this, \"comb\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return Boolean(X(this.Ff, 25));\n        },\n        set: function(t) {\n            !0 === Boolean(t) ? this.Ff = K(this.Ff, 25) : this.Ff = Z(this.Ff, 25);\n        }\n    }), Object.defineProperty(this, \"richText\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return Boolean(X(this.Ff, 26));\n        },\n        set: function(t) {\n            !0 === Boolean(t) ? this.Ff = K(this.Ff, 26) : this.Ff = Z(this.Ff, 26);\n        }\n    });\n    var t = null;\n    Object.defineProperty(this, \"MaxLen\", {\n        enumerable: !0,\n        configurable: !1,\n        get: function() {\n            return t;\n        },\n        set: function(e) {\n            t = e;\n        }\n    }), Object.defineProperty(this, \"maxLength\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return t;\n        },\n        set: function(e) {\n            Number.isInteger(e) && (t = e);\n        }\n    }), Object.defineProperty(this, \"hasAppearanceStream\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return this.V || this.DV;\n        }\n    });\n};\n_c10 = Nt;\nH(Nt, lt);\nvar Lt = function() {\n    Nt.call(this), Object.defineProperty(this, \"password\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return Boolean(X(this.Ff, 14));\n        },\n        set: function(t) {\n            !0 === Boolean(t) ? this.Ff = K(this.Ff, 14) : this.Ff = Z(this.Ff, 14);\n        }\n    }), this.password = !0;\n};\n_c11 = Lt;\nH(Lt, Nt);\nvar At = {\n    CheckBox: {\n        createAppearanceStream: function() {\n            return {\n                N: {\n                    On: At.CheckBox.YesNormal\n                },\n                D: {\n                    On: At.CheckBox.YesPushDown,\n                    Off: At.CheckBox.OffPushDown\n                }\n            };\n        },\n        YesPushDown: function(t) {\n            var e = V(t);\n            e.scope = t.scope;\n            var r = [], n = t.scope.internal.getFont(t.fontName, t.fontStyle).id, i = t.scope.__private__.encodeColorString(t.color), a = tt(t, t.caption);\n            return r.push(\"0.749023 g\"), r.push(\"0 0 \" + U(At.internal.getWidth(t)) + \" \" + U(At.internal.getHeight(t)) + \" re\"), r.push(\"f\"), r.push(\"BMC\"), r.push(\"q\"), r.push(\"0 0 1 rg\"), r.push(\"/\" + n + \" \" + U(a.fontSize) + \" Tf \" + i), r.push(\"BT\"), r.push(a.text), r.push(\"ET\"), r.push(\"Q\"), r.push(\"EMC\"), e.stream = r.join(\"\\n\"), e;\n        },\n        YesNormal: function(t) {\n            var e = V(t);\n            e.scope = t.scope;\n            var r = t.scope.internal.getFont(t.fontName, t.fontStyle).id, n = t.scope.__private__.encodeColorString(t.color), i = [], a = At.internal.getHeight(t), o = At.internal.getWidth(t), s = tt(t, t.caption);\n            return i.push(\"1 g\"), i.push(\"0 0 \" + U(o) + \" \" + U(a) + \" re\"), i.push(\"f\"), i.push(\"q\"), i.push(\"0 0 1 rg\"), i.push(\"0 0 \" + U(o - 1) + \" \" + U(a - 1) + \" re\"), i.push(\"W\"), i.push(\"n\"), i.push(\"0 g\"), i.push(\"BT\"), i.push(\"/\" + r + \" \" + U(s.fontSize) + \" Tf \" + n), i.push(s.text), i.push(\"ET\"), i.push(\"Q\"), e.stream = i.join(\"\\n\"), e;\n        },\n        OffPushDown: function(t) {\n            var e = V(t);\n            e.scope = t.scope;\n            var r = [];\n            return r.push(\"0.749023 g\"), r.push(\"0 0 \" + U(At.internal.getWidth(t)) + \" \" + U(At.internal.getHeight(t)) + \" re\"), r.push(\"f\"), e.stream = r.join(\"\\n\"), e;\n        }\n    },\n    RadioButton: {\n        Circle: {\n            createAppearanceStream: function(t) {\n                var e = {\n                    D: {\n                        Off: At.RadioButton.Circle.OffPushDown\n                    },\n                    N: {}\n                };\n                return e.N[t] = At.RadioButton.Circle.YesNormal, e.D[t] = At.RadioButton.Circle.YesPushDown, e;\n            },\n            getCA: function() {\n                return \"l\";\n            },\n            YesNormal: function(t) {\n                var e = V(t);\n                e.scope = t.scope;\n                var r = [], n = At.internal.getWidth(t) <= At.internal.getHeight(t) ? At.internal.getWidth(t) / 4 : At.internal.getHeight(t) / 4;\n                n = Number((.9 * n).toFixed(5));\n                var i = At.internal.Bezier_C, a = Number((n * i).toFixed(5));\n                return r.push(\"q\"), r.push(\"1 0 0 1 \" + z(At.internal.getWidth(t) / 2) + \" \" + z(At.internal.getHeight(t) / 2) + \" cm\"), r.push(n + \" 0 m\"), r.push(n + \" \" + a + \" \" + a + \" \" + n + \" 0 \" + n + \" c\"), r.push(\"-\" + a + \" \" + n + \" -\" + n + \" \" + a + \" -\" + n + \" 0 c\"), r.push(\"-\" + n + \" -\" + a + \" -\" + a + \" -\" + n + \" 0 -\" + n + \" c\"), r.push(a + \" -\" + n + \" \" + n + \" -\" + a + \" \" + n + \" 0 c\"), r.push(\"f\"), r.push(\"Q\"), e.stream = r.join(\"\\n\"), e;\n            },\n            YesPushDown: function(t) {\n                var e = V(t);\n                e.scope = t.scope;\n                var r = [], n = At.internal.getWidth(t) <= At.internal.getHeight(t) ? At.internal.getWidth(t) / 4 : At.internal.getHeight(t) / 4;\n                n = Number((.9 * n).toFixed(5));\n                var i = Number((2 * n).toFixed(5)), a = Number((i * At.internal.Bezier_C).toFixed(5)), o = Number((n * At.internal.Bezier_C).toFixed(5));\n                return r.push(\"0.749023 g\"), r.push(\"q\"), r.push(\"1 0 0 1 \" + z(At.internal.getWidth(t) / 2) + \" \" + z(At.internal.getHeight(t) / 2) + \" cm\"), r.push(i + \" 0 m\"), r.push(i + \" \" + a + \" \" + a + \" \" + i + \" 0 \" + i + \" c\"), r.push(\"-\" + a + \" \" + i + \" -\" + i + \" \" + a + \" -\" + i + \" 0 c\"), r.push(\"-\" + i + \" -\" + a + \" -\" + a + \" -\" + i + \" 0 -\" + i + \" c\"), r.push(a + \" -\" + i + \" \" + i + \" -\" + a + \" \" + i + \" 0 c\"), r.push(\"f\"), r.push(\"Q\"), r.push(\"0 g\"), r.push(\"q\"), r.push(\"1 0 0 1 \" + z(At.internal.getWidth(t) / 2) + \" \" + z(At.internal.getHeight(t) / 2) + \" cm\"), r.push(n + \" 0 m\"), r.push(n + \" \" + o + \" \" + o + \" \" + n + \" 0 \" + n + \" c\"), r.push(\"-\" + o + \" \" + n + \" -\" + n + \" \" + o + \" -\" + n + \" 0 c\"), r.push(\"-\" + n + \" -\" + o + \" -\" + o + \" -\" + n + \" 0 -\" + n + \" c\"), r.push(o + \" -\" + n + \" \" + n + \" -\" + o + \" \" + n + \" 0 c\"), r.push(\"f\"), r.push(\"Q\"), e.stream = r.join(\"\\n\"), e;\n            },\n            OffPushDown: function(t) {\n                var e = V(t);\n                e.scope = t.scope;\n                var r = [], n = At.internal.getWidth(t) <= At.internal.getHeight(t) ? At.internal.getWidth(t) / 4 : At.internal.getHeight(t) / 4;\n                n = Number((.9 * n).toFixed(5));\n                var i = Number((2 * n).toFixed(5)), a = Number((i * At.internal.Bezier_C).toFixed(5));\n                return r.push(\"0.749023 g\"), r.push(\"q\"), r.push(\"1 0 0 1 \" + z(At.internal.getWidth(t) / 2) + \" \" + z(At.internal.getHeight(t) / 2) + \" cm\"), r.push(i + \" 0 m\"), r.push(i + \" \" + a + \" \" + a + \" \" + i + \" 0 \" + i + \" c\"), r.push(\"-\" + a + \" \" + i + \" -\" + i + \" \" + a + \" -\" + i + \" 0 c\"), r.push(\"-\" + i + \" -\" + a + \" -\" + a + \" -\" + i + \" 0 -\" + i + \" c\"), r.push(a + \" -\" + i + \" \" + i + \" -\" + a + \" \" + i + \" 0 c\"), r.push(\"f\"), r.push(\"Q\"), e.stream = r.join(\"\\n\"), e;\n            }\n        },\n        Cross: {\n            createAppearanceStream: function(t) {\n                var e = {\n                    D: {\n                        Off: At.RadioButton.Cross.OffPushDown\n                    },\n                    N: {}\n                };\n                return e.N[t] = At.RadioButton.Cross.YesNormal, e.D[t] = At.RadioButton.Cross.YesPushDown, e;\n            },\n            getCA: function() {\n                return \"8\";\n            },\n            YesNormal: function(t) {\n                var e = V(t);\n                e.scope = t.scope;\n                var r = [], n = At.internal.calculateCross(t);\n                return r.push(\"q\"), r.push(\"1 1 \" + U(At.internal.getWidth(t) - 2) + \" \" + U(At.internal.getHeight(t) - 2) + \" re\"), r.push(\"W\"), r.push(\"n\"), r.push(U(n.x1.x) + \" \" + U(n.x1.y) + \" m\"), r.push(U(n.x2.x) + \" \" + U(n.x2.y) + \" l\"), r.push(U(n.x4.x) + \" \" + U(n.x4.y) + \" m\"), r.push(U(n.x3.x) + \" \" + U(n.x3.y) + \" l\"), r.push(\"s\"), r.push(\"Q\"), e.stream = r.join(\"\\n\"), e;\n            },\n            YesPushDown: function(t) {\n                var e = V(t);\n                e.scope = t.scope;\n                var r = At.internal.calculateCross(t), n = [];\n                return n.push(\"0.749023 g\"), n.push(\"0 0 \" + U(At.internal.getWidth(t)) + \" \" + U(At.internal.getHeight(t)) + \" re\"), n.push(\"f\"), n.push(\"q\"), n.push(\"1 1 \" + U(At.internal.getWidth(t) - 2) + \" \" + U(At.internal.getHeight(t) - 2) + \" re\"), n.push(\"W\"), n.push(\"n\"), n.push(U(r.x1.x) + \" \" + U(r.x1.y) + \" m\"), n.push(U(r.x2.x) + \" \" + U(r.x2.y) + \" l\"), n.push(U(r.x4.x) + \" \" + U(r.x4.y) + \" m\"), n.push(U(r.x3.x) + \" \" + U(r.x3.y) + \" l\"), n.push(\"s\"), n.push(\"Q\"), e.stream = n.join(\"\\n\"), e;\n            },\n            OffPushDown: function(t) {\n                var e = V(t);\n                e.scope = t.scope;\n                var r = [];\n                return r.push(\"0.749023 g\"), r.push(\"0 0 \" + U(At.internal.getWidth(t)) + \" \" + U(At.internal.getHeight(t)) + \" re\"), r.push(\"f\"), e.stream = r.join(\"\\n\"), e;\n            }\n        }\n    },\n    createDefaultAppearanceStream: function(t) {\n        var e = t.scope.internal.getFont(t.fontName, t.fontStyle).id, r = t.scope.__private__.encodeColorString(t.color);\n        return \"/\" + e + \" \" + t.fontSize + \" Tf \" + r;\n    }\n};\nAt.internal = {\n    Bezier_C: .551915024494,\n    calculateCross: function(t) {\n        var e = At.internal.getWidth(t), r = At.internal.getHeight(t), n = Math.min(e, r);\n        return {\n            x1: {\n                x: (e - n) / 2,\n                y: (r - n) / 2 + n\n            },\n            x2: {\n                x: (e - n) / 2 + n,\n                y: (r - n) / 2\n            },\n            x3: {\n                x: (e - n) / 2,\n                y: (r - n) / 2\n            },\n            x4: {\n                x: (e - n) / 2 + n,\n                y: (r - n) / 2 + n\n            }\n        };\n    }\n}, At.internal.getWidth = function(e) {\n    var r = 0;\n    return \"object\" === (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(e) && (r = W(e.Rect[2])), r;\n}, At.internal.getHeight = function(e) {\n    var r = 0;\n    return \"object\" === (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(e) && (r = W(e.Rect[3])), r;\n};\nvar xt = q.addField = function(t) {\n    if (at(this, t), !(t instanceof lt)) throw new Error(\"Invalid argument passed to jsPDF.addField.\");\n    var e;\n    return (e = t).scope.internal.acroformPlugin.printedOut && (e.scope.internal.acroformPlugin.printedOut = !1, e.scope.internal.acroformPlugin.acroFormDictionaryRoot = null), e.scope.internal.acroformPlugin.acroFormDictionaryRoot.Fields.push(e), t.page = t.scope.internal.getCurrentPageInfo().pageNumber, this;\n};\nq.AcroFormChoiceField = ft, q.AcroFormListBox = dt, q.AcroFormComboBox = pt, q.AcroFormEditBox = gt, q.AcroFormButton = mt, q.AcroFormPushButton = vt, q.AcroFormRadioButton = bt, q.AcroFormCheckBox = wt, q.AcroFormTextField = Nt, q.AcroFormPasswordField = Lt, q.AcroFormAppearance = At, q.AcroForm = {\n    ChoiceField: ft,\n    ListBox: dt,\n    ComboBox: pt,\n    EditBox: gt,\n    Button: mt,\n    PushButton: vt,\n    RadioButton: bt,\n    CheckBox: wt,\n    TextField: Nt,\n    PasswordField: Lt,\n    Appearance: At\n}, E.AcroForm = {\n    ChoiceField: ft,\n    ListBox: dt,\n    ComboBox: pt,\n    EditBox: gt,\n    Button: mt,\n    PushButton: vt,\n    RadioButton: bt,\n    CheckBox: wt,\n    TextField: Nt,\n    PasswordField: Lt,\n    Appearance: At\n};\nvar St = E.AcroForm;\nfunction _t(t) {\n    return t.reduce(function(t, e, r) {\n        return t[e] = r, t;\n    }, {});\n}\n!function(e) {\n    e.__addimage__ = {};\n    var r = \"UNKNOWN\", n = {\n        PNG: [\n            [\n                137,\n                80,\n                78,\n                71\n            ]\n        ],\n        TIFF: [\n            [\n                77,\n                77,\n                0,\n                42\n            ],\n            [\n                73,\n                73,\n                42,\n                0\n            ]\n        ],\n        JPEG: [\n            [\n                255,\n                216,\n                255,\n                224,\n                void 0,\n                void 0,\n                74,\n                70,\n                73,\n                70,\n                0\n            ],\n            [\n                255,\n                216,\n                255,\n                225,\n                void 0,\n                void 0,\n                69,\n                120,\n                105,\n                102,\n                0,\n                0\n            ],\n            [\n                255,\n                216,\n                255,\n                219\n            ],\n            [\n                255,\n                216,\n                255,\n                238\n            ]\n        ],\n        JPEG2000: [\n            [\n                0,\n                0,\n                0,\n                12,\n                106,\n                80,\n                32,\n                32\n            ]\n        ],\n        GIF87a: [\n            [\n                71,\n                73,\n                70,\n                56,\n                55,\n                97\n            ]\n        ],\n        GIF89a: [\n            [\n                71,\n                73,\n                70,\n                56,\n                57,\n                97\n            ]\n        ],\n        WEBP: [\n            [\n                82,\n                73,\n                70,\n                70,\n                void 0,\n                void 0,\n                void 0,\n                void 0,\n                87,\n                69,\n                66,\n                80\n            ]\n        ],\n        BMP: [\n            [\n                66,\n                77\n            ],\n            [\n                66,\n                65\n            ],\n            [\n                67,\n                73\n            ],\n            [\n                67,\n                80\n            ],\n            [\n                73,\n                67\n            ],\n            [\n                80,\n                84\n            ]\n        ]\n    }, i = e.__addimage__.getImageFileTypeByImageData = function(t, e) {\n        var i, a, o, s, c, u = r;\n        if (\"RGBA\" === (e = e || r) || void 0 !== t.data && t.data instanceof Uint8ClampedArray && \"height\" in t && \"width\" in t) return \"RGBA\";\n        if (x(t)) for(c in n)for(o = n[c], i = 0; i < o.length; i += 1){\n            for(s = !0, a = 0; a < o[i].length; a += 1)if (void 0 !== o[i][a] && o[i][a] !== t[a]) {\n                s = !1;\n                break;\n            }\n            if (!0 === s) {\n                u = c;\n                break;\n            }\n        }\n        else for(c in n)for(o = n[c], i = 0; i < o.length; i += 1){\n            for(s = !0, a = 0; a < o[i].length; a += 1)if (void 0 !== o[i][a] && o[i][a] !== t.charCodeAt(a)) {\n                s = !1;\n                break;\n            }\n            if (!0 === s) {\n                u = c;\n                break;\n            }\n        }\n        return u === r && e !== r && (u = e), u;\n    }, a = function t(e) {\n        for(var r = this.internal.write, n = this.internal.putStream, i = (0, this.internal.getFilters)(); -1 !== i.indexOf(\"FlateEncode\");)i.splice(i.indexOf(\"FlateEncode\"), 1);\n        e.objectId = this.internal.newObject();\n        var a = [];\n        if (a.push({\n            key: \"Type\",\n            value: \"/XObject\"\n        }), a.push({\n            key: \"Subtype\",\n            value: \"/Image\"\n        }), a.push({\n            key: \"Width\",\n            value: e.width\n        }), a.push({\n            key: \"Height\",\n            value: e.height\n        }), e.colorSpace === b.INDEXED ? a.push({\n            key: \"ColorSpace\",\n            value: \"[/Indexed /DeviceRGB \" + (e.palette.length / 3 - 1) + \" \" + (\"sMask\" in e && void 0 !== e.sMask ? e.objectId + 2 : e.objectId + 1) + \" 0 R]\"\n        }) : (a.push({\n            key: \"ColorSpace\",\n            value: \"/\" + e.colorSpace\n        }), e.colorSpace === b.DEVICE_CMYK && a.push({\n            key: \"Decode\",\n            value: \"[1 0 1 0 1 0 1 0]\"\n        })), a.push({\n            key: \"BitsPerComponent\",\n            value: e.bitsPerComponent\n        }), \"decodeParameters\" in e && void 0 !== e.decodeParameters && a.push({\n            key: \"DecodeParms\",\n            value: \"<<\" + e.decodeParameters + \">>\"\n        }), \"transparency\" in e && Array.isArray(e.transparency)) {\n            for(var o = \"\", s = 0, c = e.transparency.length; s < c; s++)o += e.transparency[s] + \" \" + e.transparency[s] + \" \";\n            a.push({\n                key: \"Mask\",\n                value: \"[\" + o + \"]\"\n            });\n        }\n        void 0 !== e.sMask && a.push({\n            key: \"SMask\",\n            value: e.objectId + 1 + \" 0 R\"\n        });\n        var u = void 0 !== e.filter ? [\n            \"/\" + e.filter\n        ] : void 0;\n        if (n({\n            data: e.data,\n            additionalKeyValues: a,\n            alreadyAppliedFilters: u,\n            objectId: e.objectId\n        }), r(\"endobj\"), \"sMask\" in e && void 0 !== e.sMask) {\n            var h = \"/Predictor \" + e.predictor + \" /Colors 1 /BitsPerComponent \" + e.bitsPerComponent + \" /Columns \" + e.width, l = {\n                width: e.width,\n                height: e.height,\n                colorSpace: \"DeviceGray\",\n                bitsPerComponent: e.bitsPerComponent,\n                decodeParameters: h,\n                data: e.sMask\n            };\n            \"filter\" in e && (l.filter = e.filter), t.call(this, l);\n        }\n        if (e.colorSpace === b.INDEXED) {\n            var f = this.internal.newObject();\n            n({\n                data: _(new Uint8Array(e.palette)),\n                objectId: f\n            }), r(\"endobj\");\n        }\n    }, o = function() {\n        var t = this.internal.collections.addImage_images;\n        for(var e in t)a.call(this, t[e]);\n    }, s = function() {\n        var t, e = this.internal.collections.addImage_images, r = this.internal.write;\n        for(var n in e)r(\"/I\" + (t = e[n]).index, t.objectId, \"0\", \"R\");\n    }, c = function() {\n        this.internal.collections.addImage_images || (this.internal.collections.addImage_images = {}, this.internal.events.subscribe(\"putResources\", o), this.internal.events.subscribe(\"putXobjectDict\", s));\n    }, h = function() {\n        var t = this.internal.collections.addImage_images;\n        return c.call(this), t;\n    }, l = function() {\n        return Object.keys(this.internal.collections.addImage_images).length;\n    }, f = function(t) {\n        return \"function\" == typeof e[\"process\" + t.toUpperCase()];\n    }, d = function(e) {\n        return \"object\" === (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(e) && 1 === e.nodeType;\n    }, p = function(t, r) {\n        if (\"IMG\" === t.nodeName && t.hasAttribute(\"src\")) {\n            var n = \"\" + t.getAttribute(\"src\");\n            if (0 === n.indexOf(\"data:image/\")) return u(unescape(n).split(\"base64,\").pop());\n            var i = e.loadFile(n, !0);\n            if (void 0 !== i) return i;\n        }\n        if (\"CANVAS\" === t.nodeName) {\n            if (0 === t.width || 0 === t.height) throw new Error(\"Given canvas must have data. Canvas width: \" + t.width + \", height: \" + t.height);\n            var a;\n            switch(r){\n                case \"PNG\":\n                    a = \"image/png\";\n                    break;\n                case \"WEBP\":\n                    a = \"image/webp\";\n                    break;\n                case \"JPEG\":\n                case \"JPG\":\n                default:\n                    a = \"image/jpeg\";\n            }\n            return u(t.toDataURL(a, 1).split(\"base64,\").pop());\n        }\n    }, g = function(t) {\n        var e = this.internal.collections.addImage_images;\n        if (e) {\n            for(var r in e)if (t === e[r].alias) return e[r];\n        }\n    }, m = function(t, e, r) {\n        return t || e || (t = -96, e = -96), t < 0 && (t = -1 * r.width * 72 / t / this.internal.scaleFactor), e < 0 && (e = -1 * r.height * 72 / e / this.internal.scaleFactor), 0 === t && (t = e * r.width / r.height), 0 === e && (e = t * r.height / r.width), [\n            t,\n            e\n        ];\n    }, v = function(t, e, r, n, i, a) {\n        var o = m.call(this, r, n, i), s = this.internal.getCoordinateString, c = this.internal.getVerticalCoordinateString, u = h.call(this);\n        if (r = o[0], n = o[1], u[i.index] = i, a) {\n            a *= Math.PI / 180;\n            var l = Math.cos(a), f = Math.sin(a), d = function(t) {\n                return t.toFixed(4);\n            }, p = [\n                d(l),\n                d(f),\n                d(-1 * f),\n                d(l),\n                0,\n                0,\n                \"cm\"\n            ];\n        }\n        this.internal.write(\"q\"), a ? (this.internal.write([\n            1,\n            \"0\",\n            \"0\",\n            1,\n            s(t),\n            c(e + n),\n            \"cm\"\n        ].join(\" \")), this.internal.write(p.join(\" \")), this.internal.write([\n            s(r),\n            \"0\",\n            \"0\",\n            s(n),\n            \"0\",\n            \"0\",\n            \"cm\"\n        ].join(\" \"))) : this.internal.write([\n            s(r),\n            \"0\",\n            \"0\",\n            s(n),\n            s(t),\n            c(e + n),\n            \"cm\"\n        ].join(\" \")), this.isAdvancedAPI() && this.internal.write([\n            1,\n            0,\n            0,\n            -1,\n            0,\n            0,\n            \"cm\"\n        ].join(\" \")), this.internal.write(\"/I\" + i.index + \" Do\"), this.internal.write(\"Q\");\n    }, b = e.color_spaces = {\n        DEVICE_RGB: \"DeviceRGB\",\n        DEVICE_GRAY: \"DeviceGray\",\n        DEVICE_CMYK: \"DeviceCMYK\",\n        CAL_GREY: \"CalGray\",\n        CAL_RGB: \"CalRGB\",\n        LAB: \"Lab\",\n        ICC_BASED: \"ICCBased\",\n        INDEXED: \"Indexed\",\n        PATTERN: \"Pattern\",\n        SEPARATION: \"Separation\",\n        DEVICE_N: \"DeviceN\"\n    };\n    e.decode = {\n        DCT_DECODE: \"DCTDecode\",\n        FLATE_DECODE: \"FlateDecode\",\n        LZW_DECODE: \"LZWDecode\",\n        JPX_DECODE: \"JPXDecode\",\n        JBIG2_DECODE: \"JBIG2Decode\",\n        ASCII85_DECODE: \"ASCII85Decode\",\n        ASCII_HEX_DECODE: \"ASCIIHexDecode\",\n        RUN_LENGTH_DECODE: \"RunLengthDecode\",\n        CCITT_FAX_DECODE: \"CCITTFaxDecode\"\n    };\n    var y = e.image_compression = {\n        NONE: \"NONE\",\n        FAST: \"FAST\",\n        MEDIUM: \"MEDIUM\",\n        SLOW: \"SLOW\"\n    }, w = e.__addimage__.sHashCode = function(t) {\n        var e, r, n = 0;\n        if (\"string\" == typeof t) for(r = t.length, e = 0; e < r; e++)n = (n << 5) - n + t.charCodeAt(e), n |= 0;\n        else if (x(t)) for(r = t.byteLength / 2, e = 0; e < r; e++)n = (n << 5) - n + t[e], n |= 0;\n        return n;\n    }, N = e.__addimage__.validateStringAsBase64 = function(t) {\n        (t = t || \"\").toString().trim();\n        var e = !0;\n        return 0 === t.length && (e = !1), t.length % 4 != 0 && (e = !1), !1 === /^[A-Za-z0-9+/]+$/.test(t.substr(0, t.length - 2)) && (e = !1), !1 === /^[A-Za-z0-9/][A-Za-z0-9+/]|[A-Za-z0-9+/]=|==$/.test(t.substr(-2)) && (e = !1), e;\n    }, L = e.__addimage__.extractImageFromDataUrl = function(t) {\n        if (null == t) return null;\n        if (!(t = t.trim()).startsWith(\"data:\")) return null;\n        var e = t.indexOf(\",\");\n        return e < 0 ? null : t.substring(0, e).trim().endsWith(\"base64\") ? t.substring(e + 1) : null;\n    }, A = e.__addimage__.supportsArrayBuffer = function() {\n        return \"undefined\" != typeof ArrayBuffer && \"undefined\" != typeof Uint8Array;\n    };\n    e.__addimage__.isArrayBuffer = function(t) {\n        return A() && t instanceof ArrayBuffer;\n    };\n    var x = e.__addimage__.isArrayBufferView = function(t) {\n        return A() && \"undefined\" != typeof Uint32Array && (t instanceof Int8Array || t instanceof Uint8Array || \"undefined\" != typeof Uint8ClampedArray && t instanceof Uint8ClampedArray || t instanceof Int16Array || t instanceof Uint16Array || t instanceof Int32Array || t instanceof Uint32Array || t instanceof Float32Array || t instanceof Float64Array);\n    }, S = e.__addimage__.binaryStringToUint8Array = function(t) {\n        for(var e = t.length, r = new Uint8Array(e), n = 0; n < e; n++)r[n] = t.charCodeAt(n);\n        return r;\n    }, _ = e.__addimage__.arrayBufferToBinaryString = function(t) {\n        for(var e = \"\", r = x(t) ? t : new Uint8Array(t), n = 0; n < r.length; n += 8192)e += String.fromCharCode.apply(null, r.subarray(n, n + 8192));\n        return e;\n    };\n    e.addImage = function() {\n        var e, n, i, a, o, s, u, h, l;\n        if (\"number\" == typeof arguments[1] ? (n = r, i = arguments[1], a = arguments[2], o = arguments[3], s = arguments[4], u = arguments[5], h = arguments[6], l = arguments[7]) : (n = arguments[1], i = arguments[2], a = arguments[3], o = arguments[4], s = arguments[5], u = arguments[6], h = arguments[7], l = arguments[8]), \"object\" === (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(e = arguments[0]) && !d(e) && \"imageData\" in e) {\n            var f = e;\n            e = f.imageData, n = f.format || n || r, i = f.x || i || 0, a = f.y || a || 0, o = f.w || f.width || o, s = f.h || f.height || s, u = f.alias || u, h = f.compression || h, l = f.rotation || f.angle || l;\n        }\n        var p = this.internal.getFilters();\n        if (void 0 === h && -1 !== p.indexOf(\"FlateEncode\") && (h = \"SLOW\"), isNaN(i) || isNaN(a)) throw new Error(\"Invalid coordinates passed to jsPDF.addImage\");\n        c.call(this);\n        var g = P.call(this, e, n, u, h);\n        return v.call(this, i, a, o, s, g, l), this;\n    };\n    var P = function(t, n, a, o) {\n        var s, c, u;\n        if (\"string\" == typeof t && i(t) === r) {\n            t = unescape(t);\n            var h = k(t, !1);\n            (\"\" !== h || void 0 !== (h = e.loadFile(t, !0))) && (t = h);\n        }\n        if (d(t) && (t = p(t, n)), n = i(t, n), !f(n)) throw new Error(\"addImage does not support files of type '\" + n + \"', please ensure that a plugin for '\" + n + \"' support is added.\");\n        if ((null == (u = a) || 0 === u.length) && (a = function(t) {\n            return \"string\" == typeof t || x(t) ? w(t) : x(t.data) ? w(t.data) : null;\n        }(t)), (s = g.call(this, a)) || (A() && (t instanceof Uint8Array || \"RGBA\" === n || (c = t, t = S(t))), s = this[\"process\" + n.toUpperCase()](t, l.call(this), a, function(t) {\n            return t && \"string\" == typeof t && (t = t.toUpperCase()), t in e.image_compression ? t : y.NONE;\n        }(o), c)), !s) throw new Error(\"An unknown error occurred whilst processing the image.\");\n        return s;\n    }, k = e.__addimage__.convertBase64ToBinaryString = function(t, e) {\n        e = \"boolean\" != typeof e || e;\n        var r, n = \"\";\n        if (\"string\" == typeof t) {\n            var i;\n            r = null !== (i = L(t)) && void 0 !== i ? i : t;\n            try {\n                n = u(r);\n            } catch (t) {\n                if (e) throw N(r) ? new Error(\"atob-Error in jsPDF.convertBase64ToBinaryString \" + t.message) : new Error(\"Supplied Data is not a valid base64-String jsPDF.convertBase64ToBinaryString \");\n            }\n        }\n        return n;\n    };\n    e.getImageProperties = function(t) {\n        var n, a, o = \"\";\n        if (d(t) && (t = p(t)), \"string\" == typeof t && i(t) === r && (\"\" === (o = k(t, !1)) && (o = e.loadFile(t) || \"\"), t = o), a = i(t), !f(a)) throw new Error(\"addImage does not support files of type '\" + a + \"', please ensure that a plugin for '\" + a + \"' support is added.\");\n        if (!A() || t instanceof Uint8Array || (t = S(t)), !(n = this[\"process\" + a.toUpperCase()](t))) throw new Error(\"An unknown error occurred whilst processing the image\");\n        return n.fileType = a, n;\n    };\n}(E.API), /**\n * @license\n * Copyright (c) 2014 Steven Spungin (TwelveTone LLC)  steven@twelvetone.tv\n *\n * Licensed under the MIT License.\n * http://opensource.org/licenses/mit-license\n */ function(t) {\n    var e = function(t) {\n        if (void 0 !== t && \"\" != t) return !0;\n    };\n    E.API.events.push([\n        \"addPage\",\n        function(t) {\n            this.internal.getPageInfo(t.pageNumber).pageContext.annotations = [];\n        }\n    ]), t.events.push([\n        \"putPage\",\n        function(t) {\n            for(var r, n, i, a = this.internal.getCoordinateString, o = this.internal.getVerticalCoordinateString, s = this.internal.getPageInfoByObjId(t.objId), c = t.pageContext.annotations, u = !1, h = 0; h < c.length && !u; h++)switch((r = c[h]).type){\n                case \"link\":\n                    (e(r.options.url) || e(r.options.pageNumber)) && (u = !0);\n                    break;\n                case \"reference\":\n                case \"text\":\n                case \"freetext\":\n                    u = !0;\n            }\n            if (0 != u) {\n                this.internal.write(\"/Annots [\");\n                for(var l = 0; l < c.length; l++){\n                    r = c[l];\n                    var f = this.internal.pdfEscape, d = this.internal.getEncryptor(t.objId);\n                    switch(r.type){\n                        case \"reference\":\n                            this.internal.write(\" \" + r.object.objId + \" 0 R \");\n                            break;\n                        case \"text\":\n                            var p = this.internal.newAdditionalObject(), g = this.internal.newAdditionalObject(), m = this.internal.getEncryptor(p.objId), v = r.title || \"Note\";\n                            i = \"<</Type /Annot /Subtype /Text \" + (n = \"/Rect [\" + a(r.bounds.x) + \" \" + o(r.bounds.y + r.bounds.h) + \" \" + a(r.bounds.x + r.bounds.w) + \" \" + o(r.bounds.y) + \"] \") + \"/Contents (\" + f(m(r.contents)) + \")\", i += \" /Popup \" + g.objId + \" 0 R\", i += \" /P \" + s.objId + \" 0 R\", i += \" /T (\" + f(m(v)) + \") >>\", p.content = i;\n                            var b = p.objId + \" 0 R\";\n                            i = \"<</Type /Annot /Subtype /Popup \" + (n = \"/Rect [\" + a(r.bounds.x + 30) + \" \" + o(r.bounds.y + r.bounds.h) + \" \" + a(r.bounds.x + r.bounds.w + 30) + \" \" + o(r.bounds.y) + \"] \") + \" /Parent \" + b, r.open && (i += \" /Open true\"), i += \" >>\", g.content = i, this.internal.write(p.objId, \"0 R\", g.objId, \"0 R\");\n                            break;\n                        case \"freetext\":\n                            n = \"/Rect [\" + a(r.bounds.x) + \" \" + o(r.bounds.y) + \" \" + a(r.bounds.x + r.bounds.w) + \" \" + o(r.bounds.y + r.bounds.h) + \"] \";\n                            var y = r.color || \"#000000\";\n                            i = \"<</Type /Annot /Subtype /FreeText \" + n + \"/Contents (\" + f(d(r.contents)) + \")\", i += \" /DS(font: Helvetica,sans-serif 12.0pt; text-align:left; color:#\" + y + \")\", i += \" /Border [0 0 0]\", i += \" >>\", this.internal.write(i);\n                            break;\n                        case \"link\":\n                            if (r.options.name) {\n                                var w = this.annotations._nameMap[r.options.name];\n                                r.options.pageNumber = w.page, r.options.top = w.y;\n                            } else r.options.top || (r.options.top = 0);\n                            if (n = \"/Rect [\" + r.finalBounds.x + \" \" + r.finalBounds.y + \" \" + r.finalBounds.w + \" \" + r.finalBounds.h + \"] \", i = \"\", r.options.url) i = \"<</Type /Annot /Subtype /Link \" + n + \"/Border [0 0 0] /A <</S /URI /URI (\" + f(d(r.options.url)) + \") >>\";\n                            else if (r.options.pageNumber) {\n                                switch(i = \"<</Type /Annot /Subtype /Link \" + n + \"/Border [0 0 0] /Dest [\" + this.internal.getPageInfo(r.options.pageNumber).objId + \" 0 R\", r.options.magFactor = r.options.magFactor || \"XYZ\", r.options.magFactor){\n                                    case \"Fit\":\n                                        i += \" /Fit]\";\n                                        break;\n                                    case \"FitH\":\n                                        i += \" /FitH \" + r.options.top + \"]\";\n                                        break;\n                                    case \"FitV\":\n                                        r.options.left = r.options.left || 0, i += \" /FitV \" + r.options.left + \"]\";\n                                        break;\n                                    case \"XYZ\":\n                                    default:\n                                        var N = o(r.options.top);\n                                        r.options.left = r.options.left || 0, void 0 === r.options.zoom && (r.options.zoom = 0), i += \" /XYZ \" + r.options.left + \" \" + N + \" \" + r.options.zoom + \"]\";\n                                }\n                            }\n                            \"\" != i && (i += \" >>\", this.internal.write(i));\n                    }\n                }\n                this.internal.write(\"]\");\n            }\n        }\n    ]), t.createAnnotation = function(t) {\n        var e = this.internal.getCurrentPageInfo();\n        switch(t.type){\n            case \"link\":\n                this.link(t.bounds.x, t.bounds.y, t.bounds.w, t.bounds.h, t);\n                break;\n            case \"text\":\n            case \"freetext\":\n                e.pageContext.annotations.push(t);\n        }\n    }, t.link = function(t, e, r, n, i) {\n        var a = this.internal.getCurrentPageInfo(), o = this.internal.getCoordinateString, s = this.internal.getVerticalCoordinateString;\n        a.pageContext.annotations.push({\n            finalBounds: {\n                x: o(t),\n                y: s(e),\n                w: o(t + r),\n                h: s(e + n)\n            },\n            options: i,\n            type: \"link\"\n        });\n    }, t.textWithLink = function(t, e, r, n) {\n        var i, a, o = this.getTextWidth(t), s = this.internal.getLineHeight() / this.internal.scaleFactor;\n        if (void 0 !== n.maxWidth) {\n            a = n.maxWidth;\n            var c = this.splitTextToSize(t, a).length;\n            i = Math.ceil(s * c);\n        } else a = o, i = s;\n        return this.text(t, e, r, n), r += .2 * s, \"center\" === n.align && (e -= o / 2), \"right\" === n.align && (e -= o), this.link(e, r - s, a, i, n), o;\n    }, t.getTextWidth = function(t) {\n        var e = this.internal.getFontSize();\n        return this.getStringUnitWidth(t) * e / this.internal.scaleFactor;\n    };\n}(E.API), /**\n * @license\n * Copyright (c) 2017 Aras Abbasi\n *\n * Licensed under the MIT License.\n * http://opensource.org/licenses/mit-license\n */ function(t) {\n    var e = {\n        1569: [\n            65152\n        ],\n        1570: [\n            65153,\n            65154\n        ],\n        1571: [\n            65155,\n            65156\n        ],\n        1572: [\n            65157,\n            65158\n        ],\n        1573: [\n            65159,\n            65160\n        ],\n        1574: [\n            65161,\n            65162,\n            65163,\n            65164\n        ],\n        1575: [\n            65165,\n            65166\n        ],\n        1576: [\n            65167,\n            65168,\n            65169,\n            65170\n        ],\n        1577: [\n            65171,\n            65172\n        ],\n        1578: [\n            65173,\n            65174,\n            65175,\n            65176\n        ],\n        1579: [\n            65177,\n            65178,\n            65179,\n            65180\n        ],\n        1580: [\n            65181,\n            65182,\n            65183,\n            65184\n        ],\n        1581: [\n            65185,\n            65186,\n            65187,\n            65188\n        ],\n        1582: [\n            65189,\n            65190,\n            65191,\n            65192\n        ],\n        1583: [\n            65193,\n            65194\n        ],\n        1584: [\n            65195,\n            65196\n        ],\n        1585: [\n            65197,\n            65198\n        ],\n        1586: [\n            65199,\n            65200\n        ],\n        1587: [\n            65201,\n            65202,\n            65203,\n            65204\n        ],\n        1588: [\n            65205,\n            65206,\n            65207,\n            65208\n        ],\n        1589: [\n            65209,\n            65210,\n            65211,\n            65212\n        ],\n        1590: [\n            65213,\n            65214,\n            65215,\n            65216\n        ],\n        1591: [\n            65217,\n            65218,\n            65219,\n            65220\n        ],\n        1592: [\n            65221,\n            65222,\n            65223,\n            65224\n        ],\n        1593: [\n            65225,\n            65226,\n            65227,\n            65228\n        ],\n        1594: [\n            65229,\n            65230,\n            65231,\n            65232\n        ],\n        1601: [\n            65233,\n            65234,\n            65235,\n            65236\n        ],\n        1602: [\n            65237,\n            65238,\n            65239,\n            65240\n        ],\n        1603: [\n            65241,\n            65242,\n            65243,\n            65244\n        ],\n        1604: [\n            65245,\n            65246,\n            65247,\n            65248\n        ],\n        1605: [\n            65249,\n            65250,\n            65251,\n            65252\n        ],\n        1606: [\n            65253,\n            65254,\n            65255,\n            65256\n        ],\n        1607: [\n            65257,\n            65258,\n            65259,\n            65260\n        ],\n        1608: [\n            65261,\n            65262\n        ],\n        1609: [\n            65263,\n            65264,\n            64488,\n            64489\n        ],\n        1610: [\n            65265,\n            65266,\n            65267,\n            65268\n        ],\n        1649: [\n            64336,\n            64337\n        ],\n        1655: [\n            64477\n        ],\n        1657: [\n            64358,\n            64359,\n            64360,\n            64361\n        ],\n        1658: [\n            64350,\n            64351,\n            64352,\n            64353\n        ],\n        1659: [\n            64338,\n            64339,\n            64340,\n            64341\n        ],\n        1662: [\n            64342,\n            64343,\n            64344,\n            64345\n        ],\n        1663: [\n            64354,\n            64355,\n            64356,\n            64357\n        ],\n        1664: [\n            64346,\n            64347,\n            64348,\n            64349\n        ],\n        1667: [\n            64374,\n            64375,\n            64376,\n            64377\n        ],\n        1668: [\n            64370,\n            64371,\n            64372,\n            64373\n        ],\n        1670: [\n            64378,\n            64379,\n            64380,\n            64381\n        ],\n        1671: [\n            64382,\n            64383,\n            64384,\n            64385\n        ],\n        1672: [\n            64392,\n            64393\n        ],\n        1676: [\n            64388,\n            64389\n        ],\n        1677: [\n            64386,\n            64387\n        ],\n        1678: [\n            64390,\n            64391\n        ],\n        1681: [\n            64396,\n            64397\n        ],\n        1688: [\n            64394,\n            64395\n        ],\n        1700: [\n            64362,\n            64363,\n            64364,\n            64365\n        ],\n        1702: [\n            64366,\n            64367,\n            64368,\n            64369\n        ],\n        1705: [\n            64398,\n            64399,\n            64400,\n            64401\n        ],\n        1709: [\n            64467,\n            64468,\n            64469,\n            64470\n        ],\n        1711: [\n            64402,\n            64403,\n            64404,\n            64405\n        ],\n        1713: [\n            64410,\n            64411,\n            64412,\n            64413\n        ],\n        1715: [\n            64406,\n            64407,\n            64408,\n            64409\n        ],\n        1722: [\n            64414,\n            64415\n        ],\n        1723: [\n            64416,\n            64417,\n            64418,\n            64419\n        ],\n        1726: [\n            64426,\n            64427,\n            64428,\n            64429\n        ],\n        1728: [\n            64420,\n            64421\n        ],\n        1729: [\n            64422,\n            64423,\n            64424,\n            64425\n        ],\n        1733: [\n            64480,\n            64481\n        ],\n        1734: [\n            64473,\n            64474\n        ],\n        1735: [\n            64471,\n            64472\n        ],\n        1736: [\n            64475,\n            64476\n        ],\n        1737: [\n            64482,\n            64483\n        ],\n        1739: [\n            64478,\n            64479\n        ],\n        1740: [\n            64508,\n            64509,\n            64510,\n            64511\n        ],\n        1744: [\n            64484,\n            64485,\n            64486,\n            64487\n        ],\n        1746: [\n            64430,\n            64431\n        ],\n        1747: [\n            64432,\n            64433\n        ]\n    }, r = {\n        65247: {\n            65154: 65269,\n            65156: 65271,\n            65160: 65273,\n            65166: 65275\n        },\n        65248: {\n            65154: 65270,\n            65156: 65272,\n            65160: 65274,\n            65166: 65276\n        },\n        65165: {\n            65247: {\n                65248: {\n                    65258: 65010\n                }\n            }\n        },\n        1617: {\n            1612: 64606,\n            1613: 64607,\n            1614: 64608,\n            1615: 64609,\n            1616: 64610\n        }\n    }, n = {\n        1612: 64606,\n        1613: 64607,\n        1614: 64608,\n        1615: 64609,\n        1616: 64610\n    }, i = [\n        1570,\n        1571,\n        1573,\n        1575\n    ];\n    t.__arabicParser__ = {};\n    var a = t.__arabicParser__.isInArabicSubstitutionA = function(t) {\n        return void 0 !== e[t.charCodeAt(0)];\n    }, o = t.__arabicParser__.isArabicLetter = function(t) {\n        return \"string\" == typeof t && /^[\\u0600-\\u06FF\\u0750-\\u077F\\u08A0-\\u08FF\\uFB50-\\uFDFF\\uFE70-\\uFEFF]+$/.test(t);\n    }, s = t.__arabicParser__.isArabicEndLetter = function(t) {\n        return o(t) && a(t) && e[t.charCodeAt(0)].length <= 2;\n    }, c = t.__arabicParser__.isArabicAlfLetter = function(t) {\n        return o(t) && i.indexOf(t.charCodeAt(0)) >= 0;\n    };\n    t.__arabicParser__.arabicLetterHasIsolatedForm = function(t) {\n        return o(t) && a(t) && e[t.charCodeAt(0)].length >= 1;\n    };\n    var u = t.__arabicParser__.arabicLetterHasFinalForm = function(t) {\n        return o(t) && a(t) && e[t.charCodeAt(0)].length >= 2;\n    };\n    t.__arabicParser__.arabicLetterHasInitialForm = function(t) {\n        return o(t) && a(t) && e[t.charCodeAt(0)].length >= 3;\n    };\n    var h = t.__arabicParser__.arabicLetterHasMedialForm = function(t) {\n        return o(t) && a(t) && 4 == e[t.charCodeAt(0)].length;\n    }, l = t.__arabicParser__.resolveLigatures = function(t) {\n        var e = 0, n = r, i = \"\", a = 0;\n        for(e = 0; e < t.length; e += 1)void 0 !== n[t.charCodeAt(e)] ? (a++, \"number\" == typeof (n = n[t.charCodeAt(e)]) && (i += String.fromCharCode(n), n = r, a = 0), e === t.length - 1 && (n = r, i += t.charAt(e - (a - 1)), e -= a - 1, a = 0)) : (n = r, i += t.charAt(e - a), e -= a, a = 0);\n        return i;\n    };\n    t.__arabicParser__.isArabicDiacritic = function(t) {\n        return void 0 !== t && void 0 !== n[t.charCodeAt(0)];\n    };\n    var f = t.__arabicParser__.getCorrectForm = function(t, e, r) {\n        return o(t) ? !1 === a(t) ? -1 : !u(t) || !o(e) && !o(r) || !o(r) && s(e) || s(t) && !o(e) || s(t) && c(e) || s(t) && s(e) ? 0 : h(t) && o(e) && !s(e) && o(r) && u(r) ? 3 : s(t) || !o(r) ? 1 : 2 : -1;\n    }, d = function(t) {\n        var r = 0, n = 0, i = 0, a = \"\", s = \"\", c = \"\", u = (t = t || \"\").split(\"\\\\s+\"), h = [];\n        for(r = 0; r < u.length; r += 1){\n            for(h.push(\"\"), n = 0; n < u[r].length; n += 1)a = u[r][n], s = u[r][n - 1], c = u[r][n + 1], o(a) ? (i = f(a, s, c), h[r] += -1 !== i ? String.fromCharCode(e[a.charCodeAt(0)][i]) : a) : h[r] += a;\n            h[r] = l(h[r]);\n        }\n        return h.join(\" \");\n    }, p = t.__arabicParser__.processArabic = t.processArabic = function() {\n        var t, e = \"string\" == typeof arguments[0] ? arguments[0] : arguments[0].text, r = [];\n        if (Array.isArray(e)) {\n            var n = 0;\n            for(r = [], n = 0; n < e.length; n += 1)Array.isArray(e[n]) ? r.push([\n                d(e[n][0]),\n                e[n][1],\n                e[n][2]\n            ]) : r.push([\n                d(e[n])\n            ]);\n            t = r;\n        } else t = d(e);\n        return \"string\" == typeof arguments[0] ? t : (arguments[0].text = t, arguments[0]);\n    };\n    t.events.push([\n        \"preProcessText\",\n        p\n    ]);\n}(E.API), E.API.autoPrint = function(t) {\n    var e;\n    switch((t = t || {}).variant = t.variant || \"non-conform\", t.variant){\n        case \"javascript\":\n            this.addJS(\"print({});\");\n            break;\n        case \"non-conform\":\n        default:\n            this.internal.events.subscribe(\"postPutResources\", function() {\n                e = this.internal.newObject(), this.internal.out(\"<<\"), this.internal.out(\"/S /Named\"), this.internal.out(\"/Type /Action\"), this.internal.out(\"/N /Print\"), this.internal.out(\">>\"), this.internal.out(\"endobj\");\n            }), this.internal.events.subscribe(\"putCatalog\", function() {\n                this.internal.out(\"/OpenAction \" + e + \" 0 R\");\n            });\n    }\n    return this;\n}, /**\n * @license\n * Copyright (c) 2014 Steven Spungin (TwelveTone LLC)  steven@twelvetone.tv\n *\n * Licensed under the MIT License.\n * http://opensource.org/licenses/mit-license\n */ function(t) {\n    var e = function() {\n        var t = void 0;\n        Object.defineProperty(this, \"pdf\", {\n            get: function() {\n                return t;\n            },\n            set: function(e) {\n                t = e;\n            }\n        });\n        var e = 150;\n        Object.defineProperty(this, \"width\", {\n            get: function() {\n                return e;\n            },\n            set: function(t) {\n                e = isNaN(t) || !1 === Number.isInteger(t) || t < 0 ? 150 : t, this.getContext(\"2d\").pageWrapXEnabled && (this.getContext(\"2d\").pageWrapX = e + 1);\n            }\n        });\n        var r = 300;\n        Object.defineProperty(this, \"height\", {\n            get: function() {\n                return r;\n            },\n            set: function(t) {\n                r = isNaN(t) || !1 === Number.isInteger(t) || t < 0 ? 300 : t, this.getContext(\"2d\").pageWrapYEnabled && (this.getContext(\"2d\").pageWrapY = r + 1);\n            }\n        });\n        var n = [];\n        Object.defineProperty(this, \"childNodes\", {\n            get: function() {\n                return n;\n            },\n            set: function(t) {\n                n = t;\n            }\n        });\n        var i = {};\n        Object.defineProperty(this, \"style\", {\n            get: function() {\n                return i;\n            },\n            set: function(t) {\n                i = t;\n            }\n        }), Object.defineProperty(this, \"parentNode\", {});\n    };\n    e.prototype.getContext = function(t, e) {\n        var r;\n        if (\"2d\" !== (t = t || \"2d\")) return null;\n        for(r in e)this.pdf.context2d.hasOwnProperty(r) && (this.pdf.context2d[r] = e[r]);\n        return this.pdf.context2d._canvas = this, this.pdf.context2d;\n    }, e.prototype.toDataURL = function() {\n        throw new Error(\"toDataURL is not implemented.\");\n    }, t.events.push([\n        \"initialized\",\n        function() {\n            this.canvas = new e, this.canvas.pdf = this;\n        }\n    ]);\n}(E.API), function(e) {\n    var r = {\n        left: 0,\n        top: 0,\n        bottom: 0,\n        right: 0\n    }, n = !1, i = function() {\n        void 0 === this.internal.__cell__ && (this.internal.__cell__ = {}, this.internal.__cell__.padding = 3, this.internal.__cell__.headerFunction = void 0, this.internal.__cell__.margins = Object.assign({}, r), this.internal.__cell__.margins.width = this.getPageWidth(), a.call(this));\n    }, a = function() {\n        this.internal.__cell__.lastCell = new o, this.internal.__cell__.pages = 1;\n    }, o = function() {\n        var t = arguments[0];\n        Object.defineProperty(this, \"x\", {\n            enumerable: !0,\n            get: function() {\n                return t;\n            },\n            set: function(e) {\n                t = e;\n            }\n        });\n        var e = arguments[1];\n        Object.defineProperty(this, \"y\", {\n            enumerable: !0,\n            get: function() {\n                return e;\n            },\n            set: function(t) {\n                e = t;\n            }\n        });\n        var r = arguments[2];\n        Object.defineProperty(this, \"width\", {\n            enumerable: !0,\n            get: function() {\n                return r;\n            },\n            set: function(t) {\n                r = t;\n            }\n        });\n        var n = arguments[3];\n        Object.defineProperty(this, \"height\", {\n            enumerable: !0,\n            get: function() {\n                return n;\n            },\n            set: function(t) {\n                n = t;\n            }\n        });\n        var i = arguments[4];\n        Object.defineProperty(this, \"text\", {\n            enumerable: !0,\n            get: function() {\n                return i;\n            },\n            set: function(t) {\n                i = t;\n            }\n        });\n        var a = arguments[5];\n        Object.defineProperty(this, \"lineNumber\", {\n            enumerable: !0,\n            get: function() {\n                return a;\n            },\n            set: function(t) {\n                a = t;\n            }\n        });\n        var o = arguments[6];\n        return Object.defineProperty(this, \"align\", {\n            enumerable: !0,\n            get: function() {\n                return o;\n            },\n            set: function(t) {\n                o = t;\n            }\n        }), this;\n    };\n    o.prototype.clone = function() {\n        return new o(this.x, this.y, this.width, this.height, this.text, this.lineNumber, this.align);\n    }, o.prototype.toArray = function() {\n        return [\n            this.x,\n            this.y,\n            this.width,\n            this.height,\n            this.text,\n            this.lineNumber,\n            this.align\n        ];\n    }, e.setHeaderFunction = function(t) {\n        return i.call(this), this.internal.__cell__.headerFunction = \"function\" == typeof t ? t : void 0, this;\n    }, e.getTextDimensions = function(t, e) {\n        i.call(this);\n        var r = (e = e || {}).fontSize || this.getFontSize(), n = e.font || this.getFont(), a = e.scaleFactor || this.internal.scaleFactor, o = 0, s = 0, c = 0, u = this;\n        if (!Array.isArray(t) && \"string\" != typeof t) {\n            if (\"number\" != typeof t) throw new Error(\"getTextDimensions expects text-parameter to be of type String or type Number or an Array of Strings.\");\n            t = String(t);\n        }\n        var h = e.maxWidth;\n        h > 0 ? \"string\" == typeof t ? t = this.splitTextToSize(t, h) : \"[object Array]\" === Object.prototype.toString.call(t) && (t = t.reduce(function(t, e) {\n            return t.concat(u.splitTextToSize(e, h));\n        }, [])) : t = Array.isArray(t) ? t : [\n            t\n        ];\n        for(var l = 0; l < t.length; l++)o < (c = this.getStringUnitWidth(t[l], {\n            font: n\n        }) * r) && (o = c);\n        return 0 !== o && (s = t.length), {\n            w: o /= a,\n            h: Math.max((s * r * this.getLineHeightFactor() - r * (this.getLineHeightFactor() - 1)) / a, 0)\n        };\n    }, e.cellAddPage = function() {\n        i.call(this), this.addPage();\n        var t = this.internal.__cell__.margins || r;\n        return this.internal.__cell__.lastCell = new o(t.left, t.top, void 0, void 0), this.internal.__cell__.pages += 1, this;\n    };\n    var s = e.cell = function() {\n        var t;\n        t = arguments[0] instanceof o ? arguments[0] : new o(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]), i.call(this);\n        var e = this.internal.__cell__.lastCell, a = this.internal.__cell__.padding, s = this.internal.__cell__.margins || r, c = this.internal.__cell__.tableHeaderRow, u = this.internal.__cell__.printHeaders;\n        return void 0 !== e.lineNumber && (e.lineNumber === t.lineNumber ? (t.x = (e.x || 0) + (e.width || 0), t.y = e.y || 0) : e.y + e.height + t.height + s.bottom > this.getPageHeight() ? (this.cellAddPage(), t.y = s.top, u && c && (this.printHeaderRow(t.lineNumber, !0), t.y += c[0].height)) : t.y = e.y + e.height || t.y), void 0 !== t.text[0] && (this.rect(t.x, t.y, t.width, t.height, !0 === n ? \"FD\" : void 0), \"right\" === t.align ? this.text(t.text, t.x + t.width - a, t.y + a, {\n            align: \"right\",\n            baseline: \"top\"\n        }) : \"center\" === t.align ? this.text(t.text, t.x + t.width / 2, t.y + a, {\n            align: \"center\",\n            baseline: \"top\",\n            maxWidth: t.width - a - a\n        }) : this.text(t.text, t.x + a, t.y + a, {\n            align: \"left\",\n            baseline: \"top\",\n            maxWidth: t.width - a - a\n        })), this.internal.__cell__.lastCell = t, this;\n    };\n    e.table = function(e, n, u, h, l) {\n        if (i.call(this), !u) throw new Error(\"No data for PDF table.\");\n        var f, d, p, g, m = [], v = [], b = [], y = {}, w = {}, N = [], L = [], A = (l = l || {}).autoSize || !1, x = !1 !== l.printHeaders, S = l.css && void 0 !== l.css[\"font-size\"] ? 16 * l.css[\"font-size\"] : l.fontSize || 12, _ = l.margins || Object.assign({\n            width: this.getPageWidth()\n        }, r), P = \"number\" == typeof l.padding ? l.padding : 3, k = l.headerBackgroundColor || \"#c8c8c8\", I = l.headerTextColor || \"#000\";\n        if (a.call(this), this.internal.__cell__.printHeaders = x, this.internal.__cell__.margins = _, this.internal.__cell__.table_font_size = S, this.internal.__cell__.padding = P, this.internal.__cell__.headerBackgroundColor = k, this.internal.__cell__.headerTextColor = I, this.setFontSize(S), null == h) v = m = Object.keys(u[0]), b = m.map(function() {\n            return \"left\";\n        });\n        else if (Array.isArray(h) && \"object\" === (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(h[0])) for(m = h.map(function(t) {\n            return t.name;\n        }), v = h.map(function(t) {\n            return t.prompt || t.name || \"\";\n        }), b = h.map(function(t) {\n            return t.align || \"left\";\n        }), f = 0; f < h.length; f += 1)w[h[f].name] = h[f].width * (19.049976 / 25.4);\n        else Array.isArray(h) && \"string\" == typeof h[0] && (v = m = h, b = m.map(function() {\n            return \"left\";\n        }));\n        if (A || Array.isArray(h) && \"string\" == typeof h[0]) for(f = 0; f < m.length; f += 1){\n            for(y[g = m[f]] = u.map(function(t) {\n                return t[g];\n            }), this.setFont(void 0, \"bold\"), N.push(this.getTextDimensions(v[f], {\n                fontSize: this.internal.__cell__.table_font_size,\n                scaleFactor: this.internal.scaleFactor\n            }).w), d = y[g], this.setFont(void 0, \"normal\"), p = 0; p < d.length; p += 1)N.push(this.getTextDimensions(d[p], {\n                fontSize: this.internal.__cell__.table_font_size,\n                scaleFactor: this.internal.scaleFactor\n            }).w);\n            w[g] = Math.max.apply(null, N) + P + P, N = [];\n        }\n        if (x) {\n            var F = {};\n            for(f = 0; f < m.length; f += 1)F[m[f]] = {}, F[m[f]].text = v[f], F[m[f]].align = b[f];\n            var C = c.call(this, F, w);\n            L = m.map(function(t) {\n                return new o(e, n, w[t], C, F[t].text, void 0, F[t].align);\n            }), this.setTableHeaderRow(L), this.printHeaderRow(1, !1);\n        }\n        var j = h.reduce(function(t, e) {\n            return t[e.name] = e.align, t;\n        }, {});\n        for(f = 0; f < u.length; f += 1){\n            \"rowStart\" in l && l.rowStart instanceof Function && l.rowStart({\n                row: f,\n                data: u[f]\n            }, this);\n            var O = c.call(this, u[f], w);\n            for(p = 0; p < m.length; p += 1){\n                var B = u[f][m[p]];\n                \"cellStart\" in l && l.cellStart instanceof Function && l.cellStart({\n                    row: f,\n                    col: p,\n                    data: B\n                }, this), s.call(this, new o(e, n, w[m[p]], O, B, f + 2, j[m[p]]));\n            }\n        }\n        return this.internal.__cell__.table_x = e, this.internal.__cell__.table_y = n, this;\n    };\n    var c = function(t, e) {\n        var r = this.internal.__cell__.padding, n = this.internal.__cell__.table_font_size, i = this.internal.scaleFactor;\n        return Object.keys(t).map(function(n) {\n            var i = t[n];\n            return this.splitTextToSize(i.hasOwnProperty(\"text\") ? i.text : i, e[n] - r - r);\n        }, this).map(function(t) {\n            return this.getLineHeightFactor() * t.length * n / i + r + r;\n        }, this).reduce(function(t, e) {\n            return Math.max(t, e);\n        }, 0);\n    };\n    e.setTableHeaderRow = function(t) {\n        i.call(this), this.internal.__cell__.tableHeaderRow = t;\n    }, e.printHeaderRow = function(t, e) {\n        if (i.call(this), !this.internal.__cell__.tableHeaderRow) throw new Error(\"Property tableHeaderRow does not exist.\");\n        var r;\n        if (n = !0, \"function\" == typeof this.internal.__cell__.headerFunction) {\n            var a = this.internal.__cell__.headerFunction(this, this.internal.__cell__.pages);\n            this.internal.__cell__.lastCell = new o(a[0], a[1], a[2], a[3], void 0, -1);\n        }\n        this.setFont(void 0, \"bold\");\n        for(var c = [], u = 0; u < this.internal.__cell__.tableHeaderRow.length; u += 1){\n            r = this.internal.__cell__.tableHeaderRow[u].clone(), e && (r.y = this.internal.__cell__.margins.top || 0, c.push(r)), r.lineNumber = t;\n            var h = this.getTextColor();\n            this.setTextColor(this.internal.__cell__.headerTextColor), this.setFillColor(this.internal.__cell__.headerBackgroundColor), s.call(this, r), this.setTextColor(h);\n        }\n        c.length > 0 && this.setTableHeaderRow(c), this.setFont(void 0, \"normal\"), n = !1;\n    };\n}(E.API);\nvar Pt = {\n    italic: [\n        \"italic\",\n        \"oblique\",\n        \"normal\"\n    ],\n    oblique: [\n        \"oblique\",\n        \"italic\",\n        \"normal\"\n    ],\n    normal: [\n        \"normal\",\n        \"oblique\",\n        \"italic\"\n    ]\n}, kt = [\n    \"ultra-condensed\",\n    \"extra-condensed\",\n    \"condensed\",\n    \"semi-condensed\",\n    \"normal\",\n    \"semi-expanded\",\n    \"expanded\",\n    \"extra-expanded\",\n    \"ultra-expanded\"\n], It = _t(kt), Ft = [\n    100,\n    200,\n    300,\n    400,\n    500,\n    600,\n    700,\n    800,\n    900\n], Ct = _t(Ft);\nfunction jt(t) {\n    var e = t.family.replace(/\"|'/g, \"\").toLowerCase(), r = function(t) {\n        return Pt[t = t || \"normal\"] ? t : \"normal\";\n    }(t.style), n = function(t) {\n        if (!t) return 400;\n        if (\"number\" == typeof t) return t >= 100 && t <= 900 && t % 100 == 0 ? t : 400;\n        if (/^\\d00$/.test(t)) return parseInt(t);\n        switch(t){\n            case \"bold\":\n                return 700;\n            case \"normal\":\n            default:\n                return 400;\n        }\n    }(t.weight), i = function(t) {\n        return \"number\" == typeof It[t = t || \"normal\"] ? t : \"normal\";\n    }(t.stretch);\n    return {\n        family: e,\n        style: r,\n        weight: n,\n        stretch: i,\n        src: t.src || [],\n        ref: t.ref || {\n            name: e,\n            style: [\n                i,\n                r,\n                n\n            ].join(\" \")\n        }\n    };\n}\nfunction Ot(t, e, r, n) {\n    var i;\n    for(i = r; i >= 0 && i < e.length; i += n)if (t[e[i]]) return t[e[i]];\n    for(i = r; i >= 0 && i < e.length; i -= n)if (t[e[i]]) return t[e[i]];\n}\n_c12 = Ot;\nvar Bt = {\n    \"sans-serif\": \"helvetica\",\n    fixed: \"courier\",\n    monospace: \"courier\",\n    terminal: \"courier\",\n    cursive: \"times\",\n    fantasy: \"times\",\n    serif: \"times\"\n}, Mt = {\n    caption: \"times\",\n    icon: \"times\",\n    menu: \"times\",\n    \"message-box\": \"times\",\n    \"small-caption\": \"times\",\n    \"status-bar\": \"times\"\n};\nfunction Et(t) {\n    return [\n        t.stretch,\n        t.style,\n        t.weight,\n        t.family\n    ].join(\" \");\n}\n_c13 = Et;\nfunction qt(t, e, r) {\n    for(var n = (r = r || {}).defaultFontFamily || \"times\", i = Object.assign({}, Bt, r.genericFontFamilies || {}), a = null, o = null, s = 0; s < e.length; ++s)if (i[(a = jt(e[s])).family] && (a.family = i[a.family]), t.hasOwnProperty(a.family)) {\n        o = t[a.family];\n        break;\n    }\n    if (!(o = o || t[n])) throw new Error(\"Could not find a font-family for the rule '\" + Et(a) + \"' and default family '\" + n + \"'.\");\n    if (o = function(t, e) {\n        if (e[t]) return e[t];\n        var r = It[t], n = r <= It.normal ? -1 : 1, i = Ot(e, kt, r, n);\n        if (!i) throw new Error(\"Could not find a matching font-stretch value for \" + t);\n        return i;\n    }(a.stretch, o), o = function(t, e) {\n        if (e[t]) return e[t];\n        for(var r = Pt[t], n = 0; n < r.length; ++n)if (e[r[n]]) return e[r[n]];\n        throw new Error(\"Could not find a matching font-style for \" + t);\n    }(a.style, o), !(o = function(t, e) {\n        if (e[t]) return e[t];\n        if (400 === t && e[500]) return e[500];\n        if (500 === t && e[400]) return e[400];\n        var r = Ct[t], n = Ot(e, Ft, r, t < 400 ? -1 : 1);\n        if (!n) throw new Error(\"Could not find a matching font-weight for value \" + t);\n        return n;\n    }(a.weight, o))) throw new Error(\"Failed to resolve a font for the rule '\" + Et(a) + \"'.\");\n    return o;\n}\nfunction Dt(t) {\n    return t.trimLeft();\n}\n_c14 = Dt;\nfunction Rt(t, e) {\n    for(var r = 0; r < t.length;){\n        if (t.charAt(r) === e) return [\n            t.substring(0, r),\n            t.substring(r + 1)\n        ];\n        r += 1;\n    }\n    return null;\n}\n_c15 = Rt;\nfunction Tt(t) {\n    var e = t.match(/^(-[a-z_]|[a-z_])[a-z0-9_-]*/i);\n    return null === e ? null : [\n        e[0],\n        t.substring(e[0].length)\n    ];\n}\n_c16 = Tt;\nvar Ut, zt, Ht, Wt = [\n    \"times\"\n];\n!function(e) {\n    var r, n, i, o, s, c, u, h, l, d = function(t) {\n        return t = t || {}, this.isStrokeTransparent = t.isStrokeTransparent || !1, this.strokeOpacity = t.strokeOpacity || 1, this.strokeStyle = t.strokeStyle || \"#000000\", this.fillStyle = t.fillStyle || \"#000000\", this.isFillTransparent = t.isFillTransparent || !1, this.fillOpacity = t.fillOpacity || 1, this.font = t.font || \"10px sans-serif\", this.textBaseline = t.textBaseline || \"alphabetic\", this.textAlign = t.textAlign || \"left\", this.lineWidth = t.lineWidth || 1, this.lineJoin = t.lineJoin || \"miter\", this.lineCap = t.lineCap || \"butt\", this.path = t.path || [], this.transform = void 0 !== t.transform ? t.transform.clone() : new h, this.globalCompositeOperation = t.globalCompositeOperation || \"normal\", this.globalAlpha = t.globalAlpha || 1, this.clip_path = t.clip_path || [], this.currentPoint = t.currentPoint || new c, this.miterLimit = t.miterLimit || 10, this.lastPoint = t.lastPoint || new c, this.lineDashOffset = t.lineDashOffset || 0, this.lineDash = t.lineDash || [], this.margin = t.margin || [\n            0,\n            0,\n            0,\n            0\n        ], this.prevPageLastElemOffset = t.prevPageLastElemOffset || 0, this.ignoreClearRect = \"boolean\" != typeof t.ignoreClearRect || t.ignoreClearRect, this;\n    };\n    e.events.push([\n        \"initialized\",\n        function() {\n            this.context2d = new p(this), r = this.internal.f2, n = this.internal.getCoordinateString, i = this.internal.getVerticalCoordinateString, o = this.internal.getHorizontalCoordinate, s = this.internal.getVerticalCoordinate, c = this.internal.Point, u = this.internal.Rectangle, h = this.internal.Matrix, l = new d;\n        }\n    ]);\n    var p = function(t) {\n        Object.defineProperty(this, \"canvas\", {\n            get: function() {\n                return {\n                    parentNode: !1,\n                    style: !1\n                };\n            }\n        });\n        var e = t;\n        Object.defineProperty(this, \"pdf\", {\n            get: function() {\n                return e;\n            }\n        });\n        var r = !1;\n        Object.defineProperty(this, \"pageWrapXEnabled\", {\n            get: function() {\n                return r;\n            },\n            set: function(t) {\n                r = Boolean(t);\n            }\n        });\n        var n = !1;\n        Object.defineProperty(this, \"pageWrapYEnabled\", {\n            get: function() {\n                return n;\n            },\n            set: function(t) {\n                n = Boolean(t);\n            }\n        });\n        var i = 0;\n        Object.defineProperty(this, \"posX\", {\n            get: function() {\n                return i;\n            },\n            set: function(t) {\n                isNaN(t) || (i = t);\n            }\n        });\n        var a = 0;\n        Object.defineProperty(this, \"posY\", {\n            get: function() {\n                return a;\n            },\n            set: function(t) {\n                isNaN(t) || (a = t);\n            }\n        }), Object.defineProperty(this, \"margin\", {\n            get: function() {\n                return l.margin;\n            },\n            set: function(t) {\n                var e;\n                \"number\" == typeof t ? e = [\n                    t,\n                    t,\n                    t,\n                    t\n                ] : ((e = new Array(4))[0] = t[0], e[1] = t.length >= 2 ? t[1] : e[0], e[2] = t.length >= 3 ? t[2] : e[0], e[3] = t.length >= 4 ? t[3] : e[1]), l.margin = e;\n            }\n        });\n        var o = !1;\n        Object.defineProperty(this, \"autoPaging\", {\n            get: function() {\n                return o;\n            },\n            set: function(t) {\n                o = t;\n            }\n        });\n        var s = 0;\n        Object.defineProperty(this, \"lastBreak\", {\n            get: function() {\n                return s;\n            },\n            set: function(t) {\n                s = t;\n            }\n        });\n        var c = [];\n        Object.defineProperty(this, \"pageBreaks\", {\n            get: function() {\n                return c;\n            },\n            set: function(t) {\n                c = t;\n            }\n        }), Object.defineProperty(this, \"ctx\", {\n            get: function() {\n                return l;\n            },\n            set: function(t) {\n                t instanceof d && (l = t);\n            }\n        }), Object.defineProperty(this, \"path\", {\n            get: function() {\n                return l.path;\n            },\n            set: function(t) {\n                l.path = t;\n            }\n        });\n        var u = [];\n        Object.defineProperty(this, \"ctxStack\", {\n            get: function() {\n                return u;\n            },\n            set: function(t) {\n                u = t;\n            }\n        }), Object.defineProperty(this, \"fillStyle\", {\n            get: function() {\n                return this.ctx.fillStyle;\n            },\n            set: function(t) {\n                var e;\n                e = g(t), this.ctx.fillStyle = e.style, this.ctx.isFillTransparent = 0 === e.a, this.ctx.fillOpacity = e.a, this.pdf.setFillColor(e.r, e.g, e.b, {\n                    a: e.a\n                }), this.pdf.setTextColor(e.r, e.g, e.b, {\n                    a: e.a\n                });\n            }\n        }), Object.defineProperty(this, \"strokeStyle\", {\n            get: function() {\n                return this.ctx.strokeStyle;\n            },\n            set: function(t) {\n                var e = g(t);\n                this.ctx.strokeStyle = e.style, this.ctx.isStrokeTransparent = 0 === e.a, this.ctx.strokeOpacity = e.a, 0 === e.a ? this.pdf.setDrawColor(255, 255, 255) : (e.a, this.pdf.setDrawColor(e.r, e.g, e.b));\n            }\n        }), Object.defineProperty(this, \"lineCap\", {\n            get: function() {\n                return this.ctx.lineCap;\n            },\n            set: function(t) {\n                -1 !== [\n                    \"butt\",\n                    \"round\",\n                    \"square\"\n                ].indexOf(t) && (this.ctx.lineCap = t, this.pdf.setLineCap(t));\n            }\n        }), Object.defineProperty(this, \"lineWidth\", {\n            get: function() {\n                return this.ctx.lineWidth;\n            },\n            set: function(t) {\n                isNaN(t) || (this.ctx.lineWidth = t, this.pdf.setLineWidth(t));\n            }\n        }), Object.defineProperty(this, \"lineJoin\", {\n            get: function() {\n                return this.ctx.lineJoin;\n            },\n            set: function(t) {\n                -1 !== [\n                    \"bevel\",\n                    \"round\",\n                    \"miter\"\n                ].indexOf(t) && (this.ctx.lineJoin = t, this.pdf.setLineJoin(t));\n            }\n        }), Object.defineProperty(this, \"miterLimit\", {\n            get: function() {\n                return this.ctx.miterLimit;\n            },\n            set: function(t) {\n                isNaN(t) || (this.ctx.miterLimit = t, this.pdf.setMiterLimit(t));\n            }\n        }), Object.defineProperty(this, \"textBaseline\", {\n            get: function() {\n                return this.ctx.textBaseline;\n            },\n            set: function(t) {\n                this.ctx.textBaseline = t;\n            }\n        }), Object.defineProperty(this, \"textAlign\", {\n            get: function() {\n                return this.ctx.textAlign;\n            },\n            set: function(t) {\n                -1 !== [\n                    \"right\",\n                    \"end\",\n                    \"center\",\n                    \"left\",\n                    \"start\"\n                ].indexOf(t) && (this.ctx.textAlign = t);\n            }\n        });\n        var h = null;\n        function f(t, e) {\n            if (null === h) {\n                var r = function(t) {\n                    var e = [];\n                    return Object.keys(t).forEach(function(r) {\n                        t[r].forEach(function(t) {\n                            var n = null;\n                            switch(t){\n                                case \"bold\":\n                                    n = {\n                                        family: r,\n                                        weight: \"bold\"\n                                    };\n                                    break;\n                                case \"italic\":\n                                    n = {\n                                        family: r,\n                                        style: \"italic\"\n                                    };\n                                    break;\n                                case \"bolditalic\":\n                                    n = {\n                                        family: r,\n                                        weight: \"bold\",\n                                        style: \"italic\"\n                                    };\n                                    break;\n                                case \"\":\n                                case \"normal\":\n                                    n = {\n                                        family: r\n                                    };\n                            }\n                            null !== n && (n.ref = {\n                                name: r,\n                                style: t\n                            }, e.push(n));\n                        });\n                    }), e;\n                }(t.getFontList());\n                h = function(t) {\n                    for(var e = {}, r = 0; r < t.length; ++r){\n                        var n = jt(t[r]), i = n.family, a = n.stretch, o = n.style, s = n.weight;\n                        e[i] = e[i] || {}, e[i][a] = e[i][a] || {}, e[i][a][o] = e[i][a][o] || {}, e[i][a][o][s] = n;\n                    }\n                    return e;\n                }(r.concat(e));\n            }\n            return h;\n        }\n        var p = null;\n        Object.defineProperty(this, \"fontFaces\", {\n            get: function() {\n                return p;\n            },\n            set: function(t) {\n                h = null, p = t;\n            }\n        }), Object.defineProperty(this, \"font\", {\n            get: function() {\n                return this.ctx.font;\n            },\n            set: function(t) {\n                var e;\n                if (this.ctx.font = t, null !== (e = /^\\s*(?=(?:(?:[-a-z]+\\s*){0,2}(italic|oblique))?)(?=(?:(?:[-a-z]+\\s*){0,2}(small-caps))?)(?=(?:(?:[-a-z]+\\s*){0,2}(bold(?:er)?|lighter|[1-9]00))?)(?:(?:normal|\\1|\\2|\\3)\\s*){0,3}((?:xx?-)?(?:small|large)|medium|smaller|larger|[.\\d]+(?:\\%|in|[cem]m|ex|p[ctx]))(?:\\s*\\/\\s*(normal|[.\\d]+(?:\\%|in|[cem]m|ex|p[ctx])))?\\s*([-_,\\\"\\'\\sa-z]+?)\\s*$/i.exec(t))) {\n                    var r = e[1];\n                    e[2];\n                    var n = e[3], i = e[4];\n                    e[5];\n                    var a = e[6], o = /^([.\\d]+)((?:%|in|[cem]m|ex|p[ctx]))$/i.exec(i)[2];\n                    i = \"px\" === o ? Math.floor(parseFloat(i) * this.pdf.internal.scaleFactor) : \"em\" === o ? Math.floor(parseFloat(i) * this.pdf.getFontSize()) : Math.floor(parseFloat(i) * this.pdf.internal.scaleFactor), this.pdf.setFontSize(i);\n                    var s = function(t) {\n                        var e, r, n = [], i = t.trim();\n                        if (\"\" === i) return Wt;\n                        if (i in Mt) return [\n                            Mt[i]\n                        ];\n                        for(; \"\" !== i;){\n                            switch(r = null, e = (i = Dt(i)).charAt(0)){\n                                case '\"':\n                                case \"'\":\n                                    r = Rt(i.substring(1), e);\n                                    break;\n                                default:\n                                    r = Tt(i);\n                            }\n                            if (null === r) return Wt;\n                            if (n.push(r[0]), \"\" !== (i = Dt(r[1])) && \",\" !== i.charAt(0)) return Wt;\n                            i = i.replace(/^,/, \"\");\n                        }\n                        return n;\n                    }(a);\n                    if (this.fontFaces) {\n                        var c = qt(f(this.pdf, this.fontFaces), s.map(function(t) {\n                            return {\n                                family: t,\n                                stretch: \"normal\",\n                                weight: n,\n                                style: r\n                            };\n                        }));\n                        this.pdf.setFont(c.ref.name, c.ref.style);\n                    } else {\n                        var u = \"\";\n                        (\"bold\" === n || parseInt(n, 10) >= 700 || \"bold\" === r) && (u = \"bold\"), \"italic\" === r && (u += \"italic\"), 0 === u.length && (u = \"normal\");\n                        for(var h = \"\", l = {\n                            arial: \"Helvetica\",\n                            Arial: \"Helvetica\",\n                            verdana: \"Helvetica\",\n                            Verdana: \"Helvetica\",\n                            helvetica: \"Helvetica\",\n                            Helvetica: \"Helvetica\",\n                            \"sans-serif\": \"Helvetica\",\n                            fixed: \"Courier\",\n                            monospace: \"Courier\",\n                            terminal: \"Courier\",\n                            cursive: \"Times\",\n                            fantasy: \"Times\",\n                            serif: \"Times\"\n                        }, d = 0; d < s.length; d++){\n                            if (void 0 !== this.pdf.internal.getFont(s[d], u, {\n                                noFallback: !0,\n                                disableWarning: !0\n                            })) {\n                                h = s[d];\n                                break;\n                            }\n                            if (\"bolditalic\" === u && void 0 !== this.pdf.internal.getFont(s[d], \"bold\", {\n                                noFallback: !0,\n                                disableWarning: !0\n                            })) h = s[d], u = \"bold\";\n                            else if (void 0 !== this.pdf.internal.getFont(s[d], \"normal\", {\n                                noFallback: !0,\n                                disableWarning: !0\n                            })) {\n                                h = s[d], u = \"normal\";\n                                break;\n                            }\n                        }\n                        if (\"\" === h) {\n                            for(var p = 0; p < s.length; p++)if (l[s[p]]) {\n                                h = l[s[p]];\n                                break;\n                            }\n                        }\n                        h = \"\" === h ? \"Times\" : h, this.pdf.setFont(h, u);\n                    }\n                }\n            }\n        }), Object.defineProperty(this, \"globalCompositeOperation\", {\n            get: function() {\n                return this.ctx.globalCompositeOperation;\n            },\n            set: function(t) {\n                this.ctx.globalCompositeOperation = t;\n            }\n        }), Object.defineProperty(this, \"globalAlpha\", {\n            get: function() {\n                return this.ctx.globalAlpha;\n            },\n            set: function(t) {\n                this.ctx.globalAlpha = t;\n            }\n        }), Object.defineProperty(this, \"lineDashOffset\", {\n            get: function() {\n                return this.ctx.lineDashOffset;\n            },\n            set: function(t) {\n                this.ctx.lineDashOffset = t, T.call(this);\n            }\n        }), Object.defineProperty(this, \"lineDash\", {\n            get: function() {\n                return this.ctx.lineDash;\n            },\n            set: function(t) {\n                this.ctx.lineDash = t, T.call(this);\n            }\n        }), Object.defineProperty(this, \"ignoreClearRect\", {\n            get: function() {\n                return this.ctx.ignoreClearRect;\n            },\n            set: function(t) {\n                this.ctx.ignoreClearRect = Boolean(t);\n            }\n        });\n    };\n    p.prototype.setLineDash = function(t) {\n        this.lineDash = t;\n    }, p.prototype.getLineDash = function() {\n        return this.lineDash.length % 2 ? this.lineDash.concat(this.lineDash) : this.lineDash.slice();\n    }, p.prototype.fill = function() {\n        A.call(this, \"fill\", !1);\n    }, p.prototype.stroke = function() {\n        A.call(this, \"stroke\", !1);\n    }, p.prototype.beginPath = function() {\n        this.path = [\n            {\n                type: \"begin\"\n            }\n        ];\n    }, p.prototype.moveTo = function(t, e) {\n        if (isNaN(t) || isNaN(e)) throw a.error(\"jsPDF.context2d.moveTo: Invalid arguments\", arguments), new Error(\"Invalid arguments passed to jsPDF.context2d.moveTo\");\n        var r = this.ctx.transform.applyToPoint(new c(t, e));\n        this.path.push({\n            type: \"mt\",\n            x: r.x,\n            y: r.y\n        }), this.ctx.lastPoint = new c(t, e);\n    }, p.prototype.closePath = function() {\n        var e = new c(0, 0), r = 0;\n        for(r = this.path.length - 1; -1 !== r; r--)if (\"begin\" === this.path[r].type && \"object\" === (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this.path[r + 1]) && \"number\" == typeof this.path[r + 1].x) {\n            e = new c(this.path[r + 1].x, this.path[r + 1].y);\n            break;\n        }\n        this.path.push({\n            type: \"close\"\n        }), this.ctx.lastPoint = new c(e.x, e.y);\n    }, p.prototype.lineTo = function(t, e) {\n        if (isNaN(t) || isNaN(e)) throw a.error(\"jsPDF.context2d.lineTo: Invalid arguments\", arguments), new Error(\"Invalid arguments passed to jsPDF.context2d.lineTo\");\n        var r = this.ctx.transform.applyToPoint(new c(t, e));\n        this.path.push({\n            type: \"lt\",\n            x: r.x,\n            y: r.y\n        }), this.ctx.lastPoint = new c(r.x, r.y);\n    }, p.prototype.clip = function() {\n        this.ctx.clip_path = JSON.parse(JSON.stringify(this.path)), A.call(this, null, !0);\n    }, p.prototype.quadraticCurveTo = function(t, e, r, n) {\n        if (isNaN(r) || isNaN(n) || isNaN(t) || isNaN(e)) throw a.error(\"jsPDF.context2d.quadraticCurveTo: Invalid arguments\", arguments), new Error(\"Invalid arguments passed to jsPDF.context2d.quadraticCurveTo\");\n        var i = this.ctx.transform.applyToPoint(new c(r, n)), o = this.ctx.transform.applyToPoint(new c(t, e));\n        this.path.push({\n            type: \"qct\",\n            x1: o.x,\n            y1: o.y,\n            x: i.x,\n            y: i.y\n        }), this.ctx.lastPoint = new c(i.x, i.y);\n    }, p.prototype.bezierCurveTo = function(t, e, r, n, i, o) {\n        if (isNaN(i) || isNaN(o) || isNaN(t) || isNaN(e) || isNaN(r) || isNaN(n)) throw a.error(\"jsPDF.context2d.bezierCurveTo: Invalid arguments\", arguments), new Error(\"Invalid arguments passed to jsPDF.context2d.bezierCurveTo\");\n        var s = this.ctx.transform.applyToPoint(new c(i, o)), u = this.ctx.transform.applyToPoint(new c(t, e)), h = this.ctx.transform.applyToPoint(new c(r, n));\n        this.path.push({\n            type: \"bct\",\n            x1: u.x,\n            y1: u.y,\n            x2: h.x,\n            y2: h.y,\n            x: s.x,\n            y: s.y\n        }), this.ctx.lastPoint = new c(s.x, s.y);\n    }, p.prototype.arc = function(t, e, r, n, i, o) {\n        if (isNaN(t) || isNaN(e) || isNaN(r) || isNaN(n) || isNaN(i)) throw a.error(\"jsPDF.context2d.arc: Invalid arguments\", arguments), new Error(\"Invalid arguments passed to jsPDF.context2d.arc\");\n        if (o = Boolean(o), !this.ctx.transform.isIdentity) {\n            var s = this.ctx.transform.applyToPoint(new c(t, e));\n            t = s.x, e = s.y;\n            var u = this.ctx.transform.applyToPoint(new c(0, r)), h = this.ctx.transform.applyToPoint(new c(0, 0));\n            r = Math.sqrt(Math.pow(u.x - h.x, 2) + Math.pow(u.y - h.y, 2));\n        }\n        Math.abs(i - n) >= 2 * Math.PI && (n = 0, i = 2 * Math.PI), this.path.push({\n            type: \"arc\",\n            x: t,\n            y: e,\n            radius: r,\n            startAngle: n,\n            endAngle: i,\n            counterclockwise: o\n        });\n    }, p.prototype.arcTo = function(t, e, r, n, i) {\n        throw new Error(\"arcTo not implemented.\");\n    }, p.prototype.rect = function(t, e, r, n) {\n        if (isNaN(t) || isNaN(e) || isNaN(r) || isNaN(n)) throw a.error(\"jsPDF.context2d.rect: Invalid arguments\", arguments), new Error(\"Invalid arguments passed to jsPDF.context2d.rect\");\n        this.moveTo(t, e), this.lineTo(t + r, e), this.lineTo(t + r, e + n), this.lineTo(t, e + n), this.lineTo(t, e), this.lineTo(t + r, e), this.lineTo(t, e);\n    }, p.prototype.fillRect = function(t, e, r, n) {\n        if (isNaN(t) || isNaN(e) || isNaN(r) || isNaN(n)) throw a.error(\"jsPDF.context2d.fillRect: Invalid arguments\", arguments), new Error(\"Invalid arguments passed to jsPDF.context2d.fillRect\");\n        if (!m.call(this)) {\n            var i = {};\n            \"butt\" !== this.lineCap && (i.lineCap = this.lineCap, this.lineCap = \"butt\"), \"miter\" !== this.lineJoin && (i.lineJoin = this.lineJoin, this.lineJoin = \"miter\"), this.beginPath(), this.rect(t, e, r, n), this.fill(), i.hasOwnProperty(\"lineCap\") && (this.lineCap = i.lineCap), i.hasOwnProperty(\"lineJoin\") && (this.lineJoin = i.lineJoin);\n        }\n    }, p.prototype.strokeRect = function(t, e, r, n) {\n        if (isNaN(t) || isNaN(e) || isNaN(r) || isNaN(n)) throw a.error(\"jsPDF.context2d.strokeRect: Invalid arguments\", arguments), new Error(\"Invalid arguments passed to jsPDF.context2d.strokeRect\");\n        v.call(this) || (this.beginPath(), this.rect(t, e, r, n), this.stroke());\n    }, p.prototype.clearRect = function(t, e, r, n) {\n        if (isNaN(t) || isNaN(e) || isNaN(r) || isNaN(n)) throw a.error(\"jsPDF.context2d.clearRect: Invalid arguments\", arguments), new Error(\"Invalid arguments passed to jsPDF.context2d.clearRect\");\n        this.ignoreClearRect || (this.fillStyle = \"#ffffff\", this.fillRect(t, e, r, n));\n    }, p.prototype.save = function(t) {\n        t = \"boolean\" != typeof t || t;\n        for(var e = this.pdf.internal.getCurrentPageInfo().pageNumber, r = 0; r < this.pdf.internal.getNumberOfPages(); r++)this.pdf.setPage(r + 1), this.pdf.internal.out(\"q\");\n        if (this.pdf.setPage(e), t) {\n            this.ctx.fontSize = this.pdf.internal.getFontSize();\n            var n = new d(this.ctx);\n            this.ctxStack.push(this.ctx), this.ctx = n;\n        }\n    }, p.prototype.restore = function(t) {\n        t = \"boolean\" != typeof t || t;\n        for(var e = this.pdf.internal.getCurrentPageInfo().pageNumber, r = 0; r < this.pdf.internal.getNumberOfPages(); r++)this.pdf.setPage(r + 1), this.pdf.internal.out(\"Q\");\n        this.pdf.setPage(e), t && 0 !== this.ctxStack.length && (this.ctx = this.ctxStack.pop(), this.fillStyle = this.ctx.fillStyle, this.strokeStyle = this.ctx.strokeStyle, this.font = this.ctx.font, this.lineCap = this.ctx.lineCap, this.lineWidth = this.ctx.lineWidth, this.lineJoin = this.ctx.lineJoin, this.lineDash = this.ctx.lineDash, this.lineDashOffset = this.ctx.lineDashOffset);\n    }, p.prototype.toDataURL = function() {\n        throw new Error(\"toDataUrl not implemented.\");\n    };\n    var g = function(t) {\n        var e, r, n, i;\n        if (!0 === t.isCanvasGradient && (t = t.getColor()), !t) return {\n            r: 0,\n            g: 0,\n            b: 0,\n            a: 0,\n            style: t\n        };\n        if (/transparent|rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*0+\\s*\\)/.test(t)) e = 0, r = 0, n = 0, i = 0;\n        else {\n            var a = /rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)/.exec(t);\n            if (null !== a) e = parseInt(a[1]), r = parseInt(a[2]), n = parseInt(a[3]), i = 1;\n            else if (null !== (a = /rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*([\\d.]+)\\s*\\)/.exec(t))) e = parseInt(a[1]), r = parseInt(a[2]), n = parseInt(a[3]), i = parseFloat(a[4]);\n            else {\n                if (i = 1, \"string\" == typeof t && \"#\" !== t.charAt(0)) {\n                    var o = new f(t);\n                    t = o.ok ? o.toHex() : \"#000000\";\n                }\n                4 === t.length ? (e = t.substring(1, 2), e += e, r = t.substring(2, 3), r += r, n = t.substring(3, 4), n += n) : (e = t.substring(1, 3), r = t.substring(3, 5), n = t.substring(5, 7)), e = parseInt(e, 16), r = parseInt(r, 16), n = parseInt(n, 16);\n            }\n        }\n        return {\n            r: e,\n            g: r,\n            b: n,\n            a: i,\n            style: t\n        };\n    }, m = function() {\n        return this.ctx.isFillTransparent || 0 == this.globalAlpha;\n    }, v = function() {\n        return Boolean(this.ctx.isStrokeTransparent || 0 == this.globalAlpha);\n    };\n    p.prototype.fillText = function(t, e, r, n) {\n        if (isNaN(e) || isNaN(r) || \"string\" != typeof t) throw a.error(\"jsPDF.context2d.fillText: Invalid arguments\", arguments), new Error(\"Invalid arguments passed to jsPDF.context2d.fillText\");\n        if (n = isNaN(n) ? void 0 : n, !m.call(this)) {\n            var i = q(this.ctx.transform.rotation), o = this.ctx.transform.scaleX;\n            C.call(this, {\n                text: t,\n                x: e,\n                y: r,\n                scale: o,\n                angle: i,\n                align: this.textAlign,\n                maxWidth: n\n            });\n        }\n    }, p.prototype.strokeText = function(t, e, r, n) {\n        if (isNaN(e) || isNaN(r) || \"string\" != typeof t) throw a.error(\"jsPDF.context2d.strokeText: Invalid arguments\", arguments), new Error(\"Invalid arguments passed to jsPDF.context2d.strokeText\");\n        if (!v.call(this)) {\n            n = isNaN(n) ? void 0 : n;\n            var i = q(this.ctx.transform.rotation), o = this.ctx.transform.scaleX;\n            C.call(this, {\n                text: t,\n                x: e,\n                y: r,\n                scale: o,\n                renderingMode: \"stroke\",\n                angle: i,\n                align: this.textAlign,\n                maxWidth: n\n            });\n        }\n    }, p.prototype.measureText = function(t) {\n        if (\"string\" != typeof t) throw a.error(\"jsPDF.context2d.measureText: Invalid arguments\", arguments), new Error(\"Invalid arguments passed to jsPDF.context2d.measureText\");\n        var e = this.pdf, r = this.pdf.internal.scaleFactor, n = e.internal.getFontSize(), i = e.getStringUnitWidth(t) * n / e.internal.scaleFactor, o = function(t) {\n            var e = (t = t || {}).width || 0;\n            return Object.defineProperty(this, \"width\", {\n                get: function() {\n                    return e;\n                }\n            }), this;\n        };\n        return new o({\n            width: i *= Math.round(96 * r / 72 * 1e4) / 1e4\n        });\n    }, p.prototype.scale = function(t, e) {\n        if (isNaN(t) || isNaN(e)) throw a.error(\"jsPDF.context2d.scale: Invalid arguments\", arguments), new Error(\"Invalid arguments passed to jsPDF.context2d.scale\");\n        var r = new h(t, 0, 0, e, 0, 0);\n        this.ctx.transform = this.ctx.transform.multiply(r);\n    }, p.prototype.rotate = function(t) {\n        if (isNaN(t)) throw a.error(\"jsPDF.context2d.rotate: Invalid arguments\", arguments), new Error(\"Invalid arguments passed to jsPDF.context2d.rotate\");\n        var e = new h(Math.cos(t), Math.sin(t), -Math.sin(t), Math.cos(t), 0, 0);\n        this.ctx.transform = this.ctx.transform.multiply(e);\n    }, p.prototype.translate = function(t, e) {\n        if (isNaN(t) || isNaN(e)) throw a.error(\"jsPDF.context2d.translate: Invalid arguments\", arguments), new Error(\"Invalid arguments passed to jsPDF.context2d.translate\");\n        var r = new h(1, 0, 0, 1, t, e);\n        this.ctx.transform = this.ctx.transform.multiply(r);\n    }, p.prototype.transform = function(t, e, r, n, i, o) {\n        if (isNaN(t) || isNaN(e) || isNaN(r) || isNaN(n) || isNaN(i) || isNaN(o)) throw a.error(\"jsPDF.context2d.transform: Invalid arguments\", arguments), new Error(\"Invalid arguments passed to jsPDF.context2d.transform\");\n        var s = new h(t, e, r, n, i, o);\n        this.ctx.transform = this.ctx.transform.multiply(s);\n    }, p.prototype.setTransform = function(t, e, r, n, i, a) {\n        t = isNaN(t) ? 1 : t, e = isNaN(e) ? 0 : e, r = isNaN(r) ? 0 : r, n = isNaN(n) ? 1 : n, i = isNaN(i) ? 0 : i, a = isNaN(a) ? 0 : a, this.ctx.transform = new h(t, e, r, n, i, a);\n    };\n    var b = function() {\n        return this.margin[0] > 0 || this.margin[1] > 0 || this.margin[2] > 0 || this.margin[3] > 0;\n    };\n    p.prototype.drawImage = function(t, e, r, n, i, a, o, s, c) {\n        var l = this.pdf.getImageProperties(t), f = 1, d = 1, p = 1, g = 1;\n        void 0 !== n && void 0 !== s && (p = s / n, g = c / i, f = l.width / n * s / n, d = l.height / i * c / i), void 0 === a && (a = e, o = r, e = 0, r = 0), void 0 !== n && void 0 === s && (s = n, c = i), void 0 === n && void 0 === s && (s = l.width, c = l.height);\n        for(var m, v = this.ctx.transform.decompose(), w = q(v.rotate.shx), A = new h, S = (A = (A = (A = A.multiply(v.translate)).multiply(v.skew)).multiply(v.scale)).applyToRectangle(new u(a - e * p, o - r * g, n * f, i * d)), _ = y.call(this, S), P = [], k = 0; k < _.length; k += 1)-1 === P.indexOf(_[k]) && P.push(_[k]);\n        if (L(P), this.autoPaging) for(var I = P[0], F = P[P.length - 1], C = I; C < F + 1; C++){\n            this.pdf.setPage(C);\n            var j = this.pdf.internal.pageSize.width - this.margin[3] - this.margin[1], O = 1 === C ? this.posY + this.margin[0] : this.margin[0], B = this.pdf.internal.pageSize.height - this.posY - this.margin[0] - this.margin[2], M = this.pdf.internal.pageSize.height - this.margin[0] - this.margin[2], E = 1 === C ? 0 : B + (C - 2) * M;\n            if (0 !== this.ctx.clip_path.length) {\n                var D = this.path;\n                m = JSON.parse(JSON.stringify(this.ctx.clip_path)), this.path = N(m, this.posX + this.margin[3], -E + O + this.ctx.prevPageLastElemOffset), x.call(this, \"fill\", !0), this.path = D;\n            }\n            var R = JSON.parse(JSON.stringify(S));\n            R = N([\n                R\n            ], this.posX + this.margin[3], -E + O + this.ctx.prevPageLastElemOffset)[0];\n            var T = (C > I || C < F) && b.call(this);\n            T && (this.pdf.saveGraphicsState(), this.pdf.rect(this.margin[3], this.margin[0], j, M, null).clip().discardPath()), this.pdf.addImage(t, \"JPEG\", R.x, R.y, R.w, R.h, null, null, w), T && this.pdf.restoreGraphicsState();\n        }\n        else this.pdf.addImage(t, \"JPEG\", S.x, S.y, S.w, S.h, null, null, w);\n    };\n    var y = function(t, e, r) {\n        var n = [];\n        e = e || this.pdf.internal.pageSize.width, r = r || this.pdf.internal.pageSize.height - this.margin[0] - this.margin[2];\n        var i = this.posY + this.ctx.prevPageLastElemOffset;\n        switch(t.type){\n            default:\n            case \"mt\":\n            case \"lt\":\n                n.push(Math.floor((t.y + i) / r) + 1);\n                break;\n            case \"arc\":\n                n.push(Math.floor((t.y + i - t.radius) / r) + 1), n.push(Math.floor((t.y + i + t.radius) / r) + 1);\n                break;\n            case \"qct\":\n                var a = D(this.ctx.lastPoint.x, this.ctx.lastPoint.y, t.x1, t.y1, t.x, t.y);\n                n.push(Math.floor((a.y + i) / r) + 1), n.push(Math.floor((a.y + a.h + i) / r) + 1);\n                break;\n            case \"bct\":\n                var o = R(this.ctx.lastPoint.x, this.ctx.lastPoint.y, t.x1, t.y1, t.x2, t.y2, t.x, t.y);\n                n.push(Math.floor((o.y + i) / r) + 1), n.push(Math.floor((o.y + o.h + i) / r) + 1);\n                break;\n            case \"rect\":\n                n.push(Math.floor((t.y + i) / r) + 1), n.push(Math.floor((t.y + t.h + i) / r) + 1);\n        }\n        for(var s = 0; s < n.length; s += 1)for(; this.pdf.internal.getNumberOfPages() < n[s];)w.call(this);\n        return n;\n    }, w = function() {\n        var t = this.fillStyle, e = this.strokeStyle, r = this.font, n = this.lineCap, i = this.lineWidth, a = this.lineJoin;\n        this.pdf.addPage(), this.fillStyle = t, this.strokeStyle = e, this.font = r, this.lineCap = n, this.lineWidth = i, this.lineJoin = a;\n    }, N = function(t, e, r) {\n        for(var n = 0; n < t.length; n++)switch(t[n].type){\n            case \"bct\":\n                t[n].x2 += e, t[n].y2 += r;\n            case \"qct\":\n                t[n].x1 += e, t[n].y1 += r;\n            case \"mt\":\n            case \"lt\":\n            case \"arc\":\n            default:\n                t[n].x += e, t[n].y += r;\n        }\n        return t;\n    }, L = function(t) {\n        return t.sort(function(t, e) {\n            return t - e;\n        });\n    }, A = function(t, e) {\n        for(var r, n, i = this.fillStyle, a = this.strokeStyle, o = this.lineCap, s = this.lineWidth, c = Math.abs(s * this.ctx.transform.scaleX), u = this.lineJoin, h = JSON.parse(JSON.stringify(this.path)), l = JSON.parse(JSON.stringify(this.path)), f = [], d = 0; d < l.length; d++)if (void 0 !== l[d].x) for(var p = y.call(this, l[d]), g = 0; g < p.length; g += 1)-1 === f.indexOf(p[g]) && f.push(p[g]);\n        for(var m = 0; m < f.length; m++)for(; this.pdf.internal.getNumberOfPages() < f[m];)w.call(this);\n        if (L(f), this.autoPaging) for(var v = f[0], A = f[f.length - 1], S = v; S < A + 1; S++){\n            this.pdf.setPage(S), this.fillStyle = i, this.strokeStyle = a, this.lineCap = o, this.lineWidth = c, this.lineJoin = u;\n            var _ = this.pdf.internal.pageSize.width - this.margin[3] - this.margin[1], P = 1 === S ? this.posY + this.margin[0] : this.margin[0], k = this.pdf.internal.pageSize.height - this.posY - this.margin[0] - this.margin[2], I = this.pdf.internal.pageSize.height - this.margin[0] - this.margin[2], F = 1 === S ? 0 : k + (S - 2) * I;\n            if (0 !== this.ctx.clip_path.length) {\n                var C = this.path;\n                r = JSON.parse(JSON.stringify(this.ctx.clip_path)), this.path = N(r, this.posX + this.margin[3], -F + P + this.ctx.prevPageLastElemOffset), x.call(this, t, !0), this.path = C;\n            }\n            if (n = JSON.parse(JSON.stringify(h)), this.path = N(n, this.posX + this.margin[3], -F + P + this.ctx.prevPageLastElemOffset), !1 === e || 0 === S) {\n                var j = (S > v || S < A) && b.call(this);\n                j && (this.pdf.saveGraphicsState(), this.pdf.rect(this.margin[3], this.margin[0], _, I, null).clip().discardPath()), x.call(this, t, e), j && this.pdf.restoreGraphicsState();\n            }\n            this.lineWidth = s;\n        }\n        else this.lineWidth = c, x.call(this, t, e), this.lineWidth = s;\n        this.path = h;\n    }, x = function(t, e) {\n        if ((\"stroke\" !== t || e || !v.call(this)) && (\"stroke\" === t || e || !m.call(this))) {\n            for(var r, n, i = [], a = this.path, o = 0; o < a.length; o++){\n                var s = a[o];\n                switch(s.type){\n                    case \"begin\":\n                        i.push({\n                            begin: !0\n                        });\n                        break;\n                    case \"close\":\n                        i.push({\n                            close: !0\n                        });\n                        break;\n                    case \"mt\":\n                        i.push({\n                            start: s,\n                            deltas: [],\n                            abs: []\n                        });\n                        break;\n                    case \"lt\":\n                        var c = i.length;\n                        if (a[o - 1] && !isNaN(a[o - 1].x) && (r = [\n                            s.x - a[o - 1].x,\n                            s.y - a[o - 1].y\n                        ], c > 0)) {\n                            for(; c >= 0; c--)if (!0 !== i[c - 1].close && !0 !== i[c - 1].begin) {\n                                i[c - 1].deltas.push(r), i[c - 1].abs.push(s);\n                                break;\n                            }\n                        }\n                        break;\n                    case \"bct\":\n                        r = [\n                            s.x1 - a[o - 1].x,\n                            s.y1 - a[o - 1].y,\n                            s.x2 - a[o - 1].x,\n                            s.y2 - a[o - 1].y,\n                            s.x - a[o - 1].x,\n                            s.y - a[o - 1].y\n                        ], i[i.length - 1].deltas.push(r);\n                        break;\n                    case \"qct\":\n                        var u = a[o - 1].x + 2 / 3 * (s.x1 - a[o - 1].x), h = a[o - 1].y + 2 / 3 * (s.y1 - a[o - 1].y), l = s.x + 2 / 3 * (s.x1 - s.x), f = s.y + 2 / 3 * (s.y1 - s.y), d = s.x, p = s.y;\n                        r = [\n                            u - a[o - 1].x,\n                            h - a[o - 1].y,\n                            l - a[o - 1].x,\n                            f - a[o - 1].y,\n                            d - a[o - 1].x,\n                            p - a[o - 1].y\n                        ], i[i.length - 1].deltas.push(r);\n                        break;\n                    case \"arc\":\n                        i.push({\n                            deltas: [],\n                            abs: [],\n                            arc: !0\n                        }), Array.isArray(i[i.length - 1].abs) && i[i.length - 1].abs.push(s);\n                }\n            }\n            n = e ? null : \"stroke\" === t ? \"stroke\" : \"fill\";\n            for(var g = !1, b = 0; b < i.length; b++)if (i[b].arc) for(var y = i[b].abs, w = 0; w < y.length; w++){\n                var N = y[w];\n                \"arc\" === N.type ? P.call(this, N.x, N.y, N.radius, N.startAngle, N.endAngle, N.counterclockwise, void 0, e, !g) : j.call(this, N.x, N.y), g = !0;\n            }\n            else if (!0 === i[b].close) this.pdf.internal.out(\"h\"), g = !1;\n            else if (!0 !== i[b].begin) {\n                var L = i[b].start.x, A = i[b].start.y;\n                O.call(this, i[b].deltas, L, A), g = !0;\n            }\n            n && k.call(this, n), e && I.call(this);\n        }\n    }, S = function(t) {\n        var e = this.pdf.internal.getFontSize() / this.pdf.internal.scaleFactor, r = e * (this.pdf.internal.getLineHeightFactor() - 1);\n        switch(this.ctx.textBaseline){\n            case \"bottom\":\n                return t - r;\n            case \"top\":\n                return t + e - r;\n            case \"hanging\":\n                return t + e - 2 * r;\n            case \"middle\":\n                return t + e / 2 - r;\n            case \"ideographic\":\n                return t;\n            case \"alphabetic\":\n            default:\n                return t;\n        }\n    }, _ = function(t) {\n        return t + this.pdf.internal.getFontSize() / this.pdf.internal.scaleFactor * (this.pdf.internal.getLineHeightFactor() - 1);\n    };\n    p.prototype.createLinearGradient = function() {\n        var t = function() {};\n        return t.colorStops = [], t.addColorStop = function(t, e) {\n            this.colorStops.push([\n                t,\n                e\n            ]);\n        }, t.getColor = function() {\n            return 0 === this.colorStops.length ? \"#000000\" : this.colorStops[0][1];\n        }, t.isCanvasGradient = !0, t;\n    }, p.prototype.createPattern = function() {\n        return this.createLinearGradient();\n    }, p.prototype.createRadialGradient = function() {\n        return this.createLinearGradient();\n    };\n    var P = function(t, e, r, n, i, a, o, s, c) {\n        for(var u = M.call(this, r, n, i, a), h = 0; h < u.length; h++){\n            var l = u[h];\n            0 === h && (c ? F.call(this, l.x1 + t, l.y1 + e) : j.call(this, l.x1 + t, l.y1 + e)), B.call(this, t, e, l.x2, l.y2, l.x3, l.y3, l.x4, l.y4);\n        }\n        s ? I.call(this) : k.call(this, o);\n    }, k = function(t) {\n        switch(t){\n            case \"stroke\":\n                this.pdf.internal.out(\"S\");\n                break;\n            case \"fill\":\n                this.pdf.internal.out(\"f\");\n        }\n    }, I = function() {\n        this.pdf.clip(), this.pdf.discardPath();\n    }, F = function(t, e) {\n        this.pdf.internal.out(n(t) + \" \" + i(e) + \" m\");\n    }, C = function(t) {\n        var e;\n        switch(t.align){\n            case \"right\":\n            case \"end\":\n                e = \"right\";\n                break;\n            case \"center\":\n                e = \"center\";\n                break;\n            case \"left\":\n            case \"start\":\n            default:\n                e = \"left\";\n        }\n        var r = this.pdf.getTextDimensions(t.text), n = S.call(this, t.y), i = _.call(this, n) - r.h, a = this.ctx.transform.applyToPoint(new c(t.x, n)), o = this.ctx.transform.decompose(), s = new h;\n        s = (s = (s = s.multiply(o.translate)).multiply(o.skew)).multiply(o.scale);\n        for(var l, f, d, p = this.ctx.transform.applyToRectangle(new u(t.x, n, r.w, r.h)), g = s.applyToRectangle(new u(t.x, i, r.w, r.h)), m = y.call(this, g), v = [], w = 0; w < m.length; w += 1)-1 === v.indexOf(m[w]) && v.push(m[w]);\n        if (L(v), this.autoPaging) for(var A = v[0], P = v[v.length - 1], k = A; k < P + 1; k++){\n            this.pdf.setPage(k);\n            var I = 1 === k ? this.posY + this.margin[0] : this.margin[0], F = this.pdf.internal.pageSize.height - this.posY - this.margin[0] - this.margin[2], C = this.pdf.internal.pageSize.height - this.margin[2], j = C - this.margin[0], O = this.pdf.internal.pageSize.width - this.margin[1], B = O - this.margin[3], M = 1 === k ? 0 : F + (k - 2) * j;\n            if (0 !== this.ctx.clip_path.length) {\n                var E = this.path;\n                l = JSON.parse(JSON.stringify(this.ctx.clip_path)), this.path = N(l, this.posX + this.margin[3], -1 * M + I), x.call(this, \"fill\", !0), this.path = E;\n            }\n            var q = N([\n                JSON.parse(JSON.stringify(g))\n            ], this.posX + this.margin[3], -M + I + this.ctx.prevPageLastElemOffset)[0];\n            t.scale >= .01 && (f = this.pdf.internal.getFontSize(), this.pdf.setFontSize(f * t.scale), d = this.lineWidth, this.lineWidth = d * t.scale);\n            var D = \"text\" !== this.autoPaging;\n            if (D || q.y + q.h <= C) {\n                if (D || q.y >= I && q.x <= O) {\n                    var R = D ? t.text : this.pdf.splitTextToSize(t.text, t.maxWidth || O - q.x)[0], T = N([\n                        JSON.parse(JSON.stringify(p))\n                    ], this.posX + this.margin[3], -M + I + this.ctx.prevPageLastElemOffset)[0], U = D && (k > A || k < P) && b.call(this);\n                    U && (this.pdf.saveGraphicsState(), this.pdf.rect(this.margin[3], this.margin[0], B, j, null).clip().discardPath()), this.pdf.text(R, T.x, T.y, {\n                        angle: t.angle,\n                        align: e,\n                        renderingMode: t.renderingMode\n                    }), U && this.pdf.restoreGraphicsState();\n                }\n            } else q.y < C && (this.ctx.prevPageLastElemOffset += C - q.y);\n            t.scale >= .01 && (this.pdf.setFontSize(f), this.lineWidth = d);\n        }\n        else t.scale >= .01 && (f = this.pdf.internal.getFontSize(), this.pdf.setFontSize(f * t.scale), d = this.lineWidth, this.lineWidth = d * t.scale), this.pdf.text(t.text, a.x + this.posX, a.y + this.posY, {\n            angle: t.angle,\n            align: e,\n            renderingMode: t.renderingMode,\n            maxWidth: t.maxWidth\n        }), t.scale >= .01 && (this.pdf.setFontSize(f), this.lineWidth = d);\n    }, j = function(t, e, r, a) {\n        r = r || 0, a = a || 0, this.pdf.internal.out(n(t + r) + \" \" + i(e + a) + \" l\");\n    }, O = function(t, e, r) {\n        return this.pdf.lines(t, e, r, null, null);\n    }, B = function(t, e, n, i, a, c, u, h) {\n        this.pdf.internal.out([\n            r(o(n + t)),\n            r(s(i + e)),\n            r(o(a + t)),\n            r(s(c + e)),\n            r(o(u + t)),\n            r(s(h + e)),\n            \"c\"\n        ].join(\" \"));\n    }, M = function(t, e, r, n) {\n        for(var i = 2 * Math.PI, a = Math.PI / 2; e > r;)e -= i;\n        var o = Math.abs(r - e);\n        o < i && n && (o = i - o);\n        for(var s = [], c = n ? -1 : 1, u = e; o > 1e-5;){\n            var h = u + c * Math.min(o, a);\n            s.push(E.call(this, t, u, h)), o -= Math.abs(h - u), u = h;\n        }\n        return s;\n    }, E = function(t, e, r) {\n        var n = (r - e) / 2, i = t * Math.cos(n), a = t * Math.sin(n), o = i, s = -a, c = o * o + s * s, u = c + o * i + s * a, h = 4 / 3 * (Math.sqrt(2 * c * u) - u) / (o * a - s * i), l = o - h * s, f = s + h * o, d = l, p = -f, g = n + e, m = Math.cos(g), v = Math.sin(g);\n        return {\n            x1: t * Math.cos(e),\n            y1: t * Math.sin(e),\n            x2: l * m - f * v,\n            y2: l * v + f * m,\n            x3: d * m - p * v,\n            y3: d * v + p * m,\n            x4: t * Math.cos(r),\n            y4: t * Math.sin(r)\n        };\n    }, q = function(t) {\n        return 180 * t / Math.PI;\n    }, D = function(t, e, r, n, i, a) {\n        var o = t + .5 * (r - t), s = e + .5 * (n - e), c = i + .5 * (r - i), h = a + .5 * (n - a), l = Math.min(t, i, o, c), f = Math.max(t, i, o, c), d = Math.min(e, a, s, h), p = Math.max(e, a, s, h);\n        return new u(l, d, f - l, p - d);\n    }, R = function(t, e, r, n, i, a, o, s) {\n        var c, h, l, f, d, p, g, m, v, b, y, w, N, L, A = r - t, x = n - e, S = i - r, _ = a - n, P = o - i, k = s - a;\n        for(h = 0; h < 41; h++)v = (g = (l = t + (c = h / 40) * A) + c * ((d = r + c * S) - l)) + c * (d + c * (i + c * P - d) - g), b = (m = (f = e + c * x) + c * ((p = n + c * _) - f)) + c * (p + c * (a + c * k - p) - m), 0 == h ? (y = v, w = b, N = v, L = b) : (y = Math.min(y, v), w = Math.min(w, b), N = Math.max(N, v), L = Math.max(L, b));\n        return new u(Math.round(y), Math.round(w), Math.round(N - y), Math.round(L - w));\n    }, T = function() {\n        if (this.prevLineDash || this.ctx.lineDash.length || this.ctx.lineDashOffset) {\n            var t, e, r = (t = this.ctx.lineDash, e = this.ctx.lineDashOffset, JSON.stringify({\n                lineDash: t,\n                lineDashOffset: e\n            }));\n            this.prevLineDash !== r && (this.pdf.setLineDash(this.ctx.lineDash, this.ctx.lineDashOffset), this.prevLineDash = r);\n        }\n    };\n}(E.API), /**\n * @license\n * jsPDF filters PlugIn\n * Copyright (c) 2014 Aras Abbasi\n *\n * Licensed under the MIT License.\n * http://opensource.org/licenses/mit-license\n */ function(t) {\n    var r = function(t) {\n        var e, r, n, i, a, o, s, c, u, h;\n        for(/[^\\x00-\\xFF]/.test(t), r = [], n = 0, i = (t += e = \"\\x00\\x00\\x00\\x00\".slice(t.length % 4 || 4)).length; i > n; n += 4)0 !== (a = (t.charCodeAt(n) << 24) + (t.charCodeAt(n + 1) << 16) + (t.charCodeAt(n + 2) << 8) + t.charCodeAt(n + 3)) ? (o = (a = ((a = ((a = ((a = (a - (h = a % 85)) / 85) - (u = a % 85)) / 85) - (c = a % 85)) / 85) - (s = a % 85)) / 85) % 85, r.push(o + 33, s + 33, c + 33, u + 33, h + 33)) : r.push(122);\n        return function(t, e) {\n            for(var r = e; r > 0; r--)t.pop();\n        }(r, e.length), String.fromCharCode.apply(String, r) + \"~>\";\n    }, n = function(t) {\n        var e, r, n, i, a, o = String, s = \"length\", c = 255, u = \"charCodeAt\", h = \"slice\", l = \"replace\";\n        for(t[h](-2), t = t[h](0, -2)[l](/\\s/g, \"\")[l](\"z\", \"!!!!!\"), n = [], i = 0, a = (t += e = \"uuuuu\"[h](t[s] % 5 || 5))[s]; a > i; i += 5)r = 52200625 * (t[u](i) - 33) + 614125 * (t[u](i + 1) - 33) + 7225 * (t[u](i + 2) - 33) + 85 * (t[u](i + 3) - 33) + (t[u](i + 4) - 33), n.push(c & r >> 24, c & r >> 16, c & r >> 8, c & r);\n        return function(t, e) {\n            for(var r = e; r > 0; r--)t.pop();\n        }(n, e[s]), o.fromCharCode.apply(o, n);\n    }, i = function(t) {\n        var e = new RegExp(/^([0-9A-Fa-f]{2})+$/);\n        if (-1 !== (t = t.replace(/\\s/g, \"\")).indexOf(\">\") && (t = t.substr(0, t.indexOf(\">\"))), t.length % 2 && (t += \"0\"), !1 === e.test(t)) return \"\";\n        for(var r = \"\", n = 0; n < t.length; n += 2)r += String.fromCharCode(\"0x\" + (t[n] + t[n + 1]));\n        return r;\n    }, a = function(t) {\n        for(var r = new Uint8Array(t.length), n = t.length; n--;)r[n] = t.charCodeAt(n);\n        return t = (r = (0,fflate__WEBPACK_IMPORTED_MODULE_1__.zlibSync)(r)).reduce(function(t, e) {\n            return t + String.fromCharCode(e);\n        }, \"\");\n    };\n    t.processDataByFilters = function(t, e) {\n        var o = 0, s = t || \"\", c = [];\n        for(\"string\" == typeof (e = e || []) && (e = [\n            e\n        ]), o = 0; o < e.length; o += 1)switch(e[o]){\n            case \"ASCII85Decode\":\n            case \"/ASCII85Decode\":\n                s = n(s), c.push(\"/ASCII85Encode\");\n                break;\n            case \"ASCII85Encode\":\n            case \"/ASCII85Encode\":\n                s = r(s), c.push(\"/ASCII85Decode\");\n                break;\n            case \"ASCIIHexDecode\":\n            case \"/ASCIIHexDecode\":\n                s = i(s), c.push(\"/ASCIIHexEncode\");\n                break;\n            case \"ASCIIHexEncode\":\n            case \"/ASCIIHexEncode\":\n                s = s.split(\"\").map(function(t) {\n                    return (\"0\" + t.charCodeAt().toString(16)).slice(-2);\n                }).join(\"\") + \">\", c.push(\"/ASCIIHexDecode\");\n                break;\n            case \"FlateEncode\":\n            case \"/FlateEncode\":\n                s = a(s), c.push(\"/FlateDecode\");\n                break;\n            default:\n                throw new Error('The filter: \"' + e[o] + '\" is not implemented');\n        }\n        return {\n            data: s,\n            reverseChain: c.reverse().join(\" \")\n        };\n    };\n}(E.API), /**\n * @license\n * jsPDF fileloading PlugIn\n * Copyright (c) 2018 Aras Abbasi (aras.abbasi@gmail.com)\n *\n * Licensed under the MIT License.\n * http://opensource.org/licenses/mit-license\n */ function(t) {\n    t.loadFile = function(t, e, r) {\n        return function(t, e, r) {\n            e = !1 !== e, r = \"function\" == typeof r ? r : function() {};\n            var n = void 0;\n            try {\n                n = function(t, e, r) {\n                    var n = new XMLHttpRequest, i = 0, a = function(t) {\n                        var e = t.length, r = [], n = String.fromCharCode;\n                        for(i = 0; i < e; i += 1)r.push(n(255 & t.charCodeAt(i)));\n                        return r.join(\"\");\n                    };\n                    if (n.open(\"GET\", t, !e), n.overrideMimeType(\"text/plain; charset=x-user-defined\"), !1 === e && (n.onload = function() {\n                        200 === n.status ? r(a(this.responseText)) : r(void 0);\n                    }), n.send(null), e && 200 === n.status) return a(n.responseText);\n                }(t, e, r);\n            } catch (t) {}\n            return n;\n        }(t, e, r);\n    }, t.loadImageFile = t.loadFile;\n}(E.API), function(e) {\n    function r() {\n        return (n.html2canvas ? Promise.resolve(n.html2canvas) : __webpack_require__.e(/*! import() */ \"_app-pages-browser_node_modules_html2canvas_dist_html2canvas_js\").then(__webpack_require__.t.bind(__webpack_require__, /*! html2canvas */ \"(app-pages-browser)/./node_modules/html2canvas/dist/html2canvas.js\", 23))).catch(function(t) {\n            return Promise.reject(new Error(\"Could not load html2canvas: \" + t));\n        }).then(function(t) {\n            return t.default ? t.default : t;\n        });\n    }\n    function i() {\n        return (n.DOMPurify ? Promise.resolve(n.DOMPurify) : __webpack_require__.e(/*! import() */ \"_app-pages-browser_node_modules_dompurify_dist_purify_es_mjs\").then(__webpack_require__.bind(__webpack_require__, /*! dompurify */ \"(app-pages-browser)/./node_modules/dompurify/dist/purify.es.mjs\"))).catch(function(t) {\n            return Promise.reject(new Error(\"Could not load dompurify: \" + t));\n        }).then(function(t) {\n            return t.default ? t.default : t;\n        });\n    }\n    var a = function(e) {\n        var r = (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(e);\n        return \"undefined\" === r ? \"undefined\" : \"string\" === r || e instanceof String ? \"string\" : \"number\" === r || e instanceof Number ? \"number\" : \"function\" === r || e instanceof Function ? \"function\" : e && e.constructor === Array ? \"array\" : e && 1 === e.nodeType ? \"element\" : \"object\" === r ? \"object\" : \"unknown\";\n    }, o = function(t, e) {\n        var r = document.createElement(t);\n        for(var n in e.className && (r.className = e.className), e.innerHTML && e.dompurify && (r.innerHTML = e.dompurify.sanitize(e.innerHTML)), e.style)r.style[n] = e.style[n];\n        return r;\n    }, s = function t(e) {\n        var r = Object.assign(t.convert(Promise.resolve()), JSON.parse(JSON.stringify(t.template))), n = t.convert(Promise.resolve(), r);\n        return n = (n = n.setProgress(1, t, 1, [\n            t\n        ])).set(e);\n    };\n    (s.prototype = Object.create(Promise.prototype)).constructor = s, s.convert = function(t, e) {\n        return t.__proto__ = e || s.prototype, t;\n    }, s.template = {\n        prop: {\n            src: null,\n            container: null,\n            overlay: null,\n            canvas: null,\n            img: null,\n            pdf: null,\n            pageSize: null,\n            callback: function() {}\n        },\n        progress: {\n            val: 0,\n            state: null,\n            n: 0,\n            stack: []\n        },\n        opt: {\n            filename: \"file.pdf\",\n            margin: [\n                0,\n                0,\n                0,\n                0\n            ],\n            enableLinks: !0,\n            x: 0,\n            y: 0,\n            html2canvas: {},\n            jsPDF: {},\n            backgroundColor: \"transparent\"\n        }\n    }, s.prototype.from = function(t, e) {\n        return this.then(function() {\n            switch(e = e || function(t) {\n                switch(a(t)){\n                    case \"string\":\n                        return \"string\";\n                    case \"element\":\n                        return \"canvas\" === t.nodeName.toLowerCase() ? \"canvas\" : \"element\";\n                    default:\n                        return \"unknown\";\n                }\n            }(t)){\n                case \"string\":\n                    return this.then(i).then(function(e) {\n                        return this.set({\n                            src: o(\"div\", {\n                                innerHTML: t,\n                                dompurify: e\n                            })\n                        });\n                    });\n                case \"element\":\n                    return this.set({\n                        src: t\n                    });\n                case \"canvas\":\n                    return this.set({\n                        canvas: t\n                    });\n                case \"img\":\n                    return this.set({\n                        img: t\n                    });\n                default:\n                    return this.error(\"Unknown source type.\");\n            }\n        });\n    }, s.prototype.to = function(t) {\n        switch(t){\n            case \"container\":\n                return this.toContainer();\n            case \"canvas\":\n                return this.toCanvas();\n            case \"img\":\n                return this.toImg();\n            case \"pdf\":\n                return this.toPdf();\n            default:\n                return this.error(\"Invalid target.\");\n        }\n    }, s.prototype.toContainer = function() {\n        return this.thenList([\n            function() {\n                return this.prop.src || this.error(\"Cannot duplicate - no source HTML.\");\n            },\n            function() {\n                return this.prop.pageSize || this.setPageSize();\n            }\n        ]).then(function() {\n            var t = {\n                position: \"relative\",\n                display: \"inline-block\",\n                width: (\"number\" != typeof this.opt.width || isNaN(this.opt.width) || \"number\" != typeof this.opt.windowWidth || isNaN(this.opt.windowWidth) ? Math.max(this.prop.src.clientWidth, this.prop.src.scrollWidth, this.prop.src.offsetWidth) : this.opt.windowWidth) + \"px\",\n                left: 0,\n                right: 0,\n                top: 0,\n                margin: \"auto\",\n                backgroundColor: this.opt.backgroundColor\n            }, e = function t(e, r) {\n                for(var n = 3 === e.nodeType ? document.createTextNode(e.nodeValue) : e.cloneNode(!1), i = e.firstChild; i; i = i.nextSibling)!0 !== r && 1 === i.nodeType && \"SCRIPT\" === i.nodeName || n.appendChild(t(i, r));\n                return 1 === e.nodeType && (\"CANVAS\" === e.nodeName ? (n.width = e.width, n.height = e.height, n.getContext(\"2d\").drawImage(e, 0, 0)) : \"TEXTAREA\" !== e.nodeName && \"SELECT\" !== e.nodeName || (n.value = e.value), n.addEventListener(\"load\", function() {\n                    n.scrollTop = e.scrollTop, n.scrollLeft = e.scrollLeft;\n                }, !0)), n;\n            }(this.prop.src, this.opt.html2canvas.javascriptEnabled);\n            \"BODY\" === e.tagName && (t.height = Math.max(document.body.scrollHeight, document.body.offsetHeight, document.documentElement.clientHeight, document.documentElement.scrollHeight, document.documentElement.offsetHeight) + \"px\"), this.prop.overlay = o(\"div\", {\n                className: \"html2pdf__overlay\",\n                style: {\n                    position: \"fixed\",\n                    overflow: \"hidden\",\n                    zIndex: 1e3,\n                    left: \"-100000px\",\n                    right: 0,\n                    bottom: 0,\n                    top: 0\n                }\n            }), this.prop.container = o(\"div\", {\n                className: \"html2pdf__container\",\n                style: t\n            }), this.prop.container.appendChild(e), this.prop.container.firstChild.appendChild(o(\"div\", {\n                style: {\n                    clear: \"both\",\n                    border: \"0 none transparent\",\n                    margin: 0,\n                    padding: 0,\n                    height: 0\n                }\n            })), this.prop.container.style.float = \"none\", this.prop.overlay.appendChild(this.prop.container), document.body.appendChild(this.prop.overlay), this.prop.container.firstChild.style.position = \"relative\", this.prop.container.height = Math.max(this.prop.container.firstChild.clientHeight, this.prop.container.firstChild.scrollHeight, this.prop.container.firstChild.offsetHeight) + \"px\";\n        });\n    }, s.prototype.toCanvas = function() {\n        var t = [\n            function() {\n                return document.body.contains(this.prop.container) || this.toContainer();\n            }\n        ];\n        return this.thenList(t).then(r).then(function(t) {\n            var e = Object.assign({}, this.opt.html2canvas);\n            return delete e.onrendered, t(this.prop.container, e);\n        }).then(function(t) {\n            (this.opt.html2canvas.onrendered || function() {})(t), this.prop.canvas = t, document.body.removeChild(this.prop.overlay);\n        });\n    }, s.prototype.toContext2d = function() {\n        var t = [\n            function() {\n                return document.body.contains(this.prop.container) || this.toContainer();\n            }\n        ];\n        return this.thenList(t).then(r).then(function(t) {\n            var e = this.opt.jsPDF, r = this.opt.fontFaces, n = \"number\" != typeof this.opt.width || isNaN(this.opt.width) || \"number\" != typeof this.opt.windowWidth || isNaN(this.opt.windowWidth) ? 1 : this.opt.width / this.opt.windowWidth, i = Object.assign({\n                async: !0,\n                allowTaint: !0,\n                scale: n,\n                scrollX: this.opt.scrollX || 0,\n                scrollY: this.opt.scrollY || 0,\n                backgroundColor: \"#ffffff\",\n                imageTimeout: 15e3,\n                logging: !0,\n                proxy: null,\n                removeContainer: !0,\n                foreignObjectRendering: !1,\n                useCORS: !1\n            }, this.opt.html2canvas);\n            if (delete i.onrendered, e.context2d.autoPaging = void 0 === this.opt.autoPaging || this.opt.autoPaging, e.context2d.posX = this.opt.x, e.context2d.posY = this.opt.y, e.context2d.margin = this.opt.margin, e.context2d.fontFaces = r, r) for(var a = 0; a < r.length; ++a){\n                var o = r[a], s = o.src.find(function(t) {\n                    return \"truetype\" === t.format;\n                });\n                s && e.addFont(s.url, o.ref.name, o.ref.style);\n            }\n            return i.windowHeight = i.windowHeight || 0, i.windowHeight = 0 == i.windowHeight ? Math.max(this.prop.container.clientHeight, this.prop.container.scrollHeight, this.prop.container.offsetHeight) : i.windowHeight, e.context2d.save(!0), t(this.prop.container, i);\n        }).then(function(t) {\n            this.opt.jsPDF.context2d.restore(!0), (this.opt.html2canvas.onrendered || function() {})(t), this.prop.canvas = t, document.body.removeChild(this.prop.overlay);\n        });\n    }, s.prototype.toImg = function() {\n        return this.thenList([\n            function() {\n                return this.prop.canvas || this.toCanvas();\n            }\n        ]).then(function() {\n            var t = this.prop.canvas.toDataURL(\"image/\" + this.opt.image.type, this.opt.image.quality);\n            this.prop.img = document.createElement(\"img\"), this.prop.img.src = t;\n        });\n    }, s.prototype.toPdf = function() {\n        return this.thenList([\n            function() {\n                return this.toContext2d();\n            }\n        ]).then(function() {\n            this.prop.pdf = this.prop.pdf || this.opt.jsPDF;\n        });\n    }, s.prototype.output = function(t, e, r) {\n        return \"img\" === (r = r || \"pdf\").toLowerCase() || \"image\" === r.toLowerCase() ? this.outputImg(t, e) : this.outputPdf(t, e);\n    }, s.prototype.outputPdf = function(t, e) {\n        return this.thenList([\n            function() {\n                return this.prop.pdf || this.toPdf();\n            }\n        ]).then(function() {\n            return this.prop.pdf.output(t, e);\n        });\n    }, s.prototype.outputImg = function(t) {\n        return this.thenList([\n            function() {\n                return this.prop.img || this.toImg();\n            }\n        ]).then(function() {\n            switch(t){\n                case void 0:\n                case \"img\":\n                    return this.prop.img;\n                case \"datauristring\":\n                case \"dataurlstring\":\n                    return this.prop.img.src;\n                case \"datauri\":\n                case \"dataurl\":\n                    return document.location.href = this.prop.img.src;\n                default:\n                    throw 'Image output type \"' + t + '\" is not supported.';\n            }\n        });\n    }, s.prototype.save = function(t) {\n        return this.thenList([\n            function() {\n                return this.prop.pdf || this.toPdf();\n            }\n        ]).set(t ? {\n            filename: t\n        } : null).then(function() {\n            this.prop.pdf.save(this.opt.filename);\n        });\n    }, s.prototype.doCallback = function() {\n        return this.thenList([\n            function() {\n                return this.prop.pdf || this.toPdf();\n            }\n        ]).then(function() {\n            this.prop.callback(this.prop.pdf);\n        });\n    }, s.prototype.set = function(t) {\n        if (\"object\" !== a(t)) return this;\n        var e = Object.keys(t || {}).map(function(e) {\n            if (e in s.template.prop) return function() {\n                this.prop[e] = t[e];\n            };\n            switch(e){\n                case \"margin\":\n                    return this.setMargin.bind(this, t.margin);\n                case \"jsPDF\":\n                    return function() {\n                        return this.opt.jsPDF = t.jsPDF, this.setPageSize();\n                    };\n                case \"pageSize\":\n                    return this.setPageSize.bind(this, t.pageSize);\n                default:\n                    return function() {\n                        this.opt[e] = t[e];\n                    };\n            }\n        }, this);\n        return this.then(function() {\n            return this.thenList(e);\n        });\n    }, s.prototype.get = function(t, e) {\n        return this.then(function() {\n            var r = t in s.template.prop ? this.prop[t] : this.opt[t];\n            return e ? e(r) : r;\n        });\n    }, s.prototype.setMargin = function(t) {\n        return this.then(function() {\n            switch(a(t)){\n                case \"number\":\n                    t = [\n                        t,\n                        t,\n                        t,\n                        t\n                    ];\n                case \"array\":\n                    if (2 === t.length && (t = [\n                        t[0],\n                        t[1],\n                        t[0],\n                        t[1]\n                    ]), 4 === t.length) break;\n                default:\n                    return this.error(\"Invalid margin array.\");\n            }\n            this.opt.margin = t;\n        }).then(this.setPageSize);\n    }, s.prototype.setPageSize = function(t) {\n        function e(t, e) {\n            return Math.floor(t * e / 72 * 96);\n        }\n        return this.then(function() {\n            (t = t || E.getPageSize(this.opt.jsPDF)).hasOwnProperty(\"inner\") || (t.inner = {\n                width: t.width - this.opt.margin[1] - this.opt.margin[3],\n                height: t.height - this.opt.margin[0] - this.opt.margin[2]\n            }, t.inner.px = {\n                width: e(t.inner.width, t.k),\n                height: e(t.inner.height, t.k)\n            }, t.inner.ratio = t.inner.height / t.inner.width), this.prop.pageSize = t;\n        });\n    }, s.prototype.setProgress = function(t, e, r, n) {\n        return null != t && (this.progress.val = t), null != e && (this.progress.state = e), null != r && (this.progress.n = r), null != n && (this.progress.stack = n), this.progress.ratio = this.progress.val / this.progress.state, this;\n    }, s.prototype.updateProgress = function(t, e, r, n) {\n        return this.setProgress(t ? this.progress.val + t : null, e || null, r ? this.progress.n + r : null, n ? this.progress.stack.concat(n) : null);\n    }, s.prototype.then = function(t, e) {\n        var r = this;\n        return this.thenCore(t, e, function(t, e) {\n            return r.updateProgress(null, null, 1, [\n                t\n            ]), Promise.prototype.then.call(this, function(e) {\n                return r.updateProgress(null, t), e;\n            }).then(t, e).then(function(t) {\n                return r.updateProgress(1), t;\n            });\n        });\n    }, s.prototype.thenCore = function(t, e, r) {\n        r = r || Promise.prototype.then;\n        t && (t = t.bind(this)), e && (e = e.bind(this));\n        var n = -1 !== Promise.toString().indexOf(\"[native code]\") && \"Promise\" === Promise.name ? this : s.convert(Object.assign({}, this), Promise.prototype), i = r.call(n, t, e);\n        return s.convert(i, this.__proto__);\n    }, s.prototype.thenExternal = function(t, e) {\n        return Promise.prototype.then.call(this, t, e);\n    }, s.prototype.thenList = function(t) {\n        var e = this;\n        return t.forEach(function(t) {\n            e = e.thenCore(t);\n        }), e;\n    }, s.prototype.catch = function(t) {\n        t && (t = t.bind(this));\n        var e = Promise.prototype.catch.call(this, t);\n        return s.convert(e, this);\n    }, s.prototype.catchExternal = function(t) {\n        return Promise.prototype.catch.call(this, t);\n    }, s.prototype.error = function(t) {\n        return this.then(function() {\n            throw new Error(t);\n        });\n    }, s.prototype.using = s.prototype.set, s.prototype.saveAs = s.prototype.save, s.prototype.export = s.prototype.output, s.prototype.run = s.prototype.then, E.getPageSize = function(e, r, n) {\n        if (\"object\" === (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(e)) {\n            var i = e;\n            e = i.orientation, r = i.unit || r, n = i.format || n;\n        }\n        r = r || \"mm\", n = n || \"a4\", e = (\"\" + (e || \"P\")).toLowerCase();\n        var a, o = (\"\" + n).toLowerCase(), s = {\n            a0: [\n                2383.94,\n                3370.39\n            ],\n            a1: [\n                1683.78,\n                2383.94\n            ],\n            a2: [\n                1190.55,\n                1683.78\n            ],\n            a3: [\n                841.89,\n                1190.55\n            ],\n            a4: [\n                595.28,\n                841.89\n            ],\n            a5: [\n                419.53,\n                595.28\n            ],\n            a6: [\n                297.64,\n                419.53\n            ],\n            a7: [\n                209.76,\n                297.64\n            ],\n            a8: [\n                147.4,\n                209.76\n            ],\n            a9: [\n                104.88,\n                147.4\n            ],\n            a10: [\n                73.7,\n                104.88\n            ],\n            b0: [\n                2834.65,\n                4008.19\n            ],\n            b1: [\n                2004.09,\n                2834.65\n            ],\n            b2: [\n                1417.32,\n                2004.09\n            ],\n            b3: [\n                1000.63,\n                1417.32\n            ],\n            b4: [\n                708.66,\n                1000.63\n            ],\n            b5: [\n                498.9,\n                708.66\n            ],\n            b6: [\n                354.33,\n                498.9\n            ],\n            b7: [\n                249.45,\n                354.33\n            ],\n            b8: [\n                175.75,\n                249.45\n            ],\n            b9: [\n                124.72,\n                175.75\n            ],\n            b10: [\n                87.87,\n                124.72\n            ],\n            c0: [\n                2599.37,\n                3676.54\n            ],\n            c1: [\n                1836.85,\n                2599.37\n            ],\n            c2: [\n                1298.27,\n                1836.85\n            ],\n            c3: [\n                918.43,\n                1298.27\n            ],\n            c4: [\n                649.13,\n                918.43\n            ],\n            c5: [\n                459.21,\n                649.13\n            ],\n            c6: [\n                323.15,\n                459.21\n            ],\n            c7: [\n                229.61,\n                323.15\n            ],\n            c8: [\n                161.57,\n                229.61\n            ],\n            c9: [\n                113.39,\n                161.57\n            ],\n            c10: [\n                79.37,\n                113.39\n            ],\n            dl: [\n                311.81,\n                623.62\n            ],\n            letter: [\n                612,\n                792\n            ],\n            \"government-letter\": [\n                576,\n                756\n            ],\n            legal: [\n                612,\n                1008\n            ],\n            \"junior-legal\": [\n                576,\n                360\n            ],\n            ledger: [\n                1224,\n                792\n            ],\n            tabloid: [\n                792,\n                1224\n            ],\n            \"credit-card\": [\n                153,\n                243\n            ]\n        };\n        switch(r){\n            case \"pt\":\n                a = 1;\n                break;\n            case \"mm\":\n                a = 72 / 25.4;\n                break;\n            case \"cm\":\n                a = 72 / 2.54;\n                break;\n            case \"in\":\n                a = 72;\n                break;\n            case \"px\":\n                a = .75;\n                break;\n            case \"pc\":\n            case \"em\":\n                a = 12;\n                break;\n            case \"ex\":\n                a = 6;\n                break;\n            default:\n                throw \"Invalid unit: \" + r;\n        }\n        var c, u = 0, h = 0;\n        if (s.hasOwnProperty(o)) u = s[o][1] / a, h = s[o][0] / a;\n        else try {\n            u = n[1], h = n[0];\n        } catch (t) {\n            throw new Error(\"Invalid format: \" + n);\n        }\n        if (\"p\" === e || \"portrait\" === e) e = \"p\", h > u && (c = h, h = u, u = c);\n        else {\n            if (\"l\" !== e && \"landscape\" !== e) throw \"Invalid orientation: \" + e;\n            e = \"l\", u > h && (c = h, h = u, u = c);\n        }\n        return {\n            width: h,\n            height: u,\n            unit: r,\n            k: a,\n            orientation: e\n        };\n    }, e.html = function(t, e) {\n        (e = e || {}).callback = e.callback || function() {}, e.html2canvas = e.html2canvas || {}, e.html2canvas.canvas = e.html2canvas.canvas || this.canvas, e.jsPDF = e.jsPDF || this, e.fontFaces = e.fontFaces ? e.fontFaces.map(jt) : null;\n        var r = new s(e);\n        return e.worker ? r : r.from(t).doCallback();\n    };\n}(E.API), E.API.addJS = function(t) {\n    return Ht = t, this.internal.events.subscribe(\"postPutResources\", function() {\n        Ut = this.internal.newObject(), this.internal.out(\"<<\"), this.internal.out(\"/Names [(EmbeddedJS) \" + (Ut + 1) + \" 0 R]\"), this.internal.out(\">>\"), this.internal.out(\"endobj\"), zt = this.internal.newObject(), this.internal.out(\"<<\"), this.internal.out(\"/S /JavaScript\"), this.internal.out(\"/JS (\" + Ht + \")\"), this.internal.out(\">>\"), this.internal.out(\"endobj\");\n    }), this.internal.events.subscribe(\"putCatalog\", function() {\n        void 0 !== Ut && void 0 !== zt && this.internal.out(\"/Names <</JavaScript \" + Ut + \" 0 R>>\");\n    }), this;\n}, /**\n * @license\n * Copyright (c) 2014 Steven Spungin (TwelveTone LLC)  steven@twelvetone.tv\n *\n * Licensed under the MIT License.\n * http://opensource.org/licenses/mit-license\n */ function(t) {\n    var e;\n    t.events.push([\n        \"postPutResources\",\n        function() {\n            var t = this, r = /^(\\d+) 0 obj$/;\n            if (this.outline.root.children.length > 0) for(var n = t.outline.render().split(/\\r\\n/), i = 0; i < n.length; i++){\n                var a = n[i], o = r.exec(a);\n                if (null != o) {\n                    var s = o[1];\n                    t.internal.newObjectDeferredBegin(s, !1);\n                }\n                t.internal.write(a);\n            }\n            if (this.outline.createNamedDestinations) {\n                var c = this.internal.pages.length, u = [];\n                for(i = 0; i < c; i++){\n                    var h = t.internal.newObject();\n                    u.push(h);\n                    var l = t.internal.getPageInfo(i + 1);\n                    t.internal.write(\"<< /D[\" + l.objId + \" 0 R /XYZ null null null]>> endobj\");\n                }\n                var f = t.internal.newObject();\n                t.internal.write(\"<< /Names [ \");\n                for(i = 0; i < u.length; i++)t.internal.write(\"(page_\" + (i + 1) + \")\" + u[i] + \" 0 R\");\n                t.internal.write(\" ] >>\", \"endobj\"), e = t.internal.newObject(), t.internal.write(\"<< /Dests \" + f + \" 0 R\"), t.internal.write(\">>\", \"endobj\");\n            }\n        }\n    ]), t.events.push([\n        \"putCatalog\",\n        function() {\n            this.outline.root.children.length > 0 && (this.internal.write(\"/Outlines\", this.outline.makeRef(this.outline.root)), this.outline.createNamedDestinations && this.internal.write(\"/Names \" + e + \" 0 R\"));\n        }\n    ]), t.events.push([\n        \"initialized\",\n        function() {\n            var t = this;\n            t.outline = {\n                createNamedDestinations: !1,\n                root: {\n                    children: []\n                }\n            }, t.outline.add = function(t, e, r) {\n                var n = {\n                    title: e,\n                    options: r,\n                    children: []\n                };\n                return null == t && (t = this.root), t.children.push(n), n;\n            }, t.outline.render = function() {\n                return this.ctx = {}, this.ctx.val = \"\", this.ctx.pdf = t, this.genIds_r(this.root), this.renderRoot(this.root), this.renderItems(this.root), this.ctx.val;\n            }, t.outline.genIds_r = function(e) {\n                e.id = t.internal.newObjectDeferred();\n                for(var r = 0; r < e.children.length; r++)this.genIds_r(e.children[r]);\n            }, t.outline.renderRoot = function(t) {\n                this.objStart(t), this.line(\"/Type /Outlines\"), t.children.length > 0 && (this.line(\"/First \" + this.makeRef(t.children[0])), this.line(\"/Last \" + this.makeRef(t.children[t.children.length - 1]))), this.line(\"/Count \" + this.count_r({\n                    count: 0\n                }, t)), this.objEnd();\n            }, t.outline.renderItems = function(e) {\n                for(var r = this.ctx.pdf.internal.getVerticalCoordinateString, n = 0; n < e.children.length; n++){\n                    var i = e.children[n];\n                    this.objStart(i), this.line(\"/Title \" + this.makeString(i.title)), this.line(\"/Parent \" + this.makeRef(e)), n > 0 && this.line(\"/Prev \" + this.makeRef(e.children[n - 1])), n < e.children.length - 1 && this.line(\"/Next \" + this.makeRef(e.children[n + 1])), i.children.length > 0 && (this.line(\"/First \" + this.makeRef(i.children[0])), this.line(\"/Last \" + this.makeRef(i.children[i.children.length - 1])));\n                    var a = this.count = this.count_r({\n                        count: 0\n                    }, i);\n                    if (a > 0 && this.line(\"/Count \" + a), i.options && i.options.pageNumber) {\n                        var o = t.internal.getPageInfo(i.options.pageNumber);\n                        this.line(\"/Dest [\" + o.objId + \" 0 R /XYZ 0 \" + r(0) + \" 0]\");\n                    }\n                    this.objEnd();\n                }\n                for(var s = 0; s < e.children.length; s++)this.renderItems(e.children[s]);\n            }, t.outline.line = function(t) {\n                this.ctx.val += t + \"\\r\\n\";\n            }, t.outline.makeRef = function(t) {\n                return t.id + \" 0 R\";\n            }, t.outline.makeString = function(e) {\n                return \"(\" + t.internal.pdfEscape(e) + \")\";\n            }, t.outline.objStart = function(t) {\n                this.ctx.val += \"\\r\\n\" + t.id + \" 0 obj\\r\\n<<\\r\\n\";\n            }, t.outline.objEnd = function() {\n                this.ctx.val += \">> \\r\\nendobj\\r\\n\";\n            }, t.outline.count_r = function(t, e) {\n                for(var r = 0; r < e.children.length; r++)t.count++, this.count_r(t, e.children[r]);\n                return t.count;\n            };\n        }\n    ]);\n}(E.API), /**\n * @license\n *\n * Licensed under the MIT License.\n * http://opensource.org/licenses/mit-license\n */ function(t) {\n    var e = [\n        192,\n        193,\n        194,\n        195,\n        196,\n        197,\n        198,\n        199\n    ];\n    t.processJPEG = function(t, r, n, i, a, o) {\n        var s, c = this.decode.DCT_DECODE, u = null;\n        if (\"string\" == typeof t || this.__addimage__.isArrayBuffer(t) || this.__addimage__.isArrayBufferView(t)) {\n            switch(t = a || t, t = this.__addimage__.isArrayBuffer(t) ? new Uint8Array(t) : t, (s = function(t) {\n                for(var r, n = 256 * t.charCodeAt(4) + t.charCodeAt(5), i = t.length, a = {\n                    width: 0,\n                    height: 0,\n                    numcomponents: 1\n                }, o = 4; o < i; o += 2){\n                    if (o += n, -1 !== e.indexOf(t.charCodeAt(o + 1))) {\n                        r = 256 * t.charCodeAt(o + 5) + t.charCodeAt(o + 6), a = {\n                            width: 256 * t.charCodeAt(o + 7) + t.charCodeAt(o + 8),\n                            height: r,\n                            numcomponents: t.charCodeAt(o + 9)\n                        };\n                        break;\n                    }\n                    n = 256 * t.charCodeAt(o + 2) + t.charCodeAt(o + 3);\n                }\n                return a;\n            }(t = this.__addimage__.isArrayBufferView(t) ? this.__addimage__.arrayBufferToBinaryString(t) : t)).numcomponents){\n                case 1:\n                    o = this.color_spaces.DEVICE_GRAY;\n                    break;\n                case 4:\n                    o = this.color_spaces.DEVICE_CMYK;\n                    break;\n                case 3:\n                    o = this.color_spaces.DEVICE_RGB;\n            }\n            u = {\n                data: t,\n                width: s.width,\n                height: s.height,\n                colorSpace: o,\n                bitsPerComponent: 8,\n                filter: c,\n                index: r,\n                alias: n\n            };\n        }\n        return u;\n    };\n}(E.API);\nvar Vt, Gt, Yt, Jt, Xt, Kt = function() {\n    var t, e, i;\n    function a(t) {\n        var e, r, n, i, a, o, s, c, u, h, l, f, d, p;\n        for(this.data = t, this.pos = 8, this.palette = [], this.imgData = [], this.transparency = {}, this.animation = null, this.text = {}, o = null;;){\n            switch(e = this.readUInt32(), u = (function() {\n                var t, e;\n                for(e = [], t = 0; t < 4; ++t)e.push(String.fromCharCode(this.data[this.pos++]));\n                return e;\n            }).call(this).join(\"\")){\n                case \"IHDR\":\n                    this.width = this.readUInt32(), this.height = this.readUInt32(), this.bits = this.data[this.pos++], this.colorType = this.data[this.pos++], this.compressionMethod = this.data[this.pos++], this.filterMethod = this.data[this.pos++], this.interlaceMethod = this.data[this.pos++];\n                    break;\n                case \"acTL\":\n                    this.animation = {\n                        numFrames: this.readUInt32(),\n                        numPlays: this.readUInt32() || 1 / 0,\n                        frames: []\n                    };\n                    break;\n                case \"PLTE\":\n                    this.palette = this.read(e);\n                    break;\n                case \"fcTL\":\n                    o && this.animation.frames.push(o), this.pos += 4, o = {\n                        width: this.readUInt32(),\n                        height: this.readUInt32(),\n                        xOffset: this.readUInt32(),\n                        yOffset: this.readUInt32()\n                    }, a = this.readUInt16(), i = this.readUInt16() || 100, o.delay = 1e3 * a / i, o.disposeOp = this.data[this.pos++], o.blendOp = this.data[this.pos++], o.data = [];\n                    break;\n                case \"IDAT\":\n                case \"fdAT\":\n                    for(\"fdAT\" === u && (this.pos += 4, e -= 4), t = (null != o ? o.data : void 0) || this.imgData, f = 0; 0 <= e ? f < e : f > e; 0 <= e ? ++f : --f)t.push(this.data[this.pos++]);\n                    break;\n                case \"tRNS\":\n                    switch(this.transparency = {}, this.colorType){\n                        case 3:\n                            if (n = this.palette.length / 3, this.transparency.indexed = this.read(e), this.transparency.indexed.length > n) throw new Error(\"More transparent colors than palette size\");\n                            if ((h = n - this.transparency.indexed.length) > 0) for(d = 0; 0 <= h ? d < h : d > h; 0 <= h ? ++d : --d)this.transparency.indexed.push(255);\n                            break;\n                        case 0:\n                            this.transparency.grayscale = this.read(e)[0];\n                            break;\n                        case 2:\n                            this.transparency.rgb = this.read(e);\n                    }\n                    break;\n                case \"tEXt\":\n                    s = (l = this.read(e)).indexOf(0), c = String.fromCharCode.apply(String, l.slice(0, s)), this.text[c] = String.fromCharCode.apply(String, l.slice(s + 1));\n                    break;\n                case \"IEND\":\n                    return o && this.animation.frames.push(o), this.colors = (function() {\n                        switch(this.colorType){\n                            case 0:\n                            case 3:\n                            case 4:\n                                return 1;\n                            case 2:\n                            case 6:\n                                return 3;\n                        }\n                    }).call(this), this.hasAlphaChannel = 4 === (p = this.colorType) || 6 === p, r = this.colors + (this.hasAlphaChannel ? 1 : 0), this.pixelBitlength = this.bits * r, this.colorSpace = (function() {\n                        switch(this.colors){\n                            case 1:\n                                return \"DeviceGray\";\n                            case 3:\n                                return \"DeviceRGB\";\n                        }\n                    }).call(this), void (this.imgData = new Uint8Array(this.imgData));\n                default:\n                    this.pos += e;\n            }\n            if (this.pos += 4, this.pos > this.data.length) throw new Error(\"Incomplete or corrupt PNG file\");\n        }\n    }\n    a.prototype.read = function(t) {\n        var e, r;\n        for(r = [], e = 0; 0 <= t ? e < t : e > t; 0 <= t ? ++e : --e)r.push(this.data[this.pos++]);\n        return r;\n    }, a.prototype.readUInt32 = function() {\n        return this.data[this.pos++] << 24 | this.data[this.pos++] << 16 | this.data[this.pos++] << 8 | this.data[this.pos++];\n    }, a.prototype.readUInt16 = function() {\n        return this.data[this.pos++] << 8 | this.data[this.pos++];\n    }, a.prototype.decodePixels = function(t) {\n        var e = this.pixelBitlength / 8, n = new Uint8Array(this.width * this.height * e), i = 0, a = this;\n        if (null == t && (t = this.imgData), 0 === t.length) return new Uint8Array(0);\n        function o(r, o, s, c) {\n            var u, h, l, f, d, p, g, m, v, b, y, w, N, L, A, x, S, _, P, k, I, F = Math.ceil((a.width - r) / s), C = Math.ceil((a.height - o) / c), j = a.width == F && a.height == C;\n            for(L = e * F, w = j ? n : new Uint8Array(L * C), p = t.length, N = 0, h = 0; N < C && i < p;){\n                switch(t[i++]){\n                    case 0:\n                        for(f = S = 0; S < L; f = S += 1)w[h++] = t[i++];\n                        break;\n                    case 1:\n                        for(f = _ = 0; _ < L; f = _ += 1)u = t[i++], d = f < e ? 0 : w[h - e], w[h++] = (u + d) % 256;\n                        break;\n                    case 2:\n                        for(f = P = 0; P < L; f = P += 1)u = t[i++], l = (f - f % e) / e, A = N && w[(N - 1) * L + l * e + f % e], w[h++] = (A + u) % 256;\n                        break;\n                    case 3:\n                        for(f = k = 0; k < L; f = k += 1)u = t[i++], l = (f - f % e) / e, d = f < e ? 0 : w[h - e], A = N && w[(N - 1) * L + l * e + f % e], w[h++] = (u + Math.floor((d + A) / 2)) % 256;\n                        break;\n                    case 4:\n                        for(f = I = 0; I < L; f = I += 1)u = t[i++], l = (f - f % e) / e, d = f < e ? 0 : w[h - e], 0 === N ? A = x = 0 : (A = w[(N - 1) * L + l * e + f % e], x = l && w[(N - 1) * L + (l - 1) * e + f % e]), g = d + A - x, m = Math.abs(g - d), b = Math.abs(g - A), y = Math.abs(g - x), v = m <= b && m <= y ? d : b <= y ? A : x, w[h++] = (u + v) % 256;\n                        break;\n                    default:\n                        throw new Error(\"Invalid filter algorithm: \" + t[i - 1]);\n                }\n                if (!j) {\n                    var O = ((o + N * c) * a.width + r) * e, B = N * L;\n                    for(f = 0; f < F; f += 1){\n                        for(var M = 0; M < e; M += 1)n[O++] = w[B++];\n                        O += (s - 1) * e;\n                    }\n                }\n                N++;\n            }\n        }\n        return t = (0,fflate__WEBPACK_IMPORTED_MODULE_1__.unzlibSync)(t), 1 == a.interlaceMethod ? (o(0, 0, 8, 8), o(4, 0, 8, 8), o(0, 4, 4, 8), o(2, 0, 4, 4), o(0, 2, 2, 4), o(1, 0, 2, 2), o(0, 1, 1, 2)) : o(0, 0, 1, 1), n;\n    }, a.prototype.decodePalette = function() {\n        var t, e, r, n, i, a, o, s, c;\n        for(r = this.palette, a = this.transparency.indexed || [], i = new Uint8Array((a.length || 0) + r.length), n = 0, t = 0, e = o = 0, s = r.length; o < s; e = o += 3)i[n++] = r[e], i[n++] = r[e + 1], i[n++] = r[e + 2], i[n++] = null != (c = a[t++]) ? c : 255;\n        return i;\n    }, a.prototype.copyToImageData = function(t, e) {\n        var r, n, i, a, o, s, c, u, h, l, f;\n        if (n = this.colors, h = null, r = this.hasAlphaChannel, this.palette.length && (h = null != (f = this._decodedPalette) ? f : this._decodedPalette = this.decodePalette(), n = 4, r = !0), u = (i = t.data || t).length, o = h || e, a = s = 0, 1 === n) for(; a < u;)c = h ? 4 * e[a / 4] : s, l = o[c++], i[a++] = l, i[a++] = l, i[a++] = l, i[a++] = r ? o[c++] : 255, s = c;\n        else for(; a < u;)c = h ? 4 * e[a / 4] : s, i[a++] = o[c++], i[a++] = o[c++], i[a++] = o[c++], i[a++] = r ? o[c++] : 255, s = c;\n    }, a.prototype.decode = function() {\n        var t;\n        return t = new Uint8Array(this.width * this.height * 4), this.copyToImageData(t, this.decodePixels()), t;\n    };\n    var o = function() {\n        if (\"[object Window]\" === Object.prototype.toString.call(n)) {\n            try {\n                e = n.document.createElement(\"canvas\"), i = e.getContext(\"2d\");\n            } catch (t) {\n                return !1;\n            }\n            return !0;\n        }\n        return !1;\n    };\n    return o(), t = function(t) {\n        var r;\n        if (!0 === o()) return i.width = t.width, i.height = t.height, i.clearRect(0, 0, t.width, t.height), i.putImageData(t, 0, 0), (r = new Image).src = e.toDataURL(), r;\n        throw new Error(\"This method requires a Browser with Canvas-capability.\");\n    }, a.prototype.decodeFrames = function(e) {\n        var r, n, i, a, o, s, c, u;\n        if (this.animation) {\n            for(u = [], n = o = 0, s = (c = this.animation.frames).length; o < s; n = ++o)r = c[n], i = e.createImageData(r.width, r.height), a = this.decodePixels(new Uint8Array(r.data)), this.copyToImageData(i, a), r.imageData = i, u.push(r.image = t(i));\n            return u;\n        }\n    }, a.prototype.renderFrame = function(t, e) {\n        var r, n, i;\n        return r = (n = this.animation.frames)[e], i = n[e - 1], 0 === e && t.clearRect(0, 0, this.width, this.height), 1 === (null != i ? i.disposeOp : void 0) ? t.clearRect(i.xOffset, i.yOffset, i.width, i.height) : 2 === (null != i ? i.disposeOp : void 0) && t.putImageData(i.imageData, i.xOffset, i.yOffset), 0 === r.blendOp && t.clearRect(r.xOffset, r.yOffset, r.width, r.height), t.drawImage(r.image, r.xOffset, r.yOffset);\n    }, a.prototype.animate = function(t) {\n        var e, r, n, i, a, o, s = this;\n        return r = 0, o = this.animation, i = o.numFrames, n = o.frames, a = o.numPlays, (e = function() {\n            var o, c;\n            if (o = r++ % i, c = n[o], s.renderFrame(t, o), i > 1 && r / i < a) return s.animation._timeout = setTimeout(e, c.delay);\n        })();\n    }, a.prototype.stopAnimation = function() {\n        var t;\n        return clearTimeout(null != (t = this.animation) ? t._timeout : void 0);\n    }, a.prototype.render = function(t) {\n        var e, r;\n        return t._png && t._png.stopAnimation(), t._png = this, t.width = this.width, t.height = this.height, e = t.getContext(\"2d\"), this.animation ? (this.decodeFrames(e), this.animate(e)) : (r = e.createImageData(this.width, this.height), this.copyToImageData(r, this.decodePixels()), e.putImageData(r, 0, 0));\n    }, a;\n}();\n/**\n * @license\n *\n * Copyright (c) 2014 James Robb, https://github.com/jamesbrobb\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n * ====================================================================\n */ /**\n * @license\n * (c) Dean McNamee <dean@gmail.com>, 2013.\n *\n * https://github.com/deanm/omggif\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to\n * deal in the Software without restriction, including without limitation the\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n * sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n *\n * omggif is a JavaScript implementation of a GIF 89a encoder and decoder,\n * including animation and compression.  It does not rely on any specific\n * underlying system, so should run in the browser, Node, or Plask.\n */ function Zt(t) {\n    var e = 0;\n    if (71 !== t[e++] || 73 !== t[e++] || 70 !== t[e++] || 56 !== t[e++] || 56 != (t[e++] + 1 & 253) || 97 !== t[e++]) throw new Error(\"Invalid GIF 87a/89a header.\");\n    var r = t[e++] | t[e++] << 8, n = t[e++] | t[e++] << 8, i = t[e++], a = i >> 7, o = 1 << (7 & i) + 1;\n    t[e++], t[e++];\n    var s = null, c = null;\n    a && (s = e, c = o, e += 3 * o);\n    var u = !0, h = [], l = 0, f = null, d = 0, p = null;\n    for(this.width = r, this.height = n; u && e < t.length;)switch(t[e++]){\n        case 33:\n            switch(t[e++]){\n                case 255:\n                    if (11 !== t[e] || 78 == t[e + 1] && 69 == t[e + 2] && 84 == t[e + 3] && 83 == t[e + 4] && 67 == t[e + 5] && 65 == t[e + 6] && 80 == t[e + 7] && 69 == t[e + 8] && 50 == t[e + 9] && 46 == t[e + 10] && 48 == t[e + 11] && 3 == t[e + 12] && 1 == t[e + 13] && 0 == t[e + 16]) e += 14, p = t[e++] | t[e++] << 8, e++;\n                    else for(e += 12;;){\n                        if (!((P = t[e++]) >= 0)) throw Error(\"Invalid block size\");\n                        if (0 === P) break;\n                        e += P;\n                    }\n                    break;\n                case 249:\n                    if (4 !== t[e++] || 0 !== t[e + 4]) throw new Error(\"Invalid graphics extension block.\");\n                    var g = t[e++];\n                    l = t[e++] | t[e++] << 8, f = t[e++], 0 == (1 & g) && (f = null), d = g >> 2 & 7, e++;\n                    break;\n                case 254:\n                    for(;;){\n                        if (!((P = t[e++]) >= 0)) throw Error(\"Invalid block size\");\n                        if (0 === P) break;\n                        e += P;\n                    }\n                    break;\n                default:\n                    throw new Error(\"Unknown graphic control label: 0x\" + t[e - 1].toString(16));\n            }\n            break;\n        case 44:\n            var m = t[e++] | t[e++] << 8, v = t[e++] | t[e++] << 8, b = t[e++] | t[e++] << 8, y = t[e++] | t[e++] << 8, w = t[e++], N = w >> 6 & 1, L = 1 << (7 & w) + 1, A = s, x = c, S = !1;\n            if (w >> 7) {\n                S = !0;\n                A = e, x = L, e += 3 * L;\n            }\n            var _ = e;\n            for(e++;;){\n                var P;\n                if (!((P = t[e++]) >= 0)) throw Error(\"Invalid block size\");\n                if (0 === P) break;\n                e += P;\n            }\n            h.push({\n                x: m,\n                y: v,\n                width: b,\n                height: y,\n                has_local_palette: S,\n                palette_offset: A,\n                palette_size: x,\n                data_offset: _,\n                data_length: e - _,\n                transparent_index: f,\n                interlaced: !!N,\n                delay: l,\n                disposal: d\n            });\n            break;\n        case 59:\n            u = !1;\n            break;\n        default:\n            throw new Error(\"Unknown gif block: 0x\" + t[e - 1].toString(16));\n    }\n    this.numFrames = function() {\n        return h.length;\n    }, this.loopCount = function() {\n        return p;\n    }, this.frameInfo = function(t) {\n        if (t < 0 || t >= h.length) throw new Error(\"Frame index out of range.\");\n        return h[t];\n    }, this.decodeAndBlitFrameBGRA = function(e, n) {\n        var i = this.frameInfo(e), a = i.width * i.height, o = new Uint8Array(a);\n        $t(t, i.data_offset, o, a);\n        var s = i.palette_offset, c = i.transparent_index;\n        null === c && (c = 256);\n        var u = i.width, h = r - u, l = u, f = 4 * (i.y * r + i.x), d = 4 * ((i.y + i.height) * r + i.x), p = f, g = 4 * h;\n        !0 === i.interlaced && (g += 4 * r * 7);\n        for(var m = 8, v = 0, b = o.length; v < b; ++v){\n            var y = o[v];\n            if (0 === l && (l = u, (p += g) >= d && (g = 4 * h + 4 * r * (m - 1), p = f + (u + h) * (m << 1), m >>= 1)), y === c) p += 4;\n            else {\n                var w = t[s + 3 * y], N = t[s + 3 * y + 1], L = t[s + 3 * y + 2];\n                n[p++] = L, n[p++] = N, n[p++] = w, n[p++] = 255;\n            }\n            --l;\n        }\n    }, this.decodeAndBlitFrameRGBA = function(e, n) {\n        var i = this.frameInfo(e), a = i.width * i.height, o = new Uint8Array(a);\n        $t(t, i.data_offset, o, a);\n        var s = i.palette_offset, c = i.transparent_index;\n        null === c && (c = 256);\n        var u = i.width, h = r - u, l = u, f = 4 * (i.y * r + i.x), d = 4 * ((i.y + i.height) * r + i.x), p = f, g = 4 * h;\n        !0 === i.interlaced && (g += 4 * r * 7);\n        for(var m = 8, v = 0, b = o.length; v < b; ++v){\n            var y = o[v];\n            if (0 === l && (l = u, (p += g) >= d && (g = 4 * h + 4 * r * (m - 1), p = f + (u + h) * (m << 1), m >>= 1)), y === c) p += 4;\n            else {\n                var w = t[s + 3 * y], N = t[s + 3 * y + 1], L = t[s + 3 * y + 2];\n                n[p++] = w, n[p++] = N, n[p++] = L, n[p++] = 255;\n            }\n            --l;\n        }\n    };\n}\n_c17 = Zt;\nfunction $t(t, e, r, n) {\n    for(var i = t[e++], o = 1 << i, s = o + 1, c = s + 1, u = i + 1, h = (1 << u) - 1, l = 0, f = 0, d = 0, p = t[e++], g = new Int32Array(4096), m = null;;){\n        for(; l < 16 && 0 !== p;)f |= t[e++] << l, l += 8, 1 === p ? p = t[e++] : --p;\n        if (l < u) break;\n        var v = f & h;\n        if (f >>= u, l -= u, v !== o) {\n            if (v === s) break;\n            for(var b = v < c ? v : m, y = 0, w = b; w > o;)w = g[w] >> 8, ++y;\n            var N = w;\n            if (d + y + (b !== v ? 1 : 0) > n) return void a.log(\"Warning, gif stream longer than expected.\");\n            r[d++] = N;\n            var L = d += y;\n            for(b !== v && (r[d++] = N), w = b; y--;)w = g[w], r[--L] = 255 & w, w >>= 8;\n            null !== m && c < 4096 && (g[c++] = m << 8 | N, c >= h + 1 && u < 12 && (++u, h = h << 1 | 1)), m = v;\n        } else c = s + 1, h = (1 << (u = i + 1)) - 1, m = null;\n    }\n    return d !== n && a.log(\"Warning, gif stream shorter than expected.\"), r;\n}\n/**\n * @license\n  Copyright (c) 2008, Adobe Systems Incorporated\n  All rights reserved.\n\n  Redistribution and use in source and binary forms, with or without \n  modification, are permitted provided that the following conditions are\n  met:\n\n  * Redistributions of source code must retain the above copyright notice, \n    this list of conditions and the following disclaimer.\n  \n  * Redistributions in binary form must reproduce the above copyright\n    notice, this list of conditions and the following disclaimer in the \n    documentation and/or other materials provided with the distribution.\n  \n  * Neither the name of Adobe Systems Incorporated nor the names of its \n    contributors may be used to endorse or promote products derived from \n    this software without specific prior written permission.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n  IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n  THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n  PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR \n  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/ function Qt(t) {\n    var e, r, n, i, a, o = Math.floor, s = new Array(64), c = new Array(64), u = new Array(64), h = new Array(64), l = new Array(65535), f = new Array(65535), d = new Array(64), p = new Array(64), g = [], m = 0, v = 7, b = new Array(64), y = new Array(64), w = new Array(64), N = new Array(256), L = new Array(2048), A = [\n        0,\n        1,\n        5,\n        6,\n        14,\n        15,\n        27,\n        28,\n        2,\n        4,\n        7,\n        13,\n        16,\n        26,\n        29,\n        42,\n        3,\n        8,\n        12,\n        17,\n        25,\n        30,\n        41,\n        43,\n        9,\n        11,\n        18,\n        24,\n        31,\n        40,\n        44,\n        53,\n        10,\n        19,\n        23,\n        32,\n        39,\n        45,\n        52,\n        54,\n        20,\n        22,\n        33,\n        38,\n        46,\n        51,\n        55,\n        60,\n        21,\n        34,\n        37,\n        47,\n        50,\n        56,\n        59,\n        61,\n        35,\n        36,\n        48,\n        49,\n        57,\n        58,\n        62,\n        63\n    ], x = [\n        0,\n        0,\n        1,\n        5,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0\n    ], S = [\n        0,\n        1,\n        2,\n        3,\n        4,\n        5,\n        6,\n        7,\n        8,\n        9,\n        10,\n        11\n    ], _ = [\n        0,\n        0,\n        2,\n        1,\n        3,\n        3,\n        2,\n        4,\n        3,\n        5,\n        5,\n        4,\n        4,\n        0,\n        0,\n        1,\n        125\n    ], P = [\n        1,\n        2,\n        3,\n        0,\n        4,\n        17,\n        5,\n        18,\n        33,\n        49,\n        65,\n        6,\n        19,\n        81,\n        97,\n        7,\n        34,\n        113,\n        20,\n        50,\n        129,\n        145,\n        161,\n        8,\n        35,\n        66,\n        177,\n        193,\n        21,\n        82,\n        209,\n        240,\n        36,\n        51,\n        98,\n        114,\n        130,\n        9,\n        10,\n        22,\n        23,\n        24,\n        25,\n        26,\n        37,\n        38,\n        39,\n        40,\n        41,\n        42,\n        52,\n        53,\n        54,\n        55,\n        56,\n        57,\n        58,\n        67,\n        68,\n        69,\n        70,\n        71,\n        72,\n        73,\n        74,\n        83,\n        84,\n        85,\n        86,\n        87,\n        88,\n        89,\n        90,\n        99,\n        100,\n        101,\n        102,\n        103,\n        104,\n        105,\n        106,\n        115,\n        116,\n        117,\n        118,\n        119,\n        120,\n        121,\n        122,\n        131,\n        132,\n        133,\n        134,\n        135,\n        136,\n        137,\n        138,\n        146,\n        147,\n        148,\n        149,\n        150,\n        151,\n        152,\n        153,\n        154,\n        162,\n        163,\n        164,\n        165,\n        166,\n        167,\n        168,\n        169,\n        170,\n        178,\n        179,\n        180,\n        181,\n        182,\n        183,\n        184,\n        185,\n        186,\n        194,\n        195,\n        196,\n        197,\n        198,\n        199,\n        200,\n        201,\n        202,\n        210,\n        211,\n        212,\n        213,\n        214,\n        215,\n        216,\n        217,\n        218,\n        225,\n        226,\n        227,\n        228,\n        229,\n        230,\n        231,\n        232,\n        233,\n        234,\n        241,\n        242,\n        243,\n        244,\n        245,\n        246,\n        247,\n        248,\n        249,\n        250\n    ], k = [\n        0,\n        0,\n        3,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        0,\n        0,\n        0,\n        0,\n        0\n    ], I = [\n        0,\n        1,\n        2,\n        3,\n        4,\n        5,\n        6,\n        7,\n        8,\n        9,\n        10,\n        11\n    ], F = [\n        0,\n        0,\n        2,\n        1,\n        2,\n        4,\n        4,\n        3,\n        4,\n        7,\n        5,\n        4,\n        4,\n        0,\n        1,\n        2,\n        119\n    ], C = [\n        0,\n        1,\n        2,\n        3,\n        17,\n        4,\n        5,\n        33,\n        49,\n        6,\n        18,\n        65,\n        81,\n        7,\n        97,\n        113,\n        19,\n        34,\n        50,\n        129,\n        8,\n        20,\n        66,\n        145,\n        161,\n        177,\n        193,\n        9,\n        35,\n        51,\n        82,\n        240,\n        21,\n        98,\n        114,\n        209,\n        10,\n        22,\n        36,\n        52,\n        225,\n        37,\n        241,\n        23,\n        24,\n        25,\n        26,\n        38,\n        39,\n        40,\n        41,\n        42,\n        53,\n        54,\n        55,\n        56,\n        57,\n        58,\n        67,\n        68,\n        69,\n        70,\n        71,\n        72,\n        73,\n        74,\n        83,\n        84,\n        85,\n        86,\n        87,\n        88,\n        89,\n        90,\n        99,\n        100,\n        101,\n        102,\n        103,\n        104,\n        105,\n        106,\n        115,\n        116,\n        117,\n        118,\n        119,\n        120,\n        121,\n        122,\n        130,\n        131,\n        132,\n        133,\n        134,\n        135,\n        136,\n        137,\n        138,\n        146,\n        147,\n        148,\n        149,\n        150,\n        151,\n        152,\n        153,\n        154,\n        162,\n        163,\n        164,\n        165,\n        166,\n        167,\n        168,\n        169,\n        170,\n        178,\n        179,\n        180,\n        181,\n        182,\n        183,\n        184,\n        185,\n        186,\n        194,\n        195,\n        196,\n        197,\n        198,\n        199,\n        200,\n        201,\n        202,\n        210,\n        211,\n        212,\n        213,\n        214,\n        215,\n        216,\n        217,\n        218,\n        226,\n        227,\n        228,\n        229,\n        230,\n        231,\n        232,\n        233,\n        234,\n        242,\n        243,\n        244,\n        245,\n        246,\n        247,\n        248,\n        249,\n        250\n    ];\n    function j(t, e) {\n        for(var r = 0, n = 0, i = new Array, a = 1; a <= 16; a++){\n            for(var o = 1; o <= t[a]; o++)i[e[n]] = [], i[e[n]][0] = r, i[e[n]][1] = a, n++, r++;\n            r *= 2;\n        }\n        return i;\n    }\n    function O(t) {\n        for(var e = t[0], r = t[1] - 1; r >= 0;)e & 1 << r && (m |= 1 << v), r--, --v < 0 && (255 == m ? (B(255), B(0)) : B(m), v = 7, m = 0);\n    }\n    function B(t) {\n        g.push(t);\n    }\n    function M(t) {\n        B(t >> 8 & 255), B(255 & t);\n    }\n    function E(t, e, r, n, i) {\n        for(var a, o = i[0], s = i[240], c = function(t, e) {\n            var r, n, i, a, o, s, c, u, h, l, f = 0;\n            for(h = 0; h < 8; ++h){\n                r = t[f], n = t[f + 1], i = t[f + 2], a = t[f + 3], o = t[f + 4], s = t[f + 5], c = t[f + 6];\n                var p = r + (u = t[f + 7]), g = r - u, m = n + c, v = n - c, b = i + s, y = i - s, w = a + o, N = a - o, L = p + w, A = p - w, x = m + b, S = m - b;\n                t[f] = L + x, t[f + 4] = L - x;\n                var _ = .707106781 * (S + A);\n                t[f + 2] = A + _, t[f + 6] = A - _;\n                var P = .382683433 * ((L = N + y) - (S = v + g)), k = .5411961 * L + P, I = 1.306562965 * S + P, F = .707106781 * (x = y + v), C = g + F, j = g - F;\n                t[f + 5] = j + k, t[f + 3] = j - k, t[f + 1] = C + I, t[f + 7] = C - I, f += 8;\n            }\n            for(f = 0, h = 0; h < 8; ++h){\n                r = t[f], n = t[f + 8], i = t[f + 16], a = t[f + 24], o = t[f + 32], s = t[f + 40], c = t[f + 48];\n                var O = r + (u = t[f + 56]), B = r - u, M = n + c, E = n - c, q = i + s, D = i - s, R = a + o, T = a - o, U = O + R, z = O - R, H = M + q, W = M - q;\n                t[f] = U + H, t[f + 32] = U - H;\n                var V = .707106781 * (W + z);\n                t[f + 16] = z + V, t[f + 48] = z - V;\n                var G = .382683433 * ((U = T + D) - (W = E + B)), Y = .5411961 * U + G, J = 1.306562965 * W + G, X = .707106781 * (H = D + E), K = B + X, Z = B - X;\n                t[f + 40] = Z + Y, t[f + 24] = Z - Y, t[f + 8] = K + J, t[f + 56] = K - J, f++;\n            }\n            for(h = 0; h < 64; ++h)l = t[h] * e[h], d[h] = l > 0 ? l + .5 | 0 : l - .5 | 0;\n            return d;\n        }(t, e), u = 0; u < 64; ++u)p[A[u]] = c[u];\n        var h = p[0] - r;\n        r = p[0], 0 == h ? O(n[0]) : (O(n[f[a = 32767 + h]]), O(l[a]));\n        for(var g = 63; g > 0 && 0 == p[g];)g--;\n        if (0 == g) return O(o), r;\n        for(var m, v = 1; v <= g;){\n            for(var b = v; 0 == p[v] && v <= g;)++v;\n            var y = v - b;\n            if (y >= 16) {\n                m = y >> 4;\n                for(var w = 1; w <= m; ++w)O(s);\n                y &= 15;\n            }\n            a = 32767 + p[v], O(i[(y << 4) + f[a]]), O(l[a]), v++;\n        }\n        return 63 != g && O(o), r;\n    }\n    function q(t) {\n        (t = Math.min(Math.max(t, 1), 100), a != t) && (!function(t) {\n            for(var e = [\n                16,\n                11,\n                10,\n                16,\n                24,\n                40,\n                51,\n                61,\n                12,\n                12,\n                14,\n                19,\n                26,\n                58,\n                60,\n                55,\n                14,\n                13,\n                16,\n                24,\n                40,\n                57,\n                69,\n                56,\n                14,\n                17,\n                22,\n                29,\n                51,\n                87,\n                80,\n                62,\n                18,\n                22,\n                37,\n                56,\n                68,\n                109,\n                103,\n                77,\n                24,\n                35,\n                55,\n                64,\n                81,\n                104,\n                113,\n                92,\n                49,\n                64,\n                78,\n                87,\n                103,\n                121,\n                120,\n                101,\n                72,\n                92,\n                95,\n                98,\n                112,\n                100,\n                103,\n                99\n            ], r = 0; r < 64; r++){\n                var n = o((e[r] * t + 50) / 100);\n                n = Math.min(Math.max(n, 1), 255), s[A[r]] = n;\n            }\n            for(var i = [\n                17,\n                18,\n                24,\n                47,\n                99,\n                99,\n                99,\n                99,\n                18,\n                21,\n                26,\n                66,\n                99,\n                99,\n                99,\n                99,\n                24,\n                26,\n                56,\n                99,\n                99,\n                99,\n                99,\n                99,\n                47,\n                66,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99\n            ], a = 0; a < 64; a++){\n                var l = o((i[a] * t + 50) / 100);\n                l = Math.min(Math.max(l, 1), 255), c[A[a]] = l;\n            }\n            for(var f = [\n                1,\n                1.387039845,\n                1.306562965,\n                1.175875602,\n                1,\n                .785694958,\n                .5411961,\n                .275899379\n            ], d = 0, p = 0; p < 8; p++)for(var g = 0; g < 8; g++)u[d] = 1 / (s[A[d]] * f[p] * f[g] * 8), h[d] = 1 / (c[A[d]] * f[p] * f[g] * 8), d++;\n        }(t < 50 ? Math.floor(5e3 / t) : Math.floor(200 - 2 * t)), a = t);\n    }\n    this.encode = function(t, a) {\n        a && q(a), g = new Array, m = 0, v = 7, M(65496), M(65504), M(16), B(74), B(70), B(73), B(70), B(0), B(1), B(1), B(0), M(1), M(1), B(0), B(0), function() {\n            M(65499), M(132), B(0);\n            for(var t = 0; t < 64; t++)B(s[t]);\n            B(1);\n            for(var e = 0; e < 64; e++)B(c[e]);\n        }(), function(t, e) {\n            M(65472), M(17), B(8), M(e), M(t), B(3), B(1), B(17), B(0), B(2), B(17), B(1), B(3), B(17), B(1);\n        }(t.width, t.height), function() {\n            M(65476), M(418), B(0);\n            for(var t = 0; t < 16; t++)B(x[t + 1]);\n            for(var e = 0; e <= 11; e++)B(S[e]);\n            B(16);\n            for(var r = 0; r < 16; r++)B(_[r + 1]);\n            for(var n = 0; n <= 161; n++)B(P[n]);\n            B(1);\n            for(var i = 0; i < 16; i++)B(k[i + 1]);\n            for(var a = 0; a <= 11; a++)B(I[a]);\n            B(17);\n            for(var o = 0; o < 16; o++)B(F[o + 1]);\n            for(var s = 0; s <= 161; s++)B(C[s]);\n        }(), M(65498), M(12), B(3), B(1), B(0), B(2), B(17), B(3), B(17), B(0), B(63), B(0);\n        var o = 0, l = 0, f = 0;\n        m = 0, v = 7, this.encode.displayName = \"_encode_\";\n        for(var d, p, N, A, j, D, R, T, U, z = t.data, H = t.width, W = t.height, V = 4 * H, G = 0; G < W;){\n            for(d = 0; d < V;){\n                for(j = V * G + d, R = -1, T = 0, U = 0; U < 64; U++)D = j + (T = U >> 3) * V + (R = 4 * (7 & U)), G + T >= W && (D -= V * (G + 1 + T - W)), d + R >= V && (D -= d + R - V + 4), p = z[D++], N = z[D++], A = z[D++], b[U] = (L[p] + L[N + 256 >> 0] + L[A + 512 >> 0] >> 16) - 128, y[U] = (L[p + 768 >> 0] + L[N + 1024 >> 0] + L[A + 1280 >> 0] >> 16) - 128, w[U] = (L[p + 1280 >> 0] + L[N + 1536 >> 0] + L[A + 1792 >> 0] >> 16) - 128;\n                o = E(b, u, o, e, n), l = E(y, h, l, r, i), f = E(w, h, f, r, i), d += 32;\n            }\n            G += 8;\n        }\n        if (v >= 0) {\n            var Y = [];\n            Y[1] = v + 1, Y[0] = (1 << v + 1) - 1, O(Y);\n        }\n        return M(65497), new Uint8Array(g);\n    }, t = t || 50, function() {\n        for(var t = String.fromCharCode, e = 0; e < 256; e++)N[e] = t(e);\n    }(), e = j(x, S), r = j(k, I), n = j(_, P), i = j(F, C), function() {\n        for(var t = 1, e = 2, r = 1; r <= 15; r++){\n            for(var n = t; n < e; n++)f[32767 + n] = r, l[32767 + n] = [], l[32767 + n][1] = r, l[32767 + n][0] = n;\n            for(var i = -(e - 1); i <= -t; i++)f[32767 + i] = r, l[32767 + i] = [], l[32767 + i][1] = r, l[32767 + i][0] = e - 1 + i;\n            t <<= 1, e <<= 1;\n        }\n    }(), function() {\n        for(var t = 0; t < 256; t++)L[t] = 19595 * t, L[t + 256 >> 0] = 38470 * t, L[t + 512 >> 0] = 7471 * t + 32768, L[t + 768 >> 0] = -11059 * t, L[t + 1024 >> 0] = -21709 * t, L[t + 1280 >> 0] = 32768 * t + 8421375, L[t + 1536 >> 0] = -27439 * t, L[t + 1792 >> 0] = -5329 * t;\n    }(), q(t);\n}\n_c18 = Qt;\n/**\n * @license\n * Copyright (c) 2017 Aras Abbasi\n *\n * Licensed under the MIT License.\n * http://opensource.org/licenses/mit-license\n */ function te(t, e) {\n    if (this.pos = 0, this.buffer = t, this.datav = new DataView(t.buffer), this.is_with_alpha = !!e, this.bottom_up = !0, this.flag = String.fromCharCode(this.buffer[0]) + String.fromCharCode(this.buffer[1]), this.pos += 2, -1 === [\n        \"BM\",\n        \"BA\",\n        \"CI\",\n        \"CP\",\n        \"IC\",\n        \"PT\"\n    ].indexOf(this.flag)) throw new Error(\"Invalid BMP File\");\n    this.parseHeader(), this.parseBGR();\n}\nfunction ee(t) {\n    function e(t) {\n        if (!t) throw Error(\"assert :P\");\n    }\n    function r(t, e, r) {\n        for(var n = 0; 4 > n; n++)if (t[e + n] != r.charCodeAt(n)) return !0;\n        return !1;\n    }\n    function n(t, e, r, n, i) {\n        for(var a = 0; a < i; a++)t[e + a] = r[n + a];\n    }\n    function i(t, e, r, n) {\n        for(var i = 0; i < n; i++)t[e + i] = r;\n    }\n    function a(t) {\n        return new Int32Array(t);\n    }\n    function o(t, e) {\n        for(var r = [], n = 0; n < t; n++)r.push(new e);\n        return r;\n    }\n    function s(t, e) {\n        var r = [];\n        return function t(r, n, i) {\n            for(var a = i[n], o = 0; o < a && (r.push(i.length > n + 1 ? [] : new e), !(i.length < n + 1)); o++)t(r[o], n + 1, i);\n        }(r, 0, t), r;\n    }\n    var c = function() {\n        var t = this;\n        function c(t, e) {\n            for(var r = 1 << e - 1 >>> 0; t & r;)r >>>= 1;\n            return r ? (t & r - 1) + r : t;\n        }\n        function u(t, r, n, i, a) {\n            e(!(i % n));\n            do {\n                t[r + (i -= n)] = a;\n            }while (0 < i);\n        }\n        function h(t, r, n, i, o) {\n            if (e(2328 >= o), 512 >= o) var s = a(512);\n            else if (null == (s = a(o))) return 0;\n            return function(t, r, n, i, o, s) {\n                var h, f, d = r, p = 1 << n, g = a(16), m = a(16);\n                for(e(0 != o), e(null != i), e(null != t), e(0 < n), f = 0; f < o; ++f){\n                    if (15 < i[f]) return 0;\n                    ++g[i[f]];\n                }\n                if (g[0] == o) return 0;\n                for(m[1] = 0, h = 1; 15 > h; ++h){\n                    if (g[h] > 1 << h) return 0;\n                    m[h + 1] = m[h] + g[h];\n                }\n                for(f = 0; f < o; ++f)h = i[f], 0 < i[f] && (s[m[h]++] = f);\n                if (1 == m[15]) return (i = new l).g = 0, i.value = s[0], u(t, d, 1, p, i), p;\n                var v, b = -1, y = p - 1, w = 0, N = 1, L = 1, A = 1 << n;\n                for(f = 0, h = 1, o = 2; h <= n; ++h, o <<= 1){\n                    if (N += L <<= 1, 0 > (L -= g[h])) return 0;\n                    for(; 0 < g[h]; --g[h])(i = new l).g = h, i.value = s[f++], u(t, d + w, o, A, i), w = c(w, h);\n                }\n                for(h = n + 1, o = 2; 15 >= h; ++h, o <<= 1){\n                    if (N += L <<= 1, 0 > (L -= g[h])) return 0;\n                    for(; 0 < g[h]; --g[h]){\n                        if (i = new l, (w & y) != b) {\n                            for(d += A, v = 1 << (b = h) - n; 15 > b && !(0 >= (v -= g[b]));)++b, v <<= 1;\n                            p += A = 1 << (v = b - n), t[r + (b = w & y)].g = v + n, t[r + b].value = d - r - b;\n                        }\n                        i.g = h - n, i.value = s[f++], u(t, d + (w >> n), o, A, i), w = c(w, h);\n                    }\n                }\n                return N != 2 * m[15] - 1 ? 0 : p;\n            }(t, r, n, i, o, s);\n        }\n        function l() {\n            this.value = this.g = 0;\n        }\n        function f() {\n            this.value = this.g = 0;\n        }\n        function d() {\n            this.G = o(5, l), this.H = a(5), this.jc = this.Qb = this.qb = this.nd = 0, this.pd = o(Dr, f);\n        }\n        function p(t, r, n, i) {\n            e(null != t), e(null != r), e(2147483648 > i), t.Ca = 254, t.I = 0, t.b = -8, t.Ka = 0, t.oa = r, t.pa = n, t.Jd = r, t.Yc = n + i, t.Zc = 4 <= i ? n + i - 4 + 1 : n, _(t);\n        }\n        function g(t, e) {\n            for(var r = 0; 0 < e--;)r |= k(t, 128) << e;\n            return r;\n        }\n        function m(t, e) {\n            var r = g(t, e);\n            return P(t) ? -r : r;\n        }\n        function v(t, r, n, i) {\n            var a, o = 0;\n            for(e(null != t), e(null != r), e(4294967288 > i), t.Sb = i, t.Ra = 0, t.u = 0, t.h = 0, 4 < i && (i = 4), a = 0; a < i; ++a)o += r[n + a] << 8 * a;\n            t.Ra = o, t.bb = i, t.oa = r, t.pa = n;\n        }\n        function b(t) {\n            for(; 8 <= t.u && t.bb < t.Sb;)t.Ra >>>= 8, t.Ra += t.oa[t.pa + t.bb] << Ur - 8 >>> 0, ++t.bb, t.u -= 8;\n            A(t) && (t.h = 1, t.u = 0);\n        }\n        function y(t, r) {\n            if (e(0 <= r), !t.h && r <= Tr) {\n                var n = L(t) & Rr[r];\n                return t.u += r, b(t), n;\n            }\n            return t.h = 1, t.u = 0;\n        }\n        function w() {\n            this.b = this.Ca = this.I = 0, this.oa = [], this.pa = 0, this.Jd = [], this.Yc = 0, this.Zc = [], this.Ka = 0;\n        }\n        function N() {\n            this.Ra = 0, this.oa = [], this.h = this.u = this.bb = this.Sb = this.pa = 0;\n        }\n        function L(t) {\n            return t.Ra >>> (t.u & Ur - 1) >>> 0;\n        }\n        function A(t) {\n            return e(t.bb <= t.Sb), t.h || t.bb == t.Sb && t.u > Ur;\n        }\n        function x(t, e) {\n            t.u = e, t.h = A(t);\n        }\n        function S(t) {\n            t.u >= zr && (e(t.u >= zr), b(t));\n        }\n        function _(t) {\n            e(null != t && null != t.oa), t.pa < t.Zc ? (t.I = (t.oa[t.pa++] | t.I << 8) >>> 0, t.b += 8) : (e(null != t && null != t.oa), t.pa < t.Yc ? (t.b += 8, t.I = t.oa[t.pa++] | t.I << 8) : t.Ka ? t.b = 0 : (t.I <<= 8, t.b += 8, t.Ka = 1));\n        }\n        function P(t) {\n            return g(t, 1);\n        }\n        function k(t, e) {\n            var r = t.Ca;\n            0 > t.b && _(t);\n            var n = t.b, i = r * e >>> 8, a = (t.I >>> n > i) + 0;\n            for(a ? (r -= i, t.I -= i + 1 << n >>> 0) : r = i + 1, n = r, i = 0; 256 <= n;)i += 8, n >>= 8;\n            return n = 7 ^ i + Hr[n], t.b -= n, t.Ca = (r << n) - 1, a;\n        }\n        function I(t, e, r) {\n            t[e + 0] = r >> 24 & 255, t[e + 1] = r >> 16 & 255, t[e + 2] = r >> 8 & 255, t[e + 3] = r >> 0 & 255;\n        }\n        function F(t, e) {\n            return t[e + 0] << 0 | t[e + 1] << 8;\n        }\n        function C(t, e) {\n            return F(t, e) | t[e + 2] << 16;\n        }\n        function j(t, e) {\n            return F(t, e) | F(t, e + 2) << 16;\n        }\n        function O(t, r) {\n            var n = 1 << r;\n            return e(null != t), e(0 < r), t.X = a(n), null == t.X ? 0 : (t.Mb = 32 - r, t.Xa = r, 1);\n        }\n        function B(t, r) {\n            e(null != t), e(null != r), e(t.Xa == r.Xa), n(r.X, 0, t.X, 0, 1 << r.Xa);\n        }\n        function M() {\n            this.X = [], this.Xa = this.Mb = 0;\n        }\n        function E(t, r, n, i) {\n            e(null != n), e(null != i);\n            var a = n[0], o = i[0];\n            return 0 == a && (a = (t * o + r / 2) / r), 0 == o && (o = (r * a + t / 2) / t), 0 >= a || 0 >= o ? 0 : (n[0] = a, i[0] = o, 1);\n        }\n        function q(t, e) {\n            return t + (1 << e) - 1 >>> e;\n        }\n        function D(t, e) {\n            return ((4278255360 & t) + (4278255360 & e) >>> 0 & 4278255360) + ((16711935 & t) + (16711935 & e) >>> 0 & 16711935) >>> 0;\n        }\n        function R(e, r) {\n            t[r] = function(r, n, i, a, o, s, c) {\n                var u;\n                for(u = 0; u < o; ++u){\n                    var h = t[e](s[c + u - 1], i, a + u);\n                    s[c + u] = D(r[n + u], h);\n                }\n            };\n        }\n        function T() {\n            this.ud = this.hd = this.jd = 0;\n        }\n        function U(t, e) {\n            return ((4278124286 & (t ^ e)) >>> 1) + (t & e) >>> 0;\n        }\n        function z(t) {\n            return 0 <= t && 256 > t ? t : 0 > t ? 0 : 255 < t ? 255 : void 0;\n        }\n        function H(t, e) {\n            return z(t + (t - e + .5 >> 1));\n        }\n        function W(t, e, r) {\n            return Math.abs(e - r) - Math.abs(t - r);\n        }\n        function V(t, e, r, n, i, a, o) {\n            for(n = a[o - 1], r = 0; r < i; ++r)a[o + r] = n = D(t[e + r], n);\n        }\n        function G(t, e, r, n, i) {\n            var a;\n            for(a = 0; a < r; ++a){\n                var o = t[e + a], s = o >> 8 & 255, c = 16711935 & (c = (c = 16711935 & o) + ((s << 16) + s));\n                n[i + a] = (4278255360 & o) + c >>> 0;\n            }\n        }\n        function Y(t, e) {\n            e.jd = t >> 0 & 255, e.hd = t >> 8 & 255, e.ud = t >> 16 & 255;\n        }\n        function J(t, e, r, n, i, a) {\n            var o;\n            for(o = 0; o < n; ++o){\n                var s = e[r + o], c = s >>> 8, u = s, h = 255 & (h = (h = s >>> 16) + ((t.jd << 24 >> 24) * (c << 24 >> 24) >>> 5));\n                u = 255 & (u = (u = u + ((t.hd << 24 >> 24) * (c << 24 >> 24) >>> 5)) + ((t.ud << 24 >> 24) * (h << 24 >> 24) >>> 5));\n                i[a + o] = (4278255360 & s) + (h << 16) + u;\n            }\n        }\n        function X(e, r, n, i, a) {\n            t[r] = function(t, e, r, n, o, s, c, u, h) {\n                for(n = c; n < u; ++n)for(c = 0; c < h; ++c)o[s++] = a(r[i(t[e++])]);\n            }, t[e] = function(e, r, o, s, c, u, h) {\n                var l = 8 >> e.b, f = e.Ea, d = e.K[0], p = e.w;\n                if (8 > l) for(e = (1 << e.b) - 1, p = (1 << l) - 1; r < o; ++r){\n                    var g, m = 0;\n                    for(g = 0; g < f; ++g)g & e || (m = i(s[c++])), u[h++] = a(d[m & p]), m >>= l;\n                }\n                else t[\"VP8LMapColor\" + n](s, c, d, p, u, h, r, o, f);\n            };\n        }\n        function K(t, e, r, n, i) {\n            for(r = e + r; e < r;){\n                var a = t[e++];\n                n[i++] = a >> 16 & 255, n[i++] = a >> 8 & 255, n[i++] = a >> 0 & 255;\n            }\n        }\n        function Z(t, e, r, n, i) {\n            for(r = e + r; e < r;){\n                var a = t[e++];\n                n[i++] = a >> 16 & 255, n[i++] = a >> 8 & 255, n[i++] = a >> 0 & 255, n[i++] = a >> 24 & 255;\n            }\n        }\n        function $(t, e, r, n, i) {\n            for(r = e + r; e < r;){\n                var a = (o = t[e++]) >> 16 & 240 | o >> 12 & 15, o = o >> 0 & 240 | o >> 28 & 15;\n                n[i++] = a, n[i++] = o;\n            }\n        }\n        function Q(t, e, r, n, i) {\n            for(r = e + r; e < r;){\n                var a = (o = t[e++]) >> 16 & 248 | o >> 13 & 7, o = o >> 5 & 224 | o >> 3 & 31;\n                n[i++] = a, n[i++] = o;\n            }\n        }\n        function tt(t, e, r, n, i) {\n            for(r = e + r; e < r;){\n                var a = t[e++];\n                n[i++] = a >> 0 & 255, n[i++] = a >> 8 & 255, n[i++] = a >> 16 & 255;\n            }\n        }\n        function et(t, e, r, i, a, o) {\n            if (0 == o) for(r = e + r; e < r;)I(i, ((o = t[e++])[0] >> 24 | o[1] >> 8 & 65280 | o[2] << 8 & 16711680 | o[3] << 24) >>> 0), a += 32;\n            else n(i, a, t, e, r);\n        }\n        function rt(e, r) {\n            t[r][0] = t[e + \"0\"], t[r][1] = t[e + \"1\"], t[r][2] = t[e + \"2\"], t[r][3] = t[e + \"3\"], t[r][4] = t[e + \"4\"], t[r][5] = t[e + \"5\"], t[r][6] = t[e + \"6\"], t[r][7] = t[e + \"7\"], t[r][8] = t[e + \"8\"], t[r][9] = t[e + \"9\"], t[r][10] = t[e + \"10\"], t[r][11] = t[e + \"11\"], t[r][12] = t[e + \"12\"], t[r][13] = t[e + \"13\"], t[r][14] = t[e + \"0\"], t[r][15] = t[e + \"0\"];\n        }\n        function nt(t) {\n            return t == Hn || t == Wn || t == Vn || t == Gn;\n        }\n        function it() {\n            this.eb = [], this.size = this.A = this.fb = 0;\n        }\n        function at() {\n            this.y = [], this.f = [], this.ea = [], this.F = [], this.Tc = this.Ed = this.Cd = this.Fd = this.lb = this.Db = this.Ab = this.fa = this.J = this.W = this.N = this.O = 0;\n        }\n        function ot() {\n            this.Rd = this.height = this.width = this.S = 0, this.f = {}, this.f.RGBA = new it, this.f.kb = new at, this.sd = null;\n        }\n        function st() {\n            this.width = [\n                0\n            ], this.height = [\n                0\n            ], this.Pd = [\n                0\n            ], this.Qd = [\n                0\n            ], this.format = [\n                0\n            ];\n        }\n        function ct() {\n            this.Id = this.fd = this.Md = this.hb = this.ib = this.da = this.bd = this.cd = this.j = this.v = this.Da = this.Sd = this.ob = 0;\n        }\n        function ut(t) {\n            return alert(\"todo:WebPSamplerProcessPlane\"), t.T;\n        }\n        function ht(t, e) {\n            var r = t.T, i = e.ba.f.RGBA, a = i.eb, o = i.fb + t.ka * i.A, s = vi[e.ba.S], c = t.y, u = t.O, h = t.f, l = t.N, f = t.ea, d = t.W, p = e.cc, g = e.dc, m = e.Mc, v = e.Nc, b = t.ka, y = t.ka + t.T, w = t.U, N = w + 1 >> 1;\n            for(0 == b ? s(c, u, null, null, h, l, f, d, h, l, f, d, a, o, null, null, w) : (s(e.ec, e.fc, c, u, p, g, m, v, h, l, f, d, a, o - i.A, a, o, w), ++r); b + 2 < y; b += 2)p = h, g = l, m = f, v = d, l += t.Rc, d += t.Rc, o += 2 * i.A, s(c, (u += 2 * t.fa) - t.fa, c, u, p, g, m, v, h, l, f, d, a, o - i.A, a, o, w);\n            return u += t.fa, t.j + y < t.o ? (n(e.ec, e.fc, c, u, w), n(e.cc, e.dc, h, l, N), n(e.Mc, e.Nc, f, d, N), r--) : 1 & y || s(c, u, null, null, h, l, f, d, h, l, f, d, a, o + i.A, null, null, w), r;\n        }\n        function lt(t, r, n) {\n            var i = t.F, a = [\n                t.J\n            ];\n            if (null != i) {\n                var o = t.U, s = r.ba.S, c = s == Tn || s == Vn;\n                r = r.ba.f.RGBA;\n                var u = [\n                    0\n                ], h = t.ka;\n                u[0] = t.T, t.Kb && (0 == h ? --u[0] : (--h, a[0] -= t.width), t.j + t.ka + t.T == t.o && (u[0] = t.o - t.j - h));\n                var l = r.eb;\n                h = r.fb + h * r.A;\n                t = Sn(i, a[0], t.width, o, u, l, h + (c ? 0 : 3), r.A), e(n == u), t && nt(s) && An(l, h, c, o, u, r.A);\n            }\n            return 0;\n        }\n        function ft(t) {\n            var e = t.ma, r = e.ba.S, n = 11 > r, i = r == qn || r == Rn || r == Tn || r == Un || 12 == r || nt(r);\n            if (e.memory = null, e.Ib = null, e.Jb = null, e.Nd = null, !Mr(e.Oa, t, i ? 11 : 12)) return 0;\n            if (i && nt(r) && br(), t.da) alert(\"todo:use_scaling\");\n            else {\n                if (n) {\n                    if (e.Ib = ut, t.Kb) {\n                        if (r = t.U + 1 >> 1, e.memory = a(t.U + 2 * r), null == e.memory) return 0;\n                        e.ec = e.memory, e.fc = 0, e.cc = e.ec, e.dc = e.fc + t.U, e.Mc = e.cc, e.Nc = e.dc + r, e.Ib = ht, br();\n                    }\n                } else alert(\"todo:EmitYUV\");\n                i && (e.Jb = lt, n && mr());\n            }\n            if (n && !Ci) {\n                for(t = 0; 256 > t; ++t)ji[t] = 89858 * (t - 128) + _i >> Si, Mi[t] = -22014 * (t - 128) + _i, Bi[t] = -45773 * (t - 128), Oi[t] = 113618 * (t - 128) + _i >> Si;\n                for(t = Pi; t < ki; ++t)e = 76283 * (t - 16) + _i >> Si, Ei[t - Pi] = Vt(e, 255), qi[t - Pi] = Vt(e + 8 >> 4, 15);\n                Ci = 1;\n            }\n            return 1;\n        }\n        function dt(t) {\n            var r = t.ma, n = t.U, i = t.T;\n            return e(!(1 & t.ka)), 0 >= n || 0 >= i ? 0 : (n = r.Ib(t, r), null != r.Jb && r.Jb(t, r, n), r.Dc += n, 1);\n        }\n        function pt(t) {\n            t.ma.memory = null;\n        }\n        function gt(t, e, r, n) {\n            return 47 != y(t, 8) ? 0 : (e[0] = y(t, 14) + 1, r[0] = y(t, 14) + 1, n[0] = y(t, 1), 0 != y(t, 3) ? 0 : !t.h);\n        }\n        function mt(t, e) {\n            if (4 > t) return t + 1;\n            var r = t - 2 >> 1;\n            return (2 + (1 & t) << r) + y(e, r) + 1;\n        }\n        function vt(t, e) {\n            return 120 < e ? e - 120 : 1 <= (r = ((r = $n[e - 1]) >> 4) * t + (8 - (15 & r))) ? r : 1;\n            var r;\n        }\n        function bt(t, e, r) {\n            var n = L(r), i = t[e += 255 & n].g - 8;\n            return 0 < i && (x(r, r.u + 8), n = L(r), e += t[e].value, e += n & (1 << i) - 1), x(r, r.u + t[e].g), t[e].value;\n        }\n        function yt(t, r, n) {\n            return n.g += t.g, n.value += t.value << r >>> 0, e(8 >= n.g), t.g;\n        }\n        function wt(t, r, n) {\n            var i = t.xc;\n            return e((r = 0 == i ? 0 : t.vc[t.md * (n >> i) + (r >> i)]) < t.Wb), t.Ya[r];\n        }\n        function Nt(t, r, i, a) {\n            var o = t.ab, s = t.c * r, c = t.C;\n            r = c + r;\n            var u = i, h = a;\n            for(a = t.Ta, i = t.Ua; 0 < o--;){\n                var l = t.gc[o], f = c, d = r, p = u, g = h, m = (h = a, u = i, l.Ea);\n                switch(e(f < d), e(d <= l.nc), l.hc){\n                    case 2:\n                        Gr(p, g, (d - f) * m, h, u);\n                        break;\n                    case 0:\n                        var v = f, b = d, y = h, w = u, N = (_ = l).Ea;\n                        0 == v && (Wr(p, g, null, null, 1, y, w), V(p, g + 1, 0, 0, N - 1, y, w + 1), g += N, w += N, ++v);\n                        for(var L = 1 << _.b, A = L - 1, x = q(N, _.b), S = _.K, _ = _.w + (v >> _.b) * x; v < b;){\n                            var P = S, k = _, I = 1;\n                            for(Vr(p, g, y, w - N, 1, y, w); I < N;){\n                                var F = (I & ~A) + L;\n                                F > N && (F = N), (0, Zr[P[k++] >> 8 & 15])(p, g + +I, y, w + I - N, F - I, y, w + I), I = F;\n                            }\n                            g += N, w += N, ++v & A || (_ += x);\n                        }\n                        d != l.nc && n(h, u - m, h, u + (d - f - 1) * m, m);\n                        break;\n                    case 1:\n                        for(m = p, b = g, N = (p = l.Ea) - (w = p & ~(y = (g = 1 << l.b) - 1)), v = q(p, l.b), L = l.K, l = l.w + (f >> l.b) * v; f < d;){\n                            for(A = L, x = l, S = new T, _ = b + w, P = b + p; b < _;)Y(A[x++], S), $r(S, m, b, g, h, u), b += g, u += g;\n                            b < P && (Y(A[x++], S), $r(S, m, b, N, h, u), b += N, u += N), ++f & y || (l += v);\n                        }\n                        break;\n                    case 3:\n                        if (p == h && g == u && 0 < l.b) {\n                            for(b = h, p = m = u + (d - f) * m - (w = (d - f) * q(l.Ea, l.b)), g = h, y = u, v = [], w = (N = w) - 1; 0 <= w; --w)v[w] = g[y + w];\n                            for(w = N - 1; 0 <= w; --w)b[p + w] = v[w];\n                            Yr(l, f, d, h, m, h, u);\n                        } else Yr(l, f, d, p, g, h, u);\n                }\n                u = a, h = i;\n            }\n            h != i && n(a, i, u, h, s);\n        }\n        function Lt(t, r) {\n            var n = t.V, i = t.Ba + t.c * t.C, a = r - t.C;\n            if (e(r <= t.l.o), e(16 >= a), 0 < a) {\n                var o = t.l, s = t.Ta, c = t.Ua, u = o.width;\n                if (Nt(t, a, n, i), a = c = [\n                    c\n                ], e((n = t.C) < (i = r)), e(o.v < o.va), i > o.o && (i = o.o), n < o.j) {\n                    var h = o.j - n;\n                    n = o.j;\n                    a[0] += h * u;\n                }\n                if (n >= i ? n = 0 : (a[0] += 4 * o.v, o.ka = n - o.j, o.U = o.va - o.v, o.T = i - n, n = 1), n) {\n                    if (c = c[0], 11 > (n = t.ca).S) {\n                        var l = n.f.RGBA, f = (i = n.S, a = o.U, o = o.T, h = l.eb, l.A), d = o;\n                        for(l = l.fb + t.Ma * l.A; 0 < d--;){\n                            var p = s, g = c, m = a, v = h, b = l;\n                            switch(i){\n                                case En:\n                                    Qr(p, g, m, v, b);\n                                    break;\n                                case qn:\n                                    tn(p, g, m, v, b);\n                                    break;\n                                case Hn:\n                                    tn(p, g, m, v, b), An(v, b, 0, m, 1, 0);\n                                    break;\n                                case Dn:\n                                    nn(p, g, m, v, b);\n                                    break;\n                                case Rn:\n                                    et(p, g, m, v, b, 1);\n                                    break;\n                                case Wn:\n                                    et(p, g, m, v, b, 1), An(v, b, 0, m, 1, 0);\n                                    break;\n                                case Tn:\n                                    et(p, g, m, v, b, 0);\n                                    break;\n                                case Vn:\n                                    et(p, g, m, v, b, 0), An(v, b, 1, m, 1, 0);\n                                    break;\n                                case Un:\n                                    en(p, g, m, v, b);\n                                    break;\n                                case Gn:\n                                    en(p, g, m, v, b), xn(v, b, m, 1, 0);\n                                    break;\n                                case zn:\n                                    rn(p, g, m, v, b);\n                                    break;\n                                default:\n                                    e(0);\n                            }\n                            c += u, l += f;\n                        }\n                        t.Ma += o;\n                    } else alert(\"todo:EmitRescaledRowsYUVA\");\n                    e(t.Ma <= n.height);\n                }\n            }\n            t.C = r, e(t.C <= t.i);\n        }\n        function At(t) {\n            var e;\n            if (0 < t.ua) return 0;\n            for(e = 0; e < t.Wb; ++e){\n                var r = t.Ya[e].G, n = t.Ya[e].H;\n                if (0 < r[1][n[1] + 0].g || 0 < r[2][n[2] + 0].g || 0 < r[3][n[3] + 0].g) return 0;\n            }\n            return 1;\n        }\n        function xt(t, r, n, i, a, o) {\n            if (0 != t.Z) {\n                var s = t.qd, c = t.rd;\n                for(e(null != mi[t.Z]); r < n; ++r)mi[t.Z](s, c, i, a, i, a, o), s = i, c = a, a += o;\n                t.qd = s, t.rd = c;\n            }\n        }\n        function St(t, r) {\n            var n = t.l.ma, i = 0 == n.Z || 1 == n.Z ? t.l.j : t.C;\n            i = t.C < i ? i : t.C;\n            if (e(r <= t.l.o), r > i) {\n                var a = t.l.width, o = n.ca, s = n.tb + a * i, c = t.V, u = t.Ba + t.c * i, h = t.gc;\n                e(1 == t.ab), e(3 == h[0].hc), Xr(h[0], i, r, c, u, o, s), xt(n, i, r, o, s, a);\n            }\n            t.C = t.Ma = r;\n        }\n        function _t(t, r, n, i, a, o, s) {\n            var c = t.$ / i, u = t.$ % i, h = t.m, l = t.s, f = n + t.$, d = f;\n            a = n + i * a;\n            var p = n + i * o, g = 280 + l.ua, m = t.Pb ? c : 16777216, v = 0 < l.ua ? l.Wa : null, b = l.wc, y = f < p ? wt(l, u, c) : null;\n            e(t.C < o), e(p <= a);\n            var w = !1;\n            t: for(;;){\n                for(; w || f < p;){\n                    var N = 0;\n                    if (c >= m) {\n                        var _ = f - n;\n                        e((m = t).Pb), m.wd = m.m, m.xd = _, 0 < m.s.ua && B(m.s.Wa, m.s.vb), m = c + ti;\n                    }\n                    if (u & b || (y = wt(l, u, c)), e(null != y), y.Qb && (r[f] = y.qb, w = !0), !w) if (S(h), y.jc) {\n                        N = h, _ = r;\n                        var P = f, k = y.pd[L(N) & Dr - 1];\n                        e(y.jc), 256 > k.g ? (x(N, N.u + k.g), _[P] = k.value, N = 0) : (x(N, N.u + k.g - 256), e(256 <= k.value), N = k.value), 0 == N && (w = !0);\n                    } else N = bt(y.G[0], y.H[0], h);\n                    if (h.h) break;\n                    if (w || 256 > N) {\n                        if (!w) if (y.nd) r[f] = (y.qb | N << 8) >>> 0;\n                        else {\n                            if (S(h), w = bt(y.G[1], y.H[1], h), S(h), _ = bt(y.G[2], y.H[2], h), P = bt(y.G[3], y.H[3], h), h.h) break;\n                            r[f] = (P << 24 | w << 16 | N << 8 | _) >>> 0;\n                        }\n                        if (w = !1, ++f, ++u >= i && (u = 0, ++c, null != s && c <= o && !(c % 16) && s(t, c), null != v)) for(; d < f;)N = r[d++], v.X[(506832829 * N & 4294967295) >>> v.Mb] = N;\n                    } else if (280 > N) {\n                        if (N = mt(N - 256, h), _ = bt(y.G[4], y.H[4], h), S(h), _ = vt(i, _ = mt(_, h)), h.h) break;\n                        if (f - n < _ || a - f < N) break t;\n                        for(P = 0; P < N; ++P)r[f + P] = r[f + P - _];\n                        for(f += N, u += N; u >= i;)u -= i, ++c, null != s && c <= o && !(c % 16) && s(t, c);\n                        if (e(f <= a), u & b && (y = wt(l, u, c)), null != v) for(; d < f;)N = r[d++], v.X[(506832829 * N & 4294967295) >>> v.Mb] = N;\n                    } else {\n                        if (!(N < g)) break t;\n                        for(w = N - 280, e(null != v); d < f;)N = r[d++], v.X[(506832829 * N & 4294967295) >>> v.Mb] = N;\n                        N = f, e(!(w >>> (_ = v).Xa)), r[N] = _.X[w], w = !0;\n                    }\n                    w || e(h.h == A(h));\n                }\n                if (t.Pb && h.h && f < a) e(t.m.h), t.a = 5, t.m = t.wd, t.$ = t.xd, 0 < t.s.ua && B(t.s.vb, t.s.Wa);\n                else {\n                    if (h.h) break t;\n                    null != s && s(t, c > o ? o : c), t.a = 0, t.$ = f - n;\n                }\n                return 1;\n            }\n            return t.a = 3, 0;\n        }\n        function Pt(t) {\n            e(null != t), t.vc = null, t.yc = null, t.Ya = null;\n            var r = t.Wa;\n            null != r && (r.X = null), t.vb = null, e(null != t);\n        }\n        function kt() {\n            var e = new or;\n            return null == e ? null : (e.a = 0, e.xb = gi, rt(\"Predictor\", \"VP8LPredictors\"), rt(\"Predictor\", \"VP8LPredictors_C\"), rt(\"PredictorAdd\", \"VP8LPredictorsAdd\"), rt(\"PredictorAdd\", \"VP8LPredictorsAdd_C\"), Gr = G, $r = J, Qr = K, tn = Z, en = $, rn = Q, nn = tt, t.VP8LMapColor32b = Jr, t.VP8LMapColor8b = Kr, e);\n        }\n        function It(t, r, n, s, c) {\n            var u = 1, f = [\n                t\n            ], p = [\n                r\n            ], g = s.m, m = s.s, v = null, b = 0;\n            t: for(;;){\n                if (n) for(; u && y(g, 1);){\n                    var w = f, N = p, A = s, _ = 1, P = A.m, k = A.gc[A.ab], I = y(P, 2);\n                    if (A.Oc & 1 << I) u = 0;\n                    else {\n                        switch(A.Oc |= 1 << I, k.hc = I, k.Ea = w[0], k.nc = N[0], k.K = [\n                            null\n                        ], ++A.ab, e(4 >= A.ab), I){\n                            case 0:\n                            case 1:\n                                k.b = y(P, 3) + 2, _ = It(q(k.Ea, k.b), q(k.nc, k.b), 0, A, k.K), k.K = k.K[0];\n                                break;\n                            case 3:\n                                var F, C = y(P, 8) + 1, j = 16 < C ? 0 : 4 < C ? 1 : 2 < C ? 2 : 3;\n                                if (w[0] = q(k.Ea, j), k.b = j, F = _ = It(C, 1, 0, A, k.K)) {\n                                    var B, M = C, E = k, R = 1 << (8 >> E.b), T = a(R);\n                                    if (null == T) F = 0;\n                                    else {\n                                        var U = E.K[0], z = E.w;\n                                        for(T[0] = E.K[0][0], B = 1; B < 1 * M; ++B)T[B] = D(U[z + B], T[B - 1]);\n                                        for(; B < 4 * R; ++B)T[B] = 0;\n                                        E.K[0] = null, E.K[0] = T, F = 1;\n                                    }\n                                }\n                                _ = F;\n                                break;\n                            case 2:\n                                break;\n                            default:\n                                e(0);\n                        }\n                        u = _;\n                    }\n                }\n                if (f = f[0], p = p[0], u && y(g, 1) && !(u = 1 <= (b = y(g, 4)) && 11 >= b)) {\n                    s.a = 3;\n                    break t;\n                }\n                var H;\n                if (H = u) e: {\n                    var W, V, G, Y = s, J = f, X = p, K = b, Z = n, $ = Y.m, Q = Y.s, tt = [\n                        null\n                    ], et = 1, rt = 0, nt = Qn[K];\n                    r: for(;;){\n                        if (Z && y($, 1)) {\n                            var it = y($, 3) + 2, at = q(J, it), ot = q(X, it), st = at * ot;\n                            if (!It(at, ot, 0, Y, tt)) break r;\n                            for(tt = tt[0], Q.xc = it, W = 0; W < st; ++W){\n                                var ct = tt[W] >> 8 & 65535;\n                                tt[W] = ct, ct >= et && (et = ct + 1);\n                            }\n                        }\n                        if ($.h) break r;\n                        for(V = 0; 5 > V; ++V){\n                            var ut = Xn[V];\n                            !V && 0 < K && (ut += 1 << K), rt < ut && (rt = ut);\n                        }\n                        var ht = o(et * nt, l), lt = et, ft = o(lt, d);\n                        if (null == ft) var dt = null;\n                        else e(65536 >= lt), dt = ft;\n                        var pt = a(rt);\n                        if (null == dt || null == pt || null == ht) {\n                            Y.a = 1;\n                            break r;\n                        }\n                        var gt = ht;\n                        for(W = G = 0; W < et; ++W){\n                            var mt = dt[W], vt = mt.G, bt = mt.H, wt = 0, Nt = 1, Lt = 0;\n                            for(V = 0; 5 > V; ++V){\n                                ut = Xn[V], vt[V] = gt, bt[V] = G, !V && 0 < K && (ut += 1 << K);\n                                n: {\n                                    var At, xt = ut, St = Y, kt = pt, Ft = gt, Ct = G, jt = 0, Ot = St.m, Bt = y(Ot, 1);\n                                    if (i(kt, 0, 0, xt), Bt) {\n                                        var Mt = y(Ot, 1) + 1, Et = y(Ot, 1), qt = y(Ot, 0 == Et ? 1 : 8);\n                                        kt[qt] = 1, 2 == Mt && (kt[qt = y(Ot, 8)] = 1);\n                                        var Dt = 1;\n                                    } else {\n                                        var Rt = a(19), Tt = y(Ot, 4) + 4;\n                                        if (19 < Tt) {\n                                            St.a = 3;\n                                            var Ut = 0;\n                                            break n;\n                                        }\n                                        for(At = 0; At < Tt; ++At)Rt[Zn[At]] = y(Ot, 3);\n                                        var zt = void 0, Ht = void 0, Wt = St, Vt = Rt, Gt = xt, Yt = kt, Jt = 0, Xt = Wt.m, Kt = 8, Zt = o(128, l);\n                                        i: for(; h(Zt, 0, 7, Vt, 19);){\n                                            if (y(Xt, 1)) {\n                                                var $t = 2 + 2 * y(Xt, 3);\n                                                if ((zt = 2 + y(Xt, $t)) > Gt) break i;\n                                            } else zt = Gt;\n                                            for(Ht = 0; Ht < Gt && zt--;){\n                                                S(Xt);\n                                                var Qt = Zt[0 + (127 & L(Xt))];\n                                                x(Xt, Xt.u + Qt.g);\n                                                var te = Qt.value;\n                                                if (16 > te) Yt[Ht++] = te, 0 != te && (Kt = te);\n                                                else {\n                                                    var ee = 16 == te, re = te - 16, ne = Jn[re], ie = y(Xt, Yn[re]) + ne;\n                                                    if (Ht + ie > Gt) break i;\n                                                    for(var ae = ee ? Kt : 0; 0 < ie--;)Yt[Ht++] = ae;\n                                                }\n                                            }\n                                            Jt = 1;\n                                            break i;\n                                        }\n                                        Jt || (Wt.a = 3), Dt = Jt;\n                                    }\n                                    (Dt = Dt && !Ot.h) && (jt = h(Ft, Ct, 8, kt, xt)), Dt && 0 != jt ? Ut = jt : (St.a = 3, Ut = 0);\n                                }\n                                if (0 == Ut) break r;\n                                if (Nt && 1 == Kn[V] && (Nt = 0 == gt[G].g), wt += gt[G].g, G += Ut, 3 >= V) {\n                                    var oe, se = pt[0];\n                                    for(oe = 1; oe < ut; ++oe)pt[oe] > se && (se = pt[oe]);\n                                    Lt += se;\n                                }\n                            }\n                            if (mt.nd = Nt, mt.Qb = 0, Nt && (mt.qb = (vt[3][bt[3] + 0].value << 24 | vt[1][bt[1] + 0].value << 16 | vt[2][bt[2] + 0].value) >>> 0, 0 == wt && 256 > vt[0][bt[0] + 0].value && (mt.Qb = 1, mt.qb += vt[0][bt[0] + 0].value << 8)), mt.jc = !mt.Qb && 6 > Lt, mt.jc) {\n                                var ce, ue = mt;\n                                for(ce = 0; ce < Dr; ++ce){\n                                    var he = ce, le = ue.pd[he], fe = ue.G[0][ue.H[0] + he];\n                                    256 <= fe.value ? (le.g = fe.g + 256, le.value = fe.value) : (le.g = 0, le.value = 0, he >>= yt(fe, 8, le), he >>= yt(ue.G[1][ue.H[1] + he], 16, le), he >>= yt(ue.G[2][ue.H[2] + he], 0, le), yt(ue.G[3][ue.H[3] + he], 24, le));\n                                }\n                            }\n                        }\n                        Q.vc = tt, Q.Wb = et, Q.Ya = dt, Q.yc = ht, H = 1;\n                        break e;\n                    }\n                    H = 0;\n                }\n                if (!(u = H)) {\n                    s.a = 3;\n                    break t;\n                }\n                if (0 < b) {\n                    if (m.ua = 1 << b, !O(m.Wa, b)) {\n                        s.a = 1, u = 0;\n                        break t;\n                    }\n                } else m.ua = 0;\n                var de = s, pe = f, ge = p, me = de.s, ve = me.xc;\n                if (de.c = pe, de.i = ge, me.md = q(pe, ve), me.wc = 0 == ve ? -1 : (1 << ve) - 1, n) {\n                    s.xb = pi;\n                    break t;\n                }\n                if (null == (v = a(f * p))) {\n                    s.a = 1, u = 0;\n                    break t;\n                }\n                u = (u = _t(s, v, 0, f, p, p, null)) && !g.h;\n                break t;\n            }\n            return u ? (null != c ? c[0] = v : (e(null == v), e(n)), s.$ = 0, n || Pt(m)) : Pt(m), u;\n        }\n        function Ft(t, r) {\n            var n = t.c * t.i, i = n + r + 16 * r;\n            return e(t.c <= r), t.V = a(i), null == t.V ? (t.Ta = null, t.Ua = 0, t.a = 1, 0) : (t.Ta = t.V, t.Ua = t.Ba + n + r, 1);\n        }\n        function Ct(t, r) {\n            var n = t.C, i = r - n, a = t.V, o = t.Ba + t.c * n;\n            for(e(r <= t.l.o); 0 < i;){\n                var s = 16 < i ? 16 : i, c = t.l.ma, u = t.l.width, h = u * s, l = c.ca, f = c.tb + u * n, d = t.Ta, p = t.Ua;\n                Nt(t, s, a, o), _n(d, p, l, f, h), xt(c, n, n + s, l, f, u), i -= s, a += s * t.c, n += s;\n            }\n            e(n == r), t.C = t.Ma = r;\n        }\n        function jt() {\n            this.ub = this.yd = this.td = this.Rb = 0;\n        }\n        function Ot() {\n            this.Kd = this.Ld = this.Ud = this.Td = this.i = this.c = 0;\n        }\n        function Bt() {\n            this.Fb = this.Bb = this.Cb = 0, this.Zb = a(4), this.Lb = a(4);\n        }\n        function Mt() {\n            this.Yb = function() {\n                var t = [];\n                return function t(e, r, n) {\n                    for(var i = n[r], a = 0; a < i && (e.push(n.length > r + 1 ? [] : 0), !(n.length < r + 1)); a++)t(e[a], r + 1, n);\n                }(t, 0, [\n                    3,\n                    11\n                ]), t;\n            }();\n        }\n        function Et() {\n            this.jb = a(3), this.Wc = s([\n                4,\n                8\n            ], Mt), this.Xc = s([\n                4,\n                17\n            ], Mt);\n        }\n        function qt() {\n            this.Pc = this.wb = this.Tb = this.zd = 0, this.vd = new a(4), this.od = new a(4);\n        }\n        function Dt() {\n            this.ld = this.La = this.dd = this.tc = 0;\n        }\n        function Rt() {\n            this.Na = this.la = 0;\n        }\n        function Tt() {\n            this.Sc = [\n                0,\n                0\n            ], this.Eb = [\n                0,\n                0\n            ], this.Qc = [\n                0,\n                0\n            ], this.ia = this.lc = 0;\n        }\n        function Ut() {\n            this.ad = a(384), this.Za = 0, this.Ob = a(16), this.$b = this.Ad = this.ia = this.Gc = this.Hc = this.Dd = 0;\n        }\n        function zt() {\n            this.uc = this.M = this.Nb = 0, this.wa = Array(new Dt), this.Y = 0, this.ya = Array(new Ut), this.aa = 0, this.l = new Gt;\n        }\n        function Ht() {\n            this.y = a(16), this.f = a(8), this.ea = a(8);\n        }\n        function Wt() {\n            this.cb = this.a = 0, this.sc = \"\", this.m = new w, this.Od = new jt, this.Kc = new Ot, this.ed = new qt, this.Qa = new Bt, this.Ic = this.$c = this.Aa = 0, this.D = new zt, this.Xb = this.Va = this.Hb = this.zb = this.yb = this.Ub = this.za = 0, this.Jc = o(8, w), this.ia = 0, this.pb = o(4, Tt), this.Pa = new Et, this.Bd = this.kc = 0, this.Ac = [], this.Bc = 0, this.zc = [\n                0,\n                0,\n                0,\n                0\n            ], this.Gd = Array(new Ht), this.Hd = 0, this.rb = Array(new Rt), this.sb = 0, this.wa = Array(new Dt), this.Y = 0, this.oc = [], this.pc = 0, this.sa = [], this.ta = 0, this.qa = [], this.ra = 0, this.Ha = [], this.B = this.R = this.Ia = 0, this.Ec = [], this.M = this.ja = this.Vb = this.Fc = 0, this.ya = Array(new Ut), this.L = this.aa = 0, this.gd = s([\n                4,\n                2\n            ], Dt), this.ga = null, this.Fa = [], this.Cc = this.qc = this.P = 0, this.Gb = [], this.Uc = 0, this.mb = [], this.nb = 0, this.rc = [], this.Ga = this.Vc = 0;\n        }\n        function Vt(t, e) {\n            return 0 > t ? 0 : t > e ? e : t;\n        }\n        function Gt() {\n            this.T = this.U = this.ka = this.height = this.width = 0, this.y = [], this.f = [], this.ea = [], this.Rc = this.fa = this.W = this.N = this.O = 0, this.ma = \"void\", this.put = \"VP8IoPutHook\", this.ac = \"VP8IoSetupHook\", this.bc = \"VP8IoTeardownHook\", this.ha = this.Kb = 0, this.data = [], this.hb = this.ib = this.da = this.o = this.j = this.va = this.v = this.Da = this.ob = this.w = 0, this.F = [], this.J = 0;\n        }\n        function Yt() {\n            var t = new Wt;\n            return null != t && (t.a = 0, t.sc = \"OK\", t.cb = 0, t.Xb = 0, ni || (ni = Zt)), t;\n        }\n        function Jt(t, e, r) {\n            return 0 == t.a && (t.a = e, t.sc = r, t.cb = 0), 0;\n        }\n        function Xt(t, e, r) {\n            return 3 <= r && 157 == t[e + 0] && 1 == t[e + 1] && 42 == t[e + 2];\n        }\n        function Kt(t, r) {\n            if (null == t) return 0;\n            if (t.a = 0, t.sc = \"OK\", null == r) return Jt(t, 2, \"null VP8Io passed to VP8GetHeaders()\");\n            var n = r.data, a = r.w, o = r.ha;\n            if (4 > o) return Jt(t, 7, \"Truncated header.\");\n            var s = n[a + 0] | n[a + 1] << 8 | n[a + 2] << 16, c = t.Od;\n            if (c.Rb = !(1 & s), c.td = s >> 1 & 7, c.yd = s >> 4 & 1, c.ub = s >> 5, 3 < c.td) return Jt(t, 3, \"Incorrect keyframe parameters.\");\n            if (!c.yd) return Jt(t, 4, \"Frame not displayable.\");\n            a += 3, o -= 3;\n            var u = t.Kc;\n            if (c.Rb) {\n                if (7 > o) return Jt(t, 7, \"cannot parse picture header\");\n                if (!Xt(n, a, o)) return Jt(t, 3, \"Bad code word\");\n                u.c = 16383 & (n[a + 4] << 8 | n[a + 3]), u.Td = n[a + 4] >> 6, u.i = 16383 & (n[a + 6] << 8 | n[a + 5]), u.Ud = n[a + 6] >> 6, a += 7, o -= 7, t.za = u.c + 15 >> 4, t.Ub = u.i + 15 >> 4, r.width = u.c, r.height = u.i, r.Da = 0, r.j = 0, r.v = 0, r.va = r.width, r.o = r.height, r.da = 0, r.ib = r.width, r.hb = r.height, r.U = r.width, r.T = r.height, i((s = t.Pa).jb, 0, 255, s.jb.length), e(null != (s = t.Qa)), s.Cb = 0, s.Bb = 0, s.Fb = 1, i(s.Zb, 0, 0, s.Zb.length), i(s.Lb, 0, 0, s.Lb);\n            }\n            if (c.ub > o) return Jt(t, 7, \"bad partition length\");\n            p(s = t.m, n, a, c.ub), a += c.ub, o -= c.ub, c.Rb && (u.Ld = P(s), u.Kd = P(s)), u = t.Qa;\n            var h, l = t.Pa;\n            if (e(null != s), e(null != u), u.Cb = P(s), u.Cb) {\n                if (u.Bb = P(s), P(s)) {\n                    for(u.Fb = P(s), h = 0; 4 > h; ++h)u.Zb[h] = P(s) ? m(s, 7) : 0;\n                    for(h = 0; 4 > h; ++h)u.Lb[h] = P(s) ? m(s, 6) : 0;\n                }\n                if (u.Bb) for(h = 0; 3 > h; ++h)l.jb[h] = P(s) ? g(s, 8) : 255;\n            } else u.Bb = 0;\n            if (s.Ka) return Jt(t, 3, \"cannot parse segment header\");\n            if ((u = t.ed).zd = P(s), u.Tb = g(s, 6), u.wb = g(s, 3), u.Pc = P(s), u.Pc && P(s)) {\n                for(l = 0; 4 > l; ++l)P(s) && (u.vd[l] = m(s, 6));\n                for(l = 0; 4 > l; ++l)P(s) && (u.od[l] = m(s, 6));\n            }\n            if (t.L = 0 == u.Tb ? 0 : u.zd ? 1 : 2, s.Ka) return Jt(t, 3, \"cannot parse filter header\");\n            var f = o;\n            if (o = h = a, a = h + f, u = f, t.Xb = (1 << g(t.m, 2)) - 1, f < 3 * (l = t.Xb)) n = 7;\n            else {\n                for(h += 3 * l, u -= 3 * l, f = 0; f < l; ++f){\n                    var d = n[o + 0] | n[o + 1] << 8 | n[o + 2] << 16;\n                    d > u && (d = u), p(t.Jc[+f], n, h, d), h += d, u -= d, o += 3;\n                }\n                p(t.Jc[+l], n, h, u), n = h < a ? 0 : 5;\n            }\n            if (0 != n) return Jt(t, n, \"cannot parse partitions\");\n            for(n = g(h = t.m, 7), o = P(h) ? m(h, 4) : 0, a = P(h) ? m(h, 4) : 0, u = P(h) ? m(h, 4) : 0, l = P(h) ? m(h, 4) : 0, h = P(h) ? m(h, 4) : 0, f = t.Qa, d = 0; 4 > d; ++d){\n                if (f.Cb) {\n                    var v = f.Zb[d];\n                    f.Fb || (v += n);\n                } else {\n                    if (0 < d) {\n                        t.pb[d] = t.pb[0];\n                        continue;\n                    }\n                    v = n;\n                }\n                var b = t.pb[d];\n                b.Sc[0] = ei[Vt(v + o, 127)], b.Sc[1] = ri[Vt(v + 0, 127)], b.Eb[0] = 2 * ei[Vt(v + a, 127)], b.Eb[1] = 101581 * ri[Vt(v + u, 127)] >> 16, 8 > b.Eb[1] && (b.Eb[1] = 8), b.Qc[0] = ei[Vt(v + l, 117)], b.Qc[1] = ri[Vt(v + h, 127)], b.lc = v + h;\n            }\n            if (!c.Rb) return Jt(t, 4, \"Not a key frame.\");\n            for(P(s), c = t.Pa, n = 0; 4 > n; ++n){\n                for(o = 0; 8 > o; ++o)for(a = 0; 3 > a; ++a)for(u = 0; 11 > u; ++u)l = k(s, ui[n][o][a][u]) ? g(s, 8) : si[n][o][a][u], c.Wc[n][o].Yb[a][u] = l;\n                for(o = 0; 17 > o; ++o)c.Xc[n][o] = c.Wc[n][hi[o]];\n            }\n            return t.kc = P(s), t.kc && (t.Bd = g(s, 8)), t.cb = 1;\n        }\n        function Zt(t, e, r, n, i, a, o) {\n            var s = e[i].Yb[r];\n            for(r = 0; 16 > i; ++i){\n                if (!k(t, s[r + 0])) return i;\n                for(; !k(t, s[r + 1]);)if (s = e[++i].Yb[0], r = 0, 16 == i) return 16;\n                var c = e[i + 1].Yb;\n                if (k(t, s[r + 2])) {\n                    var u = t, h = 0;\n                    if (k(u, (f = s)[(l = r) + 3])) if (k(u, f[l + 6])) {\n                        for(s = 0, l = 2 * (h = k(u, f[l + 8])) + (f = k(u, f[l + 9 + h])), h = 0, f = ii[l]; f[s]; ++s)h += h + k(u, f[s]);\n                        h += 3 + (8 << l);\n                    } else k(u, f[l + 7]) ? (h = 7 + 2 * k(u, 165), h += k(u, 145)) : h = 5 + k(u, 159);\n                    else h = k(u, f[l + 4]) ? 3 + k(u, f[l + 5]) : 2;\n                    s = c[2];\n                } else h = 1, s = c[1];\n                c = o + ai[i], 0 > (u = t).b && _(u);\n                var l, f = u.b, d = (l = u.Ca >> 1) - (u.I >> f) >> 31;\n                --u.b, u.Ca += d, u.Ca |= 1, u.I -= (l + 1 & d) << f, a[c] = ((h ^ d) - d) * n[(0 < i) + 0];\n            }\n            return 16;\n        }\n        function $t(t) {\n            var e = t.rb[t.sb - 1];\n            e.la = 0, e.Na = 0, i(t.zc, 0, 0, t.zc.length), t.ja = 0;\n        }\n        function Qt(t, r) {\n            if (null == t) return 0;\n            if (null == r) return Jt(t, 2, \"NULL VP8Io parameter in VP8Decode().\");\n            if (!t.cb && !Kt(t, r)) return 0;\n            if (e(t.cb), null == r.ac || r.ac(r)) {\n                r.ob && (t.L = 0);\n                var s = Ri[t.L];\n                if (2 == t.L ? (t.yb = 0, t.zb = 0) : (t.yb = r.v - s >> 4, t.zb = r.j - s >> 4, 0 > t.yb && (t.yb = 0), 0 > t.zb && (t.zb = 0)), t.Va = r.o + 15 + s >> 4, t.Hb = r.va + 15 + s >> 4, t.Hb > t.za && (t.Hb = t.za), t.Va > t.Ub && (t.Va = t.Ub), 0 < t.L) {\n                    var c = t.ed;\n                    for(s = 0; 4 > s; ++s){\n                        var u;\n                        if (t.Qa.Cb) {\n                            var h = t.Qa.Lb[s];\n                            t.Qa.Fb || (h += c.Tb);\n                        } else h = c.Tb;\n                        for(u = 0; 1 >= u; ++u){\n                            var l = t.gd[s][u], f = h;\n                            if (c.Pc && (f += c.vd[0], u && (f += c.od[0])), 0 < (f = 0 > f ? 0 : 63 < f ? 63 : f)) {\n                                var d = f;\n                                0 < c.wb && (d = 4 < c.wb ? d >> 2 : d >> 1) > 9 - c.wb && (d = 9 - c.wb), 1 > d && (d = 1), l.dd = d, l.tc = 2 * f + d, l.ld = 40 <= f ? 2 : 15 <= f ? 1 : 0;\n                            } else l.tc = 0;\n                            l.La = u;\n                        }\n                    }\n                }\n                s = 0;\n            } else Jt(t, 6, \"Frame setup failed\"), s = t.a;\n            if (s = 0 == s) {\n                if (s) {\n                    t.$c = 0, 0 < t.Aa || (t.Ic = Ui);\n                    t: {\n                        s = t.Ic;\n                        c = 4 * (d = t.za);\n                        var p = 32 * d, g = d + 1, m = 0 < t.L ? d * (0 < t.Aa ? 2 : 1) : 0, v = (2 == t.Aa ? 2 : 1) * d;\n                        if ((l = c + 832 + (u = 3 * (16 * s + Ri[t.L]) / 2 * p) + (h = null != t.Fa && 0 < t.Fa.length ? t.Kc.c * t.Kc.i : 0)) != l) s = 0;\n                        else {\n                            if (l > t.Vb) {\n                                if (t.Vb = 0, t.Ec = a(l), t.Fc = 0, null == t.Ec) {\n                                    s = Jt(t, 1, \"no memory during frame initialization.\");\n                                    break t;\n                                }\n                                t.Vb = l;\n                            }\n                            l = t.Ec, f = t.Fc, t.Ac = l, t.Bc = f, f += c, t.Gd = o(p, Ht), t.Hd = 0, t.rb = o(g + 1, Rt), t.sb = 1, t.wa = m ? o(m, Dt) : null, t.Y = 0, t.D.Nb = 0, t.D.wa = t.wa, t.D.Y = t.Y, 0 < t.Aa && (t.D.Y += d), e(!0), t.oc = l, t.pc = f, f += 832, t.ya = o(v, Ut), t.aa = 0, t.D.ya = t.ya, t.D.aa = t.aa, 2 == t.Aa && (t.D.aa += d), t.R = 16 * d, t.B = 8 * d, d = (p = Ri[t.L]) * t.R, p = p / 2 * t.B, t.sa = l, t.ta = f + d, t.qa = t.sa, t.ra = t.ta + 16 * s * t.R + p, t.Ha = t.qa, t.Ia = t.ra + 8 * s * t.B + p, t.$c = 0, f += u, t.mb = h ? l : null, t.nb = h ? f : null, e(f + h <= t.Fc + t.Vb), $t(t), i(t.Ac, t.Bc, 0, c), s = 1;\n                        }\n                    }\n                    if (s) {\n                        if (r.ka = 0, r.y = t.sa, r.O = t.ta, r.f = t.qa, r.N = t.ra, r.ea = t.Ha, r.Vd = t.Ia, r.fa = t.R, r.Rc = t.B, r.F = null, r.J = 0, !Cn) {\n                            for(s = -255; 255 >= s; ++s)Pn[255 + s] = 0 > s ? -s : s;\n                            for(s = -1020; 1020 >= s; ++s)kn[1020 + s] = -128 > s ? -128 : 127 < s ? 127 : s;\n                            for(s = -112; 112 >= s; ++s)In[112 + s] = -16 > s ? -16 : 15 < s ? 15 : s;\n                            for(s = -255; 510 >= s; ++s)Fn[255 + s] = 0 > s ? 0 : 255 < s ? 255 : s;\n                            Cn = 1;\n                        }\n                        an = ue, on = ae, cn = oe, un = se, hn = ce, sn = ie, ln = Je, fn = Xe, dn = $e, pn = Qe, gn = Ke, mn = Ze, vn = tr, bn = er, yn = ze, wn = He, Nn = We, Ln = Ve, fi[0] = xe, fi[1] = le, fi[2] = Le, fi[3] = Ae, fi[4] = Se, fi[5] = Pe, fi[6] = _e, fi[7] = ke, fi[8] = Fe, fi[9] = Ie, li[0] = ve, li[1] = de, li[2] = pe, li[3] = ge, li[4] = be, li[5] = ye, li[6] = we, di[0] = Be, di[1] = fe, di[2] = Ce, di[3] = je, di[4] = Ee, di[5] = Me, di[6] = qe, s = 1;\n                    } else s = 0;\n                }\n                s && (s = function(t, r) {\n                    for(t.M = 0; t.M < t.Va; ++t.M){\n                        var o, s = t.Jc[t.M & t.Xb], c = t.m, u = t;\n                        for(o = 0; o < u.za; ++o){\n                            var h = c, l = u, f = l.Ac, d = l.Bc + 4 * o, p = l.zc, g = l.ya[l.aa + o];\n                            if (l.Qa.Bb ? g.$b = k(h, l.Pa.jb[0]) ? 2 + k(h, l.Pa.jb[2]) : k(h, l.Pa.jb[1]) : g.$b = 0, l.kc && (g.Ad = k(h, l.Bd)), g.Za = !k(h, 145) + 0, g.Za) {\n                                var m = g.Ob, v = 0;\n                                for(l = 0; 4 > l; ++l){\n                                    var b, y = p[0 + l];\n                                    for(b = 0; 4 > b; ++b){\n                                        y = ci[f[d + b]][y];\n                                        for(var w = oi[k(h, y[0])]; 0 < w;)w = oi[2 * w + k(h, y[w])];\n                                        y = -w, f[d + b] = y;\n                                    }\n                                    n(m, v, f, d, 4), v += 4, p[0 + l] = y;\n                                }\n                            } else y = k(h, 156) ? k(h, 128) ? 1 : 3 : k(h, 163) ? 2 : 0, g.Ob[0] = y, i(f, d, y, 4), i(p, 0, y, 4);\n                            g.Dd = k(h, 142) ? k(h, 114) ? k(h, 183) ? 1 : 3 : 2 : 0;\n                        }\n                        if (u.m.Ka) return Jt(t, 7, \"Premature end-of-partition0 encountered.\");\n                        for(; t.ja < t.za; ++t.ja){\n                            if (u = s, h = (c = t).rb[c.sb - 1], f = c.rb[c.sb + c.ja], o = c.ya[c.aa + c.ja], d = c.kc ? o.Ad : 0) h.la = f.la = 0, o.Za || (h.Na = f.Na = 0), o.Hc = 0, o.Gc = 0, o.ia = 0;\n                            else {\n                                var N, L;\n                                h = f, f = u, d = c.Pa.Xc, p = c.ya[c.aa + c.ja], g = c.pb[p.$b];\n                                if (l = p.ad, m = 0, v = c.rb[c.sb - 1], y = b = 0, i(l, m, 0, 384), p.Za) var A = 0, x = d[3];\n                                else {\n                                    w = a(16);\n                                    var S = h.Na + v.Na;\n                                    if (S = ni(f, d[1], S, g.Eb, 0, w, 0), h.Na = v.Na = (0 < S) + 0, 1 < S) an(w, 0, l, m);\n                                    else {\n                                        var _ = w[0] + 3 >> 3;\n                                        for(w = 0; 256 > w; w += 16)l[m + w] = _;\n                                    }\n                                    A = 1, x = d[0];\n                                }\n                                var P = 15 & h.la, I = 15 & v.la;\n                                for(w = 0; 4 > w; ++w){\n                                    var F = 1 & I;\n                                    for(_ = L = 0; 4 > _; ++_)P = P >> 1 | (F = (S = ni(f, x, S = F + (1 & P), g.Sc, A, l, m)) > A) << 7, L = L << 2 | (3 < S ? 3 : 1 < S ? 2 : 0 != l[m + 0]), m += 16;\n                                    P >>= 4, I = I >> 1 | F << 7, b = (b << 8 | L) >>> 0;\n                                }\n                                for(x = P, A = I >> 4, N = 0; 4 > N; N += 2){\n                                    for(L = 0, P = h.la >> 4 + N, I = v.la >> 4 + N, w = 0; 2 > w; ++w){\n                                        for(F = 1 & I, _ = 0; 2 > _; ++_)S = F + (1 & P), P = P >> 1 | (F = 0 < (S = ni(f, d[2], S, g.Qc, 0, l, m))) << 3, L = L << 2 | (3 < S ? 3 : 1 < S ? 2 : 0 != l[m + 0]), m += 16;\n                                        P >>= 2, I = I >> 1 | F << 5;\n                                    }\n                                    y |= L << 4 * N, x |= P << 4 << N, A |= (240 & I) << N;\n                                }\n                                h.la = x, v.la = A, p.Hc = b, p.Gc = y, p.ia = 43690 & y ? 0 : g.ia, d = !(b | y);\n                            }\n                            if (0 < c.L && (c.wa[c.Y + c.ja] = c.gd[o.$b][o.Za], c.wa[c.Y + c.ja].La |= !d), u.Ka) return Jt(t, 7, \"Premature end-of-file encountered.\");\n                        }\n                        if ($t(t), c = r, u = 1, o = (s = t).D, h = 0 < s.L && s.M >= s.zb && s.M <= s.Va, 0 == s.Aa) t: {\n                            if (o.M = s.M, o.uc = h, Or(s, o), u = 1, o = (L = s.D).Nb, h = (y = Ri[s.L]) * s.R, f = y / 2 * s.B, w = 16 * o * s.R, _ = 8 * o * s.B, d = s.sa, p = s.ta - h + w, g = s.qa, l = s.ra - f + _, m = s.Ha, v = s.Ia - f + _, I = 0 == (P = L.M), b = P >= s.Va - 1, 2 == s.Aa && Or(s, L), L.uc) for(F = (S = s).D.M, e(S.D.uc), L = S.yb; L < S.Hb; ++L){\n                                A = L, x = F;\n                                var C = (j = (U = S).D).Nb;\n                                N = U.R;\n                                var j = j.wa[j.Y + A], O = U.sa, B = U.ta + 16 * C * N + 16 * A, M = j.dd, E = j.tc;\n                                if (0 != E) if (e(3 <= E), 1 == U.L) 0 < A && wn(O, B, N, E + 4), j.La && Ln(O, B, N, E), 0 < x && yn(O, B, N, E + 4), j.La && Nn(O, B, N, E);\n                                else {\n                                    var q = U.B, D = U.qa, R = U.ra + 8 * C * q + 8 * A, T = U.Ha, U = U.Ia + 8 * C * q + 8 * A;\n                                    C = j.ld;\n                                    0 < A && (fn(O, B, N, E + 4, M, C), pn(D, R, T, U, q, E + 4, M, C)), j.La && (mn(O, B, N, E, M, C), bn(D, R, T, U, q, E, M, C)), 0 < x && (ln(O, B, N, E + 4, M, C), dn(D, R, T, U, q, E + 4, M, C)), j.La && (gn(O, B, N, E, M, C), vn(D, R, T, U, q, E, M, C));\n                                }\n                            }\n                            if (s.ia && alert(\"todo:DitherRow\"), null != c.put) {\n                                if (L = 16 * P, P = 16 * (P + 1), I ? (c.y = s.sa, c.O = s.ta + w, c.f = s.qa, c.N = s.ra + _, c.ea = s.Ha, c.W = s.Ia + _) : (L -= y, c.y = d, c.O = p, c.f = g, c.N = l, c.ea = m, c.W = v), b || (P -= y), P > c.o && (P = c.o), c.F = null, c.J = null, null != s.Fa && 0 < s.Fa.length && L < P && (c.J = lr(s, c, L, P - L), c.F = s.mb, null == c.F && 0 == c.F.length)) {\n                                    u = Jt(s, 3, \"Could not decode alpha data.\");\n                                    break t;\n                                }\n                                L < c.j && (y = c.j - L, L = c.j, e(!(1 & y)), c.O += s.R * y, c.N += s.B * (y >> 1), c.W += s.B * (y >> 1), null != c.F && (c.J += c.width * y)), L < P && (c.O += c.v, c.N += c.v >> 1, c.W += c.v >> 1, null != c.F && (c.J += c.v), c.ka = L - c.j, c.U = c.va - c.v, c.T = P - L, u = c.put(c));\n                            }\n                            o + 1 != s.Ic || b || (n(s.sa, s.ta - h, d, p + 16 * s.R, h), n(s.qa, s.ra - f, g, l + 8 * s.B, f), n(s.Ha, s.Ia - f, m, v + 8 * s.B, f));\n                        }\n                        if (!u) return Jt(t, 6, \"Output aborted.\");\n                    }\n                    return 1;\n                }(t, r)), null != r.bc && r.bc(r), s &= 1;\n            }\n            return s ? (t.cb = 0, s) : 0;\n        }\n        function te(t, e, r, n, i) {\n            i = t[e + r + 32 * n] + (i >> 3), t[e + r + 32 * n] = -256 & i ? 0 > i ? 0 : 255 : i;\n        }\n        function ee(t, e, r, n, i, a) {\n            te(t, e, 0, r, n + i), te(t, e, 1, r, n + a), te(t, e, 2, r, n - a), te(t, e, 3, r, n - i);\n        }\n        function re(t) {\n            return (20091 * t >> 16) + t;\n        }\n        function ne(t, e, r, n) {\n            var i, o = 0, s = a(16);\n            for(i = 0; 4 > i; ++i){\n                var c = t[e + 0] + t[e + 8], u = t[e + 0] - t[e + 8], h = (35468 * t[e + 4] >> 16) - re(t[e + 12]), l = re(t[e + 4]) + (35468 * t[e + 12] >> 16);\n                s[o + 0] = c + l, s[o + 1] = u + h, s[o + 2] = u - h, s[o + 3] = c - l, o += 4, e++;\n            }\n            for(i = o = 0; 4 > i; ++i)c = (t = s[o + 0] + 4) + s[o + 8], u = t - s[o + 8], h = (35468 * s[o + 4] >> 16) - re(s[o + 12]), te(r, n, 0, 0, c + (l = re(s[o + 4]) + (35468 * s[o + 12] >> 16))), te(r, n, 1, 0, u + h), te(r, n, 2, 0, u - h), te(r, n, 3, 0, c - l), o++, n += 32;\n        }\n        function ie(t, e, r, n) {\n            var i = t[e + 0] + 4, a = 35468 * t[e + 4] >> 16, o = re(t[e + 4]), s = 35468 * t[e + 1] >> 16;\n            ee(r, n, 0, i + o, t = re(t[e + 1]), s), ee(r, n, 1, i + a, t, s), ee(r, n, 2, i - a, t, s), ee(r, n, 3, i - o, t, s);\n        }\n        function ae(t, e, r, n, i) {\n            ne(t, e, r, n), i && ne(t, e + 16, r, n + 4);\n        }\n        function oe(t, e, r, n) {\n            on(t, e + 0, r, n, 1), on(t, e + 32, r, n + 128, 1);\n        }\n        function se(t, e, r, n) {\n            var i;\n            for(t = t[e + 0] + 4, i = 0; 4 > i; ++i)for(e = 0; 4 > e; ++e)te(r, n, e, i, t);\n        }\n        function ce(t, e, r, n) {\n            t[e + 0] && un(t, e + 0, r, n), t[e + 16] && un(t, e + 16, r, n + 4), t[e + 32] && un(t, e + 32, r, n + 128), t[e + 48] && un(t, e + 48, r, n + 128 + 4);\n        }\n        function ue(t, e, r, n) {\n            var i, o = a(16);\n            for(i = 0; 4 > i; ++i){\n                var s = t[e + 0 + i] + t[e + 12 + i], c = t[e + 4 + i] + t[e + 8 + i], u = t[e + 4 + i] - t[e + 8 + i], h = t[e + 0 + i] - t[e + 12 + i];\n                o[0 + i] = s + c, o[8 + i] = s - c, o[4 + i] = h + u, o[12 + i] = h - u;\n            }\n            for(i = 0; 4 > i; ++i)s = (t = o[0 + 4 * i] + 3) + o[3 + 4 * i], c = o[1 + 4 * i] + o[2 + 4 * i], u = o[1 + 4 * i] - o[2 + 4 * i], h = t - o[3 + 4 * i], r[n + 0] = s + c >> 3, r[n + 16] = h + u >> 3, r[n + 32] = s - c >> 3, r[n + 48] = h - u >> 3, n += 64;\n        }\n        function he(t, e, r) {\n            var n, i = e - 32, a = Bn, o = 255 - t[i - 1];\n            for(n = 0; n < r; ++n){\n                var s, c = a, u = o + t[e - 1];\n                for(s = 0; s < r; ++s)t[e + s] = c[u + t[i + s]];\n                e += 32;\n            }\n        }\n        function le(t, e) {\n            he(t, e, 4);\n        }\n        function fe(t, e) {\n            he(t, e, 8);\n        }\n        function de(t, e) {\n            he(t, e, 16);\n        }\n        function pe(t, e) {\n            var r;\n            for(r = 0; 16 > r; ++r)n(t, e + 32 * r, t, e - 32, 16);\n        }\n        function ge(t, e) {\n            var r;\n            for(r = 16; 0 < r; --r)i(t, e, t[e - 1], 16), e += 32;\n        }\n        function me(t, e, r) {\n            var n;\n            for(n = 0; 16 > n; ++n)i(e, r + 32 * n, t, 16);\n        }\n        function ve(t, e) {\n            var r, n = 16;\n            for(r = 0; 16 > r; ++r)n += t[e - 1 + 32 * r] + t[e + r - 32];\n            me(n >> 5, t, e);\n        }\n        function be(t, e) {\n            var r, n = 8;\n            for(r = 0; 16 > r; ++r)n += t[e - 1 + 32 * r];\n            me(n >> 4, t, e);\n        }\n        function ye(t, e) {\n            var r, n = 8;\n            for(r = 0; 16 > r; ++r)n += t[e + r - 32];\n            me(n >> 4, t, e);\n        }\n        function we(t, e) {\n            me(128, t, e);\n        }\n        function Ne(t, e, r) {\n            return t + 2 * e + r + 2 >> 2;\n        }\n        function Le(t, e) {\n            var r, i = e - 32;\n            i = new Uint8Array([\n                Ne(t[i - 1], t[i + 0], t[i + 1]),\n                Ne(t[i + 0], t[i + 1], t[i + 2]),\n                Ne(t[i + 1], t[i + 2], t[i + 3]),\n                Ne(t[i + 2], t[i + 3], t[i + 4])\n            ]);\n            for(r = 0; 4 > r; ++r)n(t, e + 32 * r, i, 0, i.length);\n        }\n        function Ae(t, e) {\n            var r = t[e - 1], n = t[e - 1 + 32], i = t[e - 1 + 64], a = t[e - 1 + 96];\n            I(t, e + 0, 16843009 * Ne(t[e - 1 - 32], r, n)), I(t, e + 32, 16843009 * Ne(r, n, i)), I(t, e + 64, 16843009 * Ne(n, i, a)), I(t, e + 96, 16843009 * Ne(i, a, a));\n        }\n        function xe(t, e) {\n            var r, n = 4;\n            for(r = 0; 4 > r; ++r)n += t[e + r - 32] + t[e - 1 + 32 * r];\n            for(n >>= 3, r = 0; 4 > r; ++r)i(t, e + 32 * r, n, 4);\n        }\n        function Se(t, e) {\n            var r = t[e - 1 + 0], n = t[e - 1 + 32], i = t[e - 1 + 64], a = t[e - 1 - 32], o = t[e + 0 - 32], s = t[e + 1 - 32], c = t[e + 2 - 32], u = t[e + 3 - 32];\n            t[e + 0 + 96] = Ne(n, i, t[e - 1 + 96]), t[e + 1 + 96] = t[e + 0 + 64] = Ne(r, n, i), t[e + 2 + 96] = t[e + 1 + 64] = t[e + 0 + 32] = Ne(a, r, n), t[e + 3 + 96] = t[e + 2 + 64] = t[e + 1 + 32] = t[e + 0 + 0] = Ne(o, a, r), t[e + 3 + 64] = t[e + 2 + 32] = t[e + 1 + 0] = Ne(s, o, a), t[e + 3 + 32] = t[e + 2 + 0] = Ne(c, s, o), t[e + 3 + 0] = Ne(u, c, s);\n        }\n        function _e(t, e) {\n            var r = t[e + 1 - 32], n = t[e + 2 - 32], i = t[e + 3 - 32], a = t[e + 4 - 32], o = t[e + 5 - 32], s = t[e + 6 - 32], c = t[e + 7 - 32];\n            t[e + 0 + 0] = Ne(t[e + 0 - 32], r, n), t[e + 1 + 0] = t[e + 0 + 32] = Ne(r, n, i), t[e + 2 + 0] = t[e + 1 + 32] = t[e + 0 + 64] = Ne(n, i, a), t[e + 3 + 0] = t[e + 2 + 32] = t[e + 1 + 64] = t[e + 0 + 96] = Ne(i, a, o), t[e + 3 + 32] = t[e + 2 + 64] = t[e + 1 + 96] = Ne(a, o, s), t[e + 3 + 64] = t[e + 2 + 96] = Ne(o, s, c), t[e + 3 + 96] = Ne(s, c, c);\n        }\n        function Pe(t, e) {\n            var r = t[e - 1 + 0], n = t[e - 1 + 32], i = t[e - 1 + 64], a = t[e - 1 - 32], o = t[e + 0 - 32], s = t[e + 1 - 32], c = t[e + 2 - 32], u = t[e + 3 - 32];\n            t[e + 0 + 0] = t[e + 1 + 64] = a + o + 1 >> 1, t[e + 1 + 0] = t[e + 2 + 64] = o + s + 1 >> 1, t[e + 2 + 0] = t[e + 3 + 64] = s + c + 1 >> 1, t[e + 3 + 0] = c + u + 1 >> 1, t[e + 0 + 96] = Ne(i, n, r), t[e + 0 + 64] = Ne(n, r, a), t[e + 0 + 32] = t[e + 1 + 96] = Ne(r, a, o), t[e + 1 + 32] = t[e + 2 + 96] = Ne(a, o, s), t[e + 2 + 32] = t[e + 3 + 96] = Ne(o, s, c), t[e + 3 + 32] = Ne(s, c, u);\n        }\n        function ke(t, e) {\n            var r = t[e + 0 - 32], n = t[e + 1 - 32], i = t[e + 2 - 32], a = t[e + 3 - 32], o = t[e + 4 - 32], s = t[e + 5 - 32], c = t[e + 6 - 32], u = t[e + 7 - 32];\n            t[e + 0 + 0] = r + n + 1 >> 1, t[e + 1 + 0] = t[e + 0 + 64] = n + i + 1 >> 1, t[e + 2 + 0] = t[e + 1 + 64] = i + a + 1 >> 1, t[e + 3 + 0] = t[e + 2 + 64] = a + o + 1 >> 1, t[e + 0 + 32] = Ne(r, n, i), t[e + 1 + 32] = t[e + 0 + 96] = Ne(n, i, a), t[e + 2 + 32] = t[e + 1 + 96] = Ne(i, a, o), t[e + 3 + 32] = t[e + 2 + 96] = Ne(a, o, s), t[e + 3 + 64] = Ne(o, s, c), t[e + 3 + 96] = Ne(s, c, u);\n        }\n        function Ie(t, e) {\n            var r = t[e - 1 + 0], n = t[e - 1 + 32], i = t[e - 1 + 64], a = t[e - 1 + 96];\n            t[e + 0 + 0] = r + n + 1 >> 1, t[e + 2 + 0] = t[e + 0 + 32] = n + i + 1 >> 1, t[e + 2 + 32] = t[e + 0 + 64] = i + a + 1 >> 1, t[e + 1 + 0] = Ne(r, n, i), t[e + 3 + 0] = t[e + 1 + 32] = Ne(n, i, a), t[e + 3 + 32] = t[e + 1 + 64] = Ne(i, a, a), t[e + 3 + 64] = t[e + 2 + 64] = t[e + 0 + 96] = t[e + 1 + 96] = t[e + 2 + 96] = t[e + 3 + 96] = a;\n        }\n        function Fe(t, e) {\n            var r = t[e - 1 + 0], n = t[e - 1 + 32], i = t[e - 1 + 64], a = t[e - 1 + 96], o = t[e - 1 - 32], s = t[e + 0 - 32], c = t[e + 1 - 32], u = t[e + 2 - 32];\n            t[e + 0 + 0] = t[e + 2 + 32] = r + o + 1 >> 1, t[e + 0 + 32] = t[e + 2 + 64] = n + r + 1 >> 1, t[e + 0 + 64] = t[e + 2 + 96] = i + n + 1 >> 1, t[e + 0 + 96] = a + i + 1 >> 1, t[e + 3 + 0] = Ne(s, c, u), t[e + 2 + 0] = Ne(o, s, c), t[e + 1 + 0] = t[e + 3 + 32] = Ne(r, o, s), t[e + 1 + 32] = t[e + 3 + 64] = Ne(n, r, o), t[e + 1 + 64] = t[e + 3 + 96] = Ne(i, n, r), t[e + 1 + 96] = Ne(a, i, n);\n        }\n        function Ce(t, e) {\n            var r;\n            for(r = 0; 8 > r; ++r)n(t, e + 32 * r, t, e - 32, 8);\n        }\n        function je(t, e) {\n            var r;\n            for(r = 0; 8 > r; ++r)i(t, e, t[e - 1], 8), e += 32;\n        }\n        function Oe(t, e, r) {\n            var n;\n            for(n = 0; 8 > n; ++n)i(e, r + 32 * n, t, 8);\n        }\n        function Be(t, e) {\n            var r, n = 8;\n            for(r = 0; 8 > r; ++r)n += t[e + r - 32] + t[e - 1 + 32 * r];\n            Oe(n >> 4, t, e);\n        }\n        function Me(t, e) {\n            var r, n = 4;\n            for(r = 0; 8 > r; ++r)n += t[e + r - 32];\n            Oe(n >> 3, t, e);\n        }\n        function Ee(t, e) {\n            var r, n = 4;\n            for(r = 0; 8 > r; ++r)n += t[e - 1 + 32 * r];\n            Oe(n >> 3, t, e);\n        }\n        function qe(t, e) {\n            Oe(128, t, e);\n        }\n        function De(t, e, r) {\n            var n = t[e - r], i = t[e + 0], a = 3 * (i - n) + jn[1020 + t[e - 2 * r] - t[e + r]], o = On[112 + (a + 4 >> 3)];\n            t[e - r] = Bn[255 + n + On[112 + (a + 3 >> 3)]], t[e + 0] = Bn[255 + i - o];\n        }\n        function Re(t, e, r, n) {\n            var i = t[e + 0], a = t[e + r];\n            return Mn[255 + t[e - 2 * r] - t[e - r]] > n || Mn[255 + a - i] > n;\n        }\n        function Te(t, e, r, n) {\n            return 4 * Mn[255 + t[e - r] - t[e + 0]] + Mn[255 + t[e - 2 * r] - t[e + r]] <= n;\n        }\n        function Ue(t, e, r, n, i) {\n            var a = t[e - 3 * r], o = t[e - 2 * r], s = t[e - r], c = t[e + 0], u = t[e + r], h = t[e + 2 * r], l = t[e + 3 * r];\n            return 4 * Mn[255 + s - c] + Mn[255 + o - u] > n ? 0 : Mn[255 + t[e - 4 * r] - a] <= i && Mn[255 + a - o] <= i && Mn[255 + o - s] <= i && Mn[255 + l - h] <= i && Mn[255 + h - u] <= i && Mn[255 + u - c] <= i;\n        }\n        function ze(t, e, r, n) {\n            var i = 2 * n + 1;\n            for(n = 0; 16 > n; ++n)Te(t, e + n, r, i) && De(t, e + n, r);\n        }\n        function He(t, e, r, n) {\n            var i = 2 * n + 1;\n            for(n = 0; 16 > n; ++n)Te(t, e + n * r, 1, i) && De(t, e + n * r, 1);\n        }\n        function We(t, e, r, n) {\n            var i;\n            for(i = 3; 0 < i; --i)ze(t, e += 4 * r, r, n);\n        }\n        function Ve(t, e, r, n) {\n            var i;\n            for(i = 3; 0 < i; --i)He(t, e += 4, r, n);\n        }\n        function Ge(t, e, r, n, i, a, o, s) {\n            for(a = 2 * a + 1; 0 < i--;){\n                if (Ue(t, e, r, a, o)) if (Re(t, e, r, s)) De(t, e, r);\n                else {\n                    var c = t, u = e, h = r, l = c[u - 2 * h], f = c[u - h], d = c[u + 0], p = c[u + h], g = c[u + 2 * h], m = 27 * (b = jn[1020 + 3 * (d - f) + jn[1020 + l - p]]) + 63 >> 7, v = 18 * b + 63 >> 7, b = 9 * b + 63 >> 7;\n                    c[u - 3 * h] = Bn[255 + c[u - 3 * h] + b], c[u - 2 * h] = Bn[255 + l + v], c[u - h] = Bn[255 + f + m], c[u + 0] = Bn[255 + d - m], c[u + h] = Bn[255 + p - v], c[u + 2 * h] = Bn[255 + g - b];\n                }\n                e += n;\n            }\n        }\n        function Ye(t, e, r, n, i, a, o, s) {\n            for(a = 2 * a + 1; 0 < i--;){\n                if (Ue(t, e, r, a, o)) if (Re(t, e, r, s)) De(t, e, r);\n                else {\n                    var c = t, u = e, h = r, l = c[u - h], f = c[u + 0], d = c[u + h], p = On[112 + ((g = 3 * (f - l)) + 4 >> 3)], g = On[112 + (g + 3 >> 3)], m = p + 1 >> 1;\n                    c[u - 2 * h] = Bn[255 + c[u - 2 * h] + m], c[u - h] = Bn[255 + l + g], c[u + 0] = Bn[255 + f - p], c[u + h] = Bn[255 + d - m];\n                }\n                e += n;\n            }\n        }\n        function Je(t, e, r, n, i, a) {\n            Ge(t, e, r, 1, 16, n, i, a);\n        }\n        function Xe(t, e, r, n, i, a) {\n            Ge(t, e, 1, r, 16, n, i, a);\n        }\n        function Ke(t, e, r, n, i, a) {\n            var o;\n            for(o = 3; 0 < o; --o)Ye(t, e += 4 * r, r, 1, 16, n, i, a);\n        }\n        function Ze(t, e, r, n, i, a) {\n            var o;\n            for(o = 3; 0 < o; --o)Ye(t, e += 4, 1, r, 16, n, i, a);\n        }\n        function $e(t, e, r, n, i, a, o, s) {\n            Ge(t, e, i, 1, 8, a, o, s), Ge(r, n, i, 1, 8, a, o, s);\n        }\n        function Qe(t, e, r, n, i, a, o, s) {\n            Ge(t, e, 1, i, 8, a, o, s), Ge(r, n, 1, i, 8, a, o, s);\n        }\n        function tr(t, e, r, n, i, a, o, s) {\n            Ye(t, e + 4 * i, i, 1, 8, a, o, s), Ye(r, n + 4 * i, i, 1, 8, a, o, s);\n        }\n        function er(t, e, r, n, i, a, o, s) {\n            Ye(t, e + 4, 1, i, 8, a, o, s), Ye(r, n + 4, 1, i, 8, a, o, s);\n        }\n        function rr() {\n            this.ba = new ot, this.ec = [], this.cc = [], this.Mc = [], this.Dc = this.Nc = this.dc = this.fc = 0, this.Oa = new ct, this.memory = 0, this.Ib = \"OutputFunc\", this.Jb = \"OutputAlphaFunc\", this.Nd = \"OutputRowFunc\";\n        }\n        function nr() {\n            this.data = [], this.offset = this.kd = this.ha = this.w = 0, this.na = [], this.xa = this.gb = this.Ja = this.Sa = this.P = 0;\n        }\n        function ir() {\n            this.nc = this.Ea = this.b = this.hc = 0, this.K = [], this.w = 0;\n        }\n        function ar() {\n            this.ua = 0, this.Wa = new M, this.vb = new M, this.md = this.xc = this.wc = 0, this.vc = [], this.Wb = 0, this.Ya = new d, this.yc = new l;\n        }\n        function or() {\n            this.xb = this.a = 0, this.l = new Gt, this.ca = new ot, this.V = [], this.Ba = 0, this.Ta = [], this.Ua = 0, this.m = new N, this.Pb = 0, this.wd = new N, this.Ma = this.$ = this.C = this.i = this.c = this.xd = 0, this.s = new ar, this.ab = 0, this.gc = o(4, ir), this.Oc = 0;\n        }\n        function sr() {\n            this.Lc = this.Z = this.$a = this.i = this.c = 0, this.l = new Gt, this.ic = 0, this.ca = [], this.tb = 0, this.qd = null, this.rd = 0;\n        }\n        function cr(t, e, r, n, i, a, o) {\n            for(t = null == t ? 0 : t[e + 0], e = 0; e < o; ++e)i[a + e] = t + r[n + e] & 255, t = i[a + e];\n        }\n        function ur(t, e, r, n, i, a, o) {\n            var s;\n            if (null == t) cr(null, null, r, n, i, a, o);\n            else for(s = 0; s < o; ++s)i[a + s] = t[e + s] + r[n + s] & 255;\n        }\n        function hr(t, e, r, n, i, a, o) {\n            if (null == t) cr(null, null, r, n, i, a, o);\n            else {\n                var s, c = t[e + 0], u = c, h = c;\n                for(s = 0; s < o; ++s)u = h + (c = t[e + s]) - u, h = r[n + s] + (-256 & u ? 0 > u ? 0 : 255 : u) & 255, u = c, i[a + s] = h;\n            }\n        }\n        function lr(t, r, i, o) {\n            var s = r.width, c = r.o;\n            if (e(null != t && null != r), 0 > i || 0 >= o || i + o > c) return null;\n            if (!t.Cc) {\n                if (null == t.ga) {\n                    var u;\n                    if (t.ga = new sr, (u = null == t.ga) || (u = r.width * r.o, e(0 == t.Gb.length), t.Gb = a(u), t.Uc = 0, null == t.Gb ? u = 0 : (t.mb = t.Gb, t.nb = t.Uc, t.rc = null, u = 1), u = !u), !u) {\n                        u = t.ga;\n                        var h = t.Fa, l = t.P, f = t.qc, d = t.mb, p = t.nb, g = l + 1, m = f - 1, b = u.l;\n                        if (e(null != h && null != d && null != r), mi[0] = null, mi[1] = cr, mi[2] = ur, mi[3] = hr, u.ca = d, u.tb = p, u.c = r.width, u.i = r.height, e(0 < u.c && 0 < u.i), 1 >= f) r = 0;\n                        else if (u.$a = h[l + 0] >> 0 & 3, u.Z = h[l + 0] >> 2 & 3, u.Lc = h[l + 0] >> 4 & 3, l = h[l + 0] >> 6 & 3, 0 > u.$a || 1 < u.$a || 4 <= u.Z || 1 < u.Lc || l) r = 0;\n                        else if (b.put = dt, b.ac = ft, b.bc = pt, b.ma = u, b.width = r.width, b.height = r.height, b.Da = r.Da, b.v = r.v, b.va = r.va, b.j = r.j, b.o = r.o, u.$a) t: {\n                            e(1 == u.$a), r = kt();\n                            e: for(;;){\n                                if (null == r) {\n                                    r = 0;\n                                    break t;\n                                }\n                                if (e(null != u), u.mc = r, r.c = u.c, r.i = u.i, r.l = u.l, r.l.ma = u, r.l.width = u.c, r.l.height = u.i, r.a = 0, v(r.m, h, g, m), !It(u.c, u.i, 1, r, null)) break e;\n                                if (1 == r.ab && 3 == r.gc[0].hc && At(r.s) ? (u.ic = 1, h = r.c * r.i, r.Ta = null, r.Ua = 0, r.V = a(h), r.Ba = 0, null == r.V ? (r.a = 1, r = 0) : r = 1) : (u.ic = 0, r = Ft(r, u.c)), !r) break e;\n                                r = 1;\n                                break t;\n                            }\n                            u.mc = null, r = 0;\n                        }\n                        else r = m >= u.c * u.i;\n                        u = !r;\n                    }\n                    if (u) return null;\n                    1 != t.ga.Lc ? t.Ga = 0 : o = c - i;\n                }\n                e(null != t.ga), e(i + o <= c);\n                t: {\n                    if (r = (h = t.ga).c, c = h.l.o, 0 == h.$a) {\n                        if (g = t.rc, m = t.Vc, b = t.Fa, l = t.P + 1 + i * r, f = t.mb, d = t.nb + i * r, e(l <= t.P + t.qc), 0 != h.Z) for(e(null != mi[h.Z]), u = 0; u < o; ++u)mi[h.Z](g, m, b, l, f, d, r), g = f, m = d, d += r, l += r;\n                        else for(u = 0; u < o; ++u)n(f, d, b, l, r), g = f, m = d, d += r, l += r;\n                        t.rc = g, t.Vc = m;\n                    } else {\n                        if (e(null != h.mc), r = i + o, e(null != (u = h.mc)), e(r <= u.i), u.C >= r) r = 1;\n                        else if (h.ic || mr(), h.ic) {\n                            h = u.V, g = u.Ba, m = u.c;\n                            var y = u.i, w = (b = 1, l = u.$ / m, f = u.$ % m, d = u.m, p = u.s, u.$), N = m * y, L = m * r, x = p.wc, _ = w < L ? wt(p, f, l) : null;\n                            e(w <= N), e(r <= y), e(At(p));\n                            e: for(;;){\n                                for(; !d.h && w < L;){\n                                    if (f & x || (_ = wt(p, f, l)), e(null != _), S(d), 256 > (y = bt(_.G[0], _.H[0], d))) h[g + w] = y, ++w, ++f >= m && (f = 0, ++l <= r && !(l % 16) && St(u, l));\n                                    else {\n                                        if (!(280 > y)) {\n                                            b = 0;\n                                            break e;\n                                        }\n                                        y = mt(y - 256, d);\n                                        var P, k = bt(_.G[4], _.H[4], d);\n                                        if (S(d), !(w >= (k = vt(m, k = mt(k, d))) && N - w >= y)) {\n                                            b = 0;\n                                            break e;\n                                        }\n                                        for(P = 0; P < y; ++P)h[g + w + P] = h[g + w + P - k];\n                                        for(w += y, f += y; f >= m;)f -= m, ++l <= r && !(l % 16) && St(u, l);\n                                        w < L && f & x && (_ = wt(p, f, l));\n                                    }\n                                    e(d.h == A(d));\n                                }\n                                St(u, l > r ? r : l);\n                                break e;\n                            }\n                            !b || d.h && w < N ? (b = 0, u.a = d.h ? 5 : 3) : u.$ = w, r = b;\n                        } else r = _t(u, u.V, u.Ba, u.c, u.i, r, Ct);\n                        if (!r) {\n                            o = 0;\n                            break t;\n                        }\n                    }\n                    i + o >= c && (t.Cc = 1), o = 1;\n                }\n                if (!o) return null;\n                if (t.Cc && (null != (o = t.ga) && (o.mc = null), t.ga = null, 0 < t.Ga)) return alert(\"todo:WebPDequantizeLevels\"), null;\n            }\n            return t.nb + i * s;\n        }\n        function fr(t, e, r, n, i, a) {\n            for(; 0 < i--;){\n                var o, s = t, c = e + (r ? 1 : 0), u = t, h = e + (r ? 0 : 3);\n                for(o = 0; o < n; ++o){\n                    var l = u[h + 4 * o];\n                    255 != l && (l *= 32897, s[c + 4 * o + 0] = s[c + 4 * o + 0] * l >> 23, s[c + 4 * o + 1] = s[c + 4 * o + 1] * l >> 23, s[c + 4 * o + 2] = s[c + 4 * o + 2] * l >> 23);\n                }\n                e += a;\n            }\n        }\n        function dr(t, e, r, n, i) {\n            for(; 0 < n--;){\n                var a;\n                for(a = 0; a < r; ++a){\n                    var o = t[e + 2 * a + 0], s = 15 & (u = t[e + 2 * a + 1]), c = 4369 * s, u = (240 & u | u >> 4) * c >> 16;\n                    t[e + 2 * a + 0] = (240 & o | o >> 4) * c >> 16 & 240 | (15 & o | o << 4) * c >> 16 >> 4 & 15, t[e + 2 * a + 1] = 240 & u | s;\n                }\n                e += i;\n            }\n        }\n        function pr(t, e, r, n, i, a, o, s) {\n            var c, u, h = 255;\n            for(u = 0; u < i; ++u){\n                for(c = 0; c < n; ++c){\n                    var l = t[e + c];\n                    a[o + 4 * c] = l, h &= l;\n                }\n                e += r, o += s;\n            }\n            return 255 != h;\n        }\n        function gr(t, e, r, n, i) {\n            var a;\n            for(a = 0; a < i; ++a)r[n + a] = t[e + a] >> 8;\n        }\n        function mr() {\n            An = fr, xn = dr, Sn = pr, _n = gr;\n        }\n        function vr(r, n, i) {\n            t[r] = function(t, r, a, o, s, c, u, h, l, f, d, p, g, m, v, b, y) {\n                var w, N = y - 1 >> 1, L = s[c + 0] | u[h + 0] << 16, A = l[f + 0] | d[p + 0] << 16;\n                e(null != t);\n                var x = 3 * L + A + 131074 >> 2;\n                for(n(t[r + 0], 255 & x, x >> 16, g, m), null != a && (x = 3 * A + L + 131074 >> 2, n(a[o + 0], 255 & x, x >> 16, v, b)), w = 1; w <= N; ++w){\n                    var S = s[c + w] | u[h + w] << 16, _ = l[f + w] | d[p + w] << 16, P = L + S + A + _ + 524296, k = P + 2 * (S + A) >> 3;\n                    x = k + L >> 1, L = (P = P + 2 * (L + _) >> 3) + S >> 1, n(t[r + 2 * w - 1], 255 & x, x >> 16, g, m + (2 * w - 1) * i), n(t[r + 2 * w - 0], 255 & L, L >> 16, g, m + (2 * w - 0) * i), null != a && (x = P + A >> 1, L = k + _ >> 1, n(a[o + 2 * w - 1], 255 & x, x >> 16, v, b + (2 * w - 1) * i), n(a[o + 2 * w + 0], 255 & L, L >> 16, v, b + (2 * w + 0) * i)), L = S, A = _;\n                }\n                1 & y || (x = 3 * L + A + 131074 >> 2, n(t[r + y - 1], 255 & x, x >> 16, g, m + (y - 1) * i), null != a && (x = 3 * A + L + 131074 >> 2, n(a[o + y - 1], 255 & x, x >> 16, v, b + (y - 1) * i)));\n            };\n        }\n        function br() {\n            vi[En] = bi, vi[qn] = wi, vi[Dn] = yi, vi[Rn] = Ni, vi[Tn] = Li, vi[Un] = Ai, vi[zn] = xi, vi[Hn] = wi, vi[Wn] = Ni, vi[Vn] = Li, vi[Gn] = Ai;\n        }\n        function yr(t) {\n            return t & ~Fi ? 0 > t ? 0 : 255 : t >> Ii;\n        }\n        function wr(t, e) {\n            return yr((19077 * t >> 8) + (26149 * e >> 8) - 14234);\n        }\n        function Nr(t, e, r) {\n            return yr((19077 * t >> 8) - (6419 * e >> 8) - (13320 * r >> 8) + 8708);\n        }\n        function Lr(t, e) {\n            return yr((19077 * t >> 8) + (33050 * e >> 8) - 17685);\n        }\n        function Ar(t, e, r, n, i) {\n            n[i + 0] = wr(t, r), n[i + 1] = Nr(t, e, r), n[i + 2] = Lr(t, e);\n        }\n        function xr(t, e, r, n, i) {\n            n[i + 0] = Lr(t, e), n[i + 1] = Nr(t, e, r), n[i + 2] = wr(t, r);\n        }\n        function Sr(t, e, r, n, i) {\n            var a = Nr(t, e, r);\n            e = a << 3 & 224 | Lr(t, e) >> 3, n[i + 0] = 248 & wr(t, r) | a >> 5, n[i + 1] = e;\n        }\n        function _r(t, e, r, n, i) {\n            var a = 240 & Lr(t, e) | 15;\n            n[i + 0] = 240 & wr(t, r) | Nr(t, e, r) >> 4, n[i + 1] = a;\n        }\n        function Pr(t, e, r, n, i) {\n            n[i + 0] = 255, Ar(t, e, r, n, i + 1);\n        }\n        function kr(t, e, r, n, i) {\n            xr(t, e, r, n, i), n[i + 3] = 255;\n        }\n        function Ir(t, e, r, n, i) {\n            Ar(t, e, r, n, i), n[i + 3] = 255;\n        }\n        function Vt(t, e) {\n            return 0 > t ? 0 : t > e ? e : t;\n        }\n        function Fr(e, r, n) {\n            t[e] = function(t, e, i, a, o, s, c, u, h) {\n                for(var l = u + (-2 & h) * n; u != l;)r(t[e + 0], i[a + 0], o[s + 0], c, u), r(t[e + 1], i[a + 0], o[s + 0], c, u + n), e += 2, ++a, ++s, u += 2 * n;\n                1 & h && r(t[e + 0], i[a + 0], o[s + 0], c, u);\n            };\n        }\n        function Cr(t, e, r) {\n            return 0 == r ? 0 == t ? 0 == e ? 6 : 5 : 0 == e ? 4 : 0 : r;\n        }\n        function jr(t, e, r, n, i) {\n            switch(t >>> 30){\n                case 3:\n                    on(e, r, n, i, 0);\n                    break;\n                case 2:\n                    sn(e, r, n, i);\n                    break;\n                case 1:\n                    un(e, r, n, i);\n            }\n        }\n        function Or(t, e) {\n            var r, a, o = e.M, s = e.Nb, c = t.oc, u = t.pc + 40, h = t.oc, l = t.pc + 584, f = t.oc, d = t.pc + 600;\n            for(r = 0; 16 > r; ++r)c[u + 32 * r - 1] = 129;\n            for(r = 0; 8 > r; ++r)h[l + 32 * r - 1] = 129, f[d + 32 * r - 1] = 129;\n            for(0 < o ? c[u - 1 - 32] = h[l - 1 - 32] = f[d - 1 - 32] = 129 : (i(c, u - 32 - 1, 127, 21), i(h, l - 32 - 1, 127, 9), i(f, d - 32 - 1, 127, 9)), a = 0; a < t.za; ++a){\n                var p = e.ya[e.aa + a];\n                if (0 < a) {\n                    for(r = -1; 16 > r; ++r)n(c, u + 32 * r - 4, c, u + 32 * r + 12, 4);\n                    for(r = -1; 8 > r; ++r)n(h, l + 32 * r - 4, h, l + 32 * r + 4, 4), n(f, d + 32 * r - 4, f, d + 32 * r + 4, 4);\n                }\n                var g = t.Gd, m = t.Hd + a, v = p.ad, b = p.Hc;\n                if (0 < o && (n(c, u - 32, g[m].y, 0, 16), n(h, l - 32, g[m].f, 0, 8), n(f, d - 32, g[m].ea, 0, 8)), p.Za) {\n                    var y = c, w = u - 32 + 16;\n                    for(0 < o && (a >= t.za - 1 ? i(y, w, g[m].y[15], 4) : n(y, w, g[m + 1].y, 0, 4)), r = 0; 4 > r; r++)y[w + 128 + r] = y[w + 256 + r] = y[w + 384 + r] = y[w + 0 + r];\n                    for(r = 0; 16 > r; ++r, b <<= 2)y = c, w = u + Di[r], fi[p.Ob[r]](y, w), jr(b, v, 16 * +r, y, w);\n                } else if (y = Cr(a, o, p.Ob[0]), li[y](c, u), 0 != b) for(r = 0; 16 > r; ++r, b <<= 2)jr(b, v, 16 * +r, c, u + Di[r]);\n                for(r = p.Gc, y = Cr(a, o, p.Dd), di[y](h, l), di[y](f, d), b = v, y = h, w = l, 255 & (p = r >> 0) && (170 & p ? cn(b, 256, y, w) : hn(b, 256, y, w)), p = f, b = d, 255 & (r >>= 8) && (170 & r ? cn(v, 320, p, b) : hn(v, 320, p, b)), o < t.Ub - 1 && (n(g[m].y, 0, c, u + 480, 16), n(g[m].f, 0, h, l + 224, 8), n(g[m].ea, 0, f, d + 224, 8)), r = 8 * s * t.B, g = t.sa, m = t.ta + 16 * a + 16 * s * t.R, v = t.qa, p = t.ra + 8 * a + r, b = t.Ha, y = t.Ia + 8 * a + r, r = 0; 16 > r; ++r)n(g, m + r * t.R, c, u + 32 * r, 16);\n                for(r = 0; 8 > r; ++r)n(v, p + r * t.B, h, l + 32 * r, 8), n(b, y + r * t.B, f, d + 32 * r, 8);\n            }\n        }\n        function Br(t, n, i, a, o, s, c, u, h) {\n            var l = [\n                0\n            ], f = [\n                0\n            ], d = 0, p = null != h ? h.kd : 0, g = null != h ? h : new nr;\n            if (null == t || 12 > i) return 7;\n            g.data = t, g.w = n, g.ha = i, n = [\n                n\n            ], i = [\n                i\n            ], g.gb = [\n                g.gb\n            ];\n            t: {\n                var m = n, b = i, y = g.gb;\n                if (e(null != t), e(null != b), e(null != y), y[0] = 0, 12 <= b[0] && !r(t, m[0], \"RIFF\")) {\n                    if (r(t, m[0] + 8, \"WEBP\")) {\n                        y = 3;\n                        break t;\n                    }\n                    var w = j(t, m[0] + 4);\n                    if (12 > w || 4294967286 < w) {\n                        y = 3;\n                        break t;\n                    }\n                    if (p && w > b[0] - 8) {\n                        y = 7;\n                        break t;\n                    }\n                    y[0] = w, m[0] += 12, b[0] -= 12;\n                }\n                y = 0;\n            }\n            if (0 != y) return y;\n            for(w = 0 < g.gb[0], i = i[0];;){\n                t: {\n                    var L = t;\n                    b = n, y = i;\n                    var A = l, x = f, S = m = [\n                        0\n                    ];\n                    if ((k = d = [\n                        d\n                    ])[0] = 0, 8 > y[0]) y = 7;\n                    else {\n                        if (!r(L, b[0], \"VP8X\")) {\n                            if (10 != j(L, b[0] + 4)) {\n                                y = 3;\n                                break t;\n                            }\n                            if (18 > y[0]) {\n                                y = 7;\n                                break t;\n                            }\n                            var _ = j(L, b[0] + 8), P = 1 + C(L, b[0] + 12);\n                            if (2147483648 <= P * (L = 1 + C(L, b[0] + 15))) {\n                                y = 3;\n                                break t;\n                            }\n                            null != S && (S[0] = _), null != A && (A[0] = P), null != x && (x[0] = L), b[0] += 18, y[0] -= 18, k[0] = 1;\n                        }\n                        y = 0;\n                    }\n                }\n                if (d = d[0], m = m[0], 0 != y) return y;\n                if (b = !!(2 & m), !w && d) return 3;\n                if (null != s && (s[0] = !!(16 & m)), null != c && (c[0] = b), null != u && (u[0] = 0), c = l[0], m = f[0], d && b && null == h) {\n                    y = 0;\n                    break;\n                }\n                if (4 > i) {\n                    y = 7;\n                    break;\n                }\n                if (w && d || !w && !d && !r(t, n[0], \"ALPH\")) {\n                    i = [\n                        i\n                    ], g.na = [\n                        g.na\n                    ], g.P = [\n                        g.P\n                    ], g.Sa = [\n                        g.Sa\n                    ];\n                    t: {\n                        _ = t, y = n, w = i;\n                        var k = g.gb;\n                        A = g.na, x = g.P, S = g.Sa;\n                        P = 22, e(null != _), e(null != w), L = y[0];\n                        var I = w[0];\n                        for(e(null != A), e(null != S), A[0] = null, x[0] = null, S[0] = 0;;){\n                            if (y[0] = L, w[0] = I, 8 > I) {\n                                y = 7;\n                                break t;\n                            }\n                            var F = j(_, L + 4);\n                            if (4294967286 < F) {\n                                y = 3;\n                                break t;\n                            }\n                            var O = 8 + F + 1 & -2;\n                            if (P += O, 0 < k && P > k) {\n                                y = 3;\n                                break t;\n                            }\n                            if (!r(_, L, \"VP8 \") || !r(_, L, \"VP8L\")) {\n                                y = 0;\n                                break t;\n                            }\n                            if (I[0] < O) {\n                                y = 7;\n                                break t;\n                            }\n                            r(_, L, \"ALPH\") || (A[0] = _, x[0] = L + 8, S[0] = F), L += O, I -= O;\n                        }\n                    }\n                    if (i = i[0], g.na = g.na[0], g.P = g.P[0], g.Sa = g.Sa[0], 0 != y) break;\n                }\n                i = [\n                    i\n                ], g.Ja = [\n                    g.Ja\n                ], g.xa = [\n                    g.xa\n                ];\n                t: if (k = t, y = n, w = i, A = g.gb[0], x = g.Ja, S = g.xa, _ = y[0], L = !r(k, _, \"VP8 \"), P = !r(k, _, \"VP8L\"), e(null != k), e(null != w), e(null != x), e(null != S), 8 > w[0]) y = 7;\n                else {\n                    if (L || P) {\n                        if (k = j(k, _ + 4), 12 <= A && k > A - 12) {\n                            y = 3;\n                            break t;\n                        }\n                        if (p && k > w[0] - 8) {\n                            y = 7;\n                            break t;\n                        }\n                        x[0] = k, y[0] += 8, w[0] -= 8, S[0] = P;\n                    } else S[0] = 5 <= w[0] && 47 == k[_ + 0] && !(k[_ + 4] >> 5), x[0] = w[0];\n                    y = 0;\n                }\n                if (i = i[0], g.Ja = g.Ja[0], g.xa = g.xa[0], n = n[0], 0 != y) break;\n                if (4294967286 < g.Ja) return 3;\n                if (null == u || b || (u[0] = g.xa ? 2 : 1), c = [\n                    c\n                ], m = [\n                    m\n                ], g.xa) {\n                    if (5 > i) {\n                        y = 7;\n                        break;\n                    }\n                    u = c, p = m, b = s, null == t || 5 > i ? t = 0 : 5 <= i && 47 == t[n + 0] && !(t[n + 4] >> 5) ? (w = [\n                        0\n                    ], k = [\n                        0\n                    ], A = [\n                        0\n                    ], v(x = new N, t, n, i), gt(x, w, k, A) ? (null != u && (u[0] = w[0]), null != p && (p[0] = k[0]), null != b && (b[0] = A[0]), t = 1) : t = 0) : t = 0;\n                } else {\n                    if (10 > i) {\n                        y = 7;\n                        break;\n                    }\n                    u = m, null == t || 10 > i || !Xt(t, n + 3, i - 3) ? t = 0 : (p = t[n + 0] | t[n + 1] << 8 | t[n + 2] << 16, b = 16383 & (t[n + 7] << 8 | t[n + 6]), t = 16383 & (t[n + 9] << 8 | t[n + 8]), 1 & p || 3 < (p >> 1 & 7) || !(p >> 4 & 1) || p >> 5 >= g.Ja || !b || !t ? t = 0 : (c && (c[0] = b), u && (u[0] = t), t = 1));\n                }\n                if (!t) return 3;\n                if (c = c[0], m = m[0], d && (l[0] != c || f[0] != m)) return 3;\n                null != h && (h[0] = g, h.offset = n - h.w, e(4294967286 > n - h.w), e(h.offset == h.ha - i));\n                break;\n            }\n            return 0 == y || 7 == y && d && null == h ? (null != s && (s[0] |= null != g.na && 0 < g.na.length), null != a && (a[0] = c), null != o && (o[0] = m), 0) : y;\n        }\n        function Mr(t, e, r) {\n            var n = e.width, i = e.height, a = 0, o = 0, s = n, c = i;\n            if (e.Da = null != t && 0 < t.Da, e.Da && (s = t.cd, c = t.bd, a = t.v, o = t.j, 11 > r || (a &= -2, o &= -2), 0 > a || 0 > o || 0 >= s || 0 >= c || a + s > n || o + c > i)) return 0;\n            if (e.v = a, e.j = o, e.va = a + s, e.o = o + c, e.U = s, e.T = c, e.da = null != t && 0 < t.da, e.da) {\n                if (!E(s, c, r = [\n                    t.ib\n                ], a = [\n                    t.hb\n                ])) return 0;\n                e.ib = r[0], e.hb = a[0];\n            }\n            return e.ob = null != t && t.ob, e.Kb = null == t || !t.Sd, e.da && (e.ob = e.ib < 3 * n / 4 && e.hb < 3 * i / 4, e.Kb = 0), 1;\n        }\n        function Er(t) {\n            if (null == t) return 2;\n            if (11 > t.S) {\n                var e = t.f.RGBA;\n                e.fb += (t.height - 1) * e.A, e.A = -e.A;\n            } else e = t.f.kb, t = t.height, e.O += (t - 1) * e.fa, e.fa = -e.fa, e.N += (t - 1 >> 1) * e.Ab, e.Ab = -e.Ab, e.W += (t - 1 >> 1) * e.Db, e.Db = -e.Db, null != e.F && (e.J += (t - 1) * e.lb, e.lb = -e.lb);\n            return 0;\n        }\n        function qr(t, e, r, n) {\n            if (null == n || 0 >= t || 0 >= e) return 2;\n            if (null != r) {\n                if (r.Da) {\n                    var i = r.cd, o = r.bd, s = -2 & r.v, c = -2 & r.j;\n                    if (0 > s || 0 > c || 0 >= i || 0 >= o || s + i > t || c + o > e) return 2;\n                    t = i, e = o;\n                }\n                if (r.da) {\n                    if (!E(t, e, i = [\n                        r.ib\n                    ], o = [\n                        r.hb\n                    ])) return 2;\n                    t = i[0], e = o[0];\n                }\n            }\n            n.width = t, n.height = e;\n            t: {\n                var u = n.width, h = n.height;\n                if (t = n.S, 0 >= u || 0 >= h || !(t >= En && 13 > t)) t = 2;\n                else {\n                    if (0 >= n.Rd && null == n.sd) {\n                        s = o = i = e = 0;\n                        var l = (c = u * zi[t]) * h;\n                        if (11 > t || (o = (h + 1) / 2 * (e = (u + 1) / 2), 12 == t && (s = (i = u) * h)), null == (h = a(l + 2 * o + s))) {\n                            t = 1;\n                            break t;\n                        }\n                        n.sd = h, 11 > t ? ((u = n.f.RGBA).eb = h, u.fb = 0, u.A = c, u.size = l) : ((u = n.f.kb).y = h, u.O = 0, u.fa = c, u.Fd = l, u.f = h, u.N = 0 + l, u.Ab = e, u.Cd = o, u.ea = h, u.W = 0 + l + o, u.Db = e, u.Ed = o, 12 == t && (u.F = h, u.J = 0 + l + 2 * o), u.Tc = s, u.lb = i);\n                    }\n                    if (e = 1, i = n.S, o = n.width, s = n.height, i >= En && 13 > i) if (11 > i) t = n.f.RGBA, e &= (c = Math.abs(t.A)) * (s - 1) + o <= t.size, e &= c >= o * zi[i], e &= null != t.eb;\n                    else {\n                        t = n.f.kb, c = (o + 1) / 2, l = (s + 1) / 2, u = Math.abs(t.fa);\n                        h = Math.abs(t.Ab);\n                        var f = Math.abs(t.Db), d = Math.abs(t.lb), p = d * (s - 1) + o;\n                        e &= u * (s - 1) + o <= t.Fd, e &= h * (l - 1) + c <= t.Cd, e = (e &= f * (l - 1) + c <= t.Ed) & u >= o & h >= c & f >= c, e &= null != t.y, e &= null != t.f, e &= null != t.ea, 12 == i && (e &= d >= o, e &= p <= t.Tc, e &= null != t.F);\n                    }\n                    else e = 0;\n                    t = e ? 0 : 2;\n                }\n            }\n            return 0 != t || null != r && r.fd && (t = Er(n)), t;\n        }\n        var Dr = 64, Rr = [\n            0,\n            1,\n            3,\n            7,\n            15,\n            31,\n            63,\n            127,\n            255,\n            511,\n            1023,\n            2047,\n            4095,\n            8191,\n            16383,\n            32767,\n            65535,\n            131071,\n            262143,\n            524287,\n            1048575,\n            2097151,\n            4194303,\n            8388607,\n            16777215\n        ], Tr = 24, Ur = 32, zr = 8, Hr = [\n            0,\n            0,\n            1,\n            1,\n            2,\n            2,\n            2,\n            2,\n            3,\n            3,\n            3,\n            3,\n            3,\n            3,\n            3,\n            3,\n            4,\n            4,\n            4,\n            4,\n            4,\n            4,\n            4,\n            4,\n            4,\n            4,\n            4,\n            4,\n            4,\n            4,\n            4,\n            4,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7\n        ];\n        R(\"Predictor0\", \"PredictorAdd0\"), t.Predictor0 = function() {\n            return 4278190080;\n        }, t.Predictor1 = function(t) {\n            return t;\n        }, t.Predictor2 = function(t, e, r) {\n            return e[r + 0];\n        }, t.Predictor3 = function(t, e, r) {\n            return e[r + 1];\n        }, t.Predictor4 = function(t, e, r) {\n            return e[r - 1];\n        }, t.Predictor5 = function(t, e, r) {\n            return U(U(t, e[r + 1]), e[r + 0]);\n        }, t.Predictor6 = function(t, e, r) {\n            return U(t, e[r - 1]);\n        }, t.Predictor7 = function(t, e, r) {\n            return U(t, e[r + 0]);\n        }, t.Predictor8 = function(t, e, r) {\n            return U(e[r - 1], e[r + 0]);\n        }, t.Predictor9 = function(t, e, r) {\n            return U(e[r + 0], e[r + 1]);\n        }, t.Predictor10 = function(t, e, r) {\n            return U(U(t, e[r - 1]), U(e[r + 0], e[r + 1]));\n        }, t.Predictor11 = function(t, e, r) {\n            var n = e[r + 0];\n            return 0 >= W(n >> 24 & 255, t >> 24 & 255, (e = e[r - 1]) >> 24 & 255) + W(n >> 16 & 255, t >> 16 & 255, e >> 16 & 255) + W(n >> 8 & 255, t >> 8 & 255, e >> 8 & 255) + W(255 & n, 255 & t, 255 & e) ? n : t;\n        }, t.Predictor12 = function(t, e, r) {\n            var n = e[r + 0];\n            return (z((t >> 24 & 255) + (n >> 24 & 255) - ((e = e[r - 1]) >> 24 & 255)) << 24 | z((t >> 16 & 255) + (n >> 16 & 255) - (e >> 16 & 255)) << 16 | z((t >> 8 & 255) + (n >> 8 & 255) - (e >> 8 & 255)) << 8 | z((255 & t) + (255 & n) - (255 & e))) >>> 0;\n        }, t.Predictor13 = function(t, e, r) {\n            var n = e[r - 1];\n            return (H((t = U(t, e[r + 0])) >> 24 & 255, n >> 24 & 255) << 24 | H(t >> 16 & 255, n >> 16 & 255) << 16 | H(t >> 8 & 255, n >> 8 & 255) << 8 | H(t >> 0 & 255, n >> 0 & 255)) >>> 0;\n        };\n        var Wr = t.PredictorAdd0;\n        t.PredictorAdd1 = V, R(\"Predictor2\", \"PredictorAdd2\"), R(\"Predictor3\", \"PredictorAdd3\"), R(\"Predictor4\", \"PredictorAdd4\"), R(\"Predictor5\", \"PredictorAdd5\"), R(\"Predictor6\", \"PredictorAdd6\"), R(\"Predictor7\", \"PredictorAdd7\"), R(\"Predictor8\", \"PredictorAdd8\"), R(\"Predictor9\", \"PredictorAdd9\"), R(\"Predictor10\", \"PredictorAdd10\"), R(\"Predictor11\", \"PredictorAdd11\"), R(\"Predictor12\", \"PredictorAdd12\"), R(\"Predictor13\", \"PredictorAdd13\");\n        var Vr = t.PredictorAdd2;\n        X(\"ColorIndexInverseTransform\", \"MapARGB\", \"32b\", function(t) {\n            return t >> 8 & 255;\n        }, function(t) {\n            return t;\n        }), X(\"VP8LColorIndexInverseTransformAlpha\", \"MapAlpha\", \"8b\", function(t) {\n            return t;\n        }, function(t) {\n            return t >> 8 & 255;\n        });\n        var Gr, Yr = t.ColorIndexInverseTransform, Jr = t.MapARGB, Xr = t.VP8LColorIndexInverseTransformAlpha, Kr = t.MapAlpha, Zr = t.VP8LPredictorsAdd = [];\n        Zr.length = 16, (t.VP8LPredictors = []).length = 16, (t.VP8LPredictorsAdd_C = []).length = 16, (t.VP8LPredictors_C = []).length = 16;\n        var $r, Qr, tn, en, rn, nn, an, on, sn, cn, un, hn, ln, fn, dn, pn, gn, mn, vn, bn, yn, wn, Nn, Ln, An, xn, Sn, _n, Pn = a(511), kn = a(2041), In = a(225), Fn = a(767), Cn = 0, jn = kn, On = In, Bn = Fn, Mn = Pn, En = 0, qn = 1, Dn = 2, Rn = 3, Tn = 4, Un = 5, zn = 6, Hn = 7, Wn = 8, Vn = 9, Gn = 10, Yn = [\n            2,\n            3,\n            7\n        ], Jn = [\n            3,\n            3,\n            11\n        ], Xn = [\n            280,\n            256,\n            256,\n            256,\n            40\n        ], Kn = [\n            0,\n            1,\n            1,\n            1,\n            0\n        ], Zn = [\n            17,\n            18,\n            0,\n            1,\n            2,\n            3,\n            4,\n            5,\n            16,\n            6,\n            7,\n            8,\n            9,\n            10,\n            11,\n            12,\n            13,\n            14,\n            15\n        ], $n = [\n            24,\n            7,\n            23,\n            25,\n            40,\n            6,\n            39,\n            41,\n            22,\n            26,\n            38,\n            42,\n            56,\n            5,\n            55,\n            57,\n            21,\n            27,\n            54,\n            58,\n            37,\n            43,\n            72,\n            4,\n            71,\n            73,\n            20,\n            28,\n            53,\n            59,\n            70,\n            74,\n            36,\n            44,\n            88,\n            69,\n            75,\n            52,\n            60,\n            3,\n            87,\n            89,\n            19,\n            29,\n            86,\n            90,\n            35,\n            45,\n            68,\n            76,\n            85,\n            91,\n            51,\n            61,\n            104,\n            2,\n            103,\n            105,\n            18,\n            30,\n            102,\n            106,\n            34,\n            46,\n            84,\n            92,\n            67,\n            77,\n            101,\n            107,\n            50,\n            62,\n            120,\n            1,\n            119,\n            121,\n            83,\n            93,\n            17,\n            31,\n            100,\n            108,\n            66,\n            78,\n            118,\n            122,\n            33,\n            47,\n            117,\n            123,\n            49,\n            63,\n            99,\n            109,\n            82,\n            94,\n            0,\n            116,\n            124,\n            65,\n            79,\n            16,\n            32,\n            98,\n            110,\n            48,\n            115,\n            125,\n            81,\n            95,\n            64,\n            114,\n            126,\n            97,\n            111,\n            80,\n            113,\n            127,\n            96,\n            112\n        ], Qn = [\n            2954,\n            2956,\n            2958,\n            2962,\n            2970,\n            2986,\n            3018,\n            3082,\n            3212,\n            3468,\n            3980,\n            5004\n        ], ti = 8, ei = [\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n            10,\n            11,\n            12,\n            13,\n            14,\n            15,\n            16,\n            17,\n            17,\n            18,\n            19,\n            20,\n            20,\n            21,\n            21,\n            22,\n            22,\n            23,\n            23,\n            24,\n            25,\n            25,\n            26,\n            27,\n            28,\n            29,\n            30,\n            31,\n            32,\n            33,\n            34,\n            35,\n            36,\n            37,\n            37,\n            38,\n            39,\n            40,\n            41,\n            42,\n            43,\n            44,\n            45,\n            46,\n            46,\n            47,\n            48,\n            49,\n            50,\n            51,\n            52,\n            53,\n            54,\n            55,\n            56,\n            57,\n            58,\n            59,\n            60,\n            61,\n            62,\n            63,\n            64,\n            65,\n            66,\n            67,\n            68,\n            69,\n            70,\n            71,\n            72,\n            73,\n            74,\n            75,\n            76,\n            76,\n            77,\n            78,\n            79,\n            80,\n            81,\n            82,\n            83,\n            84,\n            85,\n            86,\n            87,\n            88,\n            89,\n            91,\n            93,\n            95,\n            96,\n            98,\n            100,\n            101,\n            102,\n            104,\n            106,\n            108,\n            110,\n            112,\n            114,\n            116,\n            118,\n            122,\n            124,\n            126,\n            128,\n            130,\n            132,\n            134,\n            136,\n            138,\n            140,\n            143,\n            145,\n            148,\n            151,\n            154,\n            157\n        ], ri = [\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n            11,\n            12,\n            13,\n            14,\n            15,\n            16,\n            17,\n            18,\n            19,\n            20,\n            21,\n            22,\n            23,\n            24,\n            25,\n            26,\n            27,\n            28,\n            29,\n            30,\n            31,\n            32,\n            33,\n            34,\n            35,\n            36,\n            37,\n            38,\n            39,\n            40,\n            41,\n            42,\n            43,\n            44,\n            45,\n            46,\n            47,\n            48,\n            49,\n            50,\n            51,\n            52,\n            53,\n            54,\n            55,\n            56,\n            57,\n            58,\n            60,\n            62,\n            64,\n            66,\n            68,\n            70,\n            72,\n            74,\n            76,\n            78,\n            80,\n            82,\n            84,\n            86,\n            88,\n            90,\n            92,\n            94,\n            96,\n            98,\n            100,\n            102,\n            104,\n            106,\n            108,\n            110,\n            112,\n            114,\n            116,\n            119,\n            122,\n            125,\n            128,\n            131,\n            134,\n            137,\n            140,\n            143,\n            146,\n            149,\n            152,\n            155,\n            158,\n            161,\n            164,\n            167,\n            170,\n            173,\n            177,\n            181,\n            185,\n            189,\n            193,\n            197,\n            201,\n            205,\n            209,\n            213,\n            217,\n            221,\n            225,\n            229,\n            234,\n            239,\n            245,\n            249,\n            254,\n            259,\n            264,\n            269,\n            274,\n            279,\n            284\n        ], ni = null, ii = [\n            [\n                173,\n                148,\n                140,\n                0\n            ],\n            [\n                176,\n                155,\n                140,\n                135,\n                0\n            ],\n            [\n                180,\n                157,\n                141,\n                134,\n                130,\n                0\n            ],\n            [\n                254,\n                254,\n                243,\n                230,\n                196,\n                177,\n                153,\n                140,\n                133,\n                130,\n                129,\n                0\n            ]\n        ], ai = [\n            0,\n            1,\n            4,\n            8,\n            5,\n            2,\n            3,\n            6,\n            9,\n            12,\n            13,\n            10,\n            7,\n            11,\n            14,\n            15\n        ], oi = [\n            -0,\n            1,\n            -1,\n            2,\n            -2,\n            3,\n            4,\n            6,\n            -3,\n            5,\n            -4,\n            -5,\n            -6,\n            7,\n            -7,\n            8,\n            -8,\n            -9\n        ], si = [\n            [\n                [\n                    [\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ]\n                ],\n                [\n                    [\n                        253,\n                        136,\n                        254,\n                        255,\n                        228,\n                        219,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        189,\n                        129,\n                        242,\n                        255,\n                        227,\n                        213,\n                        255,\n                        219,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        106,\n                        126,\n                        227,\n                        252,\n                        214,\n                        209,\n                        255,\n                        255,\n                        128,\n                        128,\n                        128\n                    ]\n                ],\n                [\n                    [\n                        1,\n                        98,\n                        248,\n                        255,\n                        236,\n                        226,\n                        255,\n                        255,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        181,\n                        133,\n                        238,\n                        254,\n                        221,\n                        234,\n                        255,\n                        154,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        78,\n                        134,\n                        202,\n                        247,\n                        198,\n                        180,\n                        255,\n                        219,\n                        128,\n                        128,\n                        128\n                    ]\n                ],\n                [\n                    [\n                        1,\n                        185,\n                        249,\n                        255,\n                        243,\n                        255,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        184,\n                        150,\n                        247,\n                        255,\n                        236,\n                        224,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        77,\n                        110,\n                        216,\n                        255,\n                        236,\n                        230,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ]\n                ],\n                [\n                    [\n                        1,\n                        101,\n                        251,\n                        255,\n                        241,\n                        255,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        170,\n                        139,\n                        241,\n                        252,\n                        236,\n                        209,\n                        255,\n                        255,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        37,\n                        116,\n                        196,\n                        243,\n                        228,\n                        255,\n                        255,\n                        255,\n                        128,\n                        128,\n                        128\n                    ]\n                ],\n                [\n                    [\n                        1,\n                        204,\n                        254,\n                        255,\n                        245,\n                        255,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        207,\n                        160,\n                        250,\n                        255,\n                        238,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        102,\n                        103,\n                        231,\n                        255,\n                        211,\n                        171,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ]\n                ],\n                [\n                    [\n                        1,\n                        152,\n                        252,\n                        255,\n                        240,\n                        255,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        177,\n                        135,\n                        243,\n                        255,\n                        234,\n                        225,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        80,\n                        129,\n                        211,\n                        255,\n                        194,\n                        224,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ]\n                ],\n                [\n                    [\n                        1,\n                        1,\n                        255,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        246,\n                        1,\n                        255,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        255,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ]\n                ]\n            ],\n            [\n                [\n                    [\n                        198,\n                        35,\n                        237,\n                        223,\n                        193,\n                        187,\n                        162,\n                        160,\n                        145,\n                        155,\n                        62\n                    ],\n                    [\n                        131,\n                        45,\n                        198,\n                        221,\n                        172,\n                        176,\n                        220,\n                        157,\n                        252,\n                        221,\n                        1\n                    ],\n                    [\n                        68,\n                        47,\n                        146,\n                        208,\n                        149,\n                        167,\n                        221,\n                        162,\n                        255,\n                        223,\n                        128\n                    ]\n                ],\n                [\n                    [\n                        1,\n                        149,\n                        241,\n                        255,\n                        221,\n                        224,\n                        255,\n                        255,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        184,\n                        141,\n                        234,\n                        253,\n                        222,\n                        220,\n                        255,\n                        199,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        81,\n                        99,\n                        181,\n                        242,\n                        176,\n                        190,\n                        249,\n                        202,\n                        255,\n                        255,\n                        128\n                    ]\n                ],\n                [\n                    [\n                        1,\n                        129,\n                        232,\n                        253,\n                        214,\n                        197,\n                        242,\n                        196,\n                        255,\n                        255,\n                        128\n                    ],\n                    [\n                        99,\n                        121,\n                        210,\n                        250,\n                        201,\n                        198,\n                        255,\n                        202,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        23,\n                        91,\n                        163,\n                        242,\n                        170,\n                        187,\n                        247,\n                        210,\n                        255,\n                        255,\n                        128\n                    ]\n                ],\n                [\n                    [\n                        1,\n                        200,\n                        246,\n                        255,\n                        234,\n                        255,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        109,\n                        178,\n                        241,\n                        255,\n                        231,\n                        245,\n                        255,\n                        255,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        44,\n                        130,\n                        201,\n                        253,\n                        205,\n                        192,\n                        255,\n                        255,\n                        128,\n                        128,\n                        128\n                    ]\n                ],\n                [\n                    [\n                        1,\n                        132,\n                        239,\n                        251,\n                        219,\n                        209,\n                        255,\n                        165,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        94,\n                        136,\n                        225,\n                        251,\n                        218,\n                        190,\n                        255,\n                        255,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        22,\n                        100,\n                        174,\n                        245,\n                        186,\n                        161,\n                        255,\n                        199,\n                        128,\n                        128,\n                        128\n                    ]\n                ],\n                [\n                    [\n                        1,\n                        182,\n                        249,\n                        255,\n                        232,\n                        235,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        124,\n                        143,\n                        241,\n                        255,\n                        227,\n                        234,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        35,\n                        77,\n                        181,\n                        251,\n                        193,\n                        211,\n                        255,\n                        205,\n                        128,\n                        128,\n                        128\n                    ]\n                ],\n                [\n                    [\n                        1,\n                        157,\n                        247,\n                        255,\n                        236,\n                        231,\n                        255,\n                        255,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        121,\n                        141,\n                        235,\n                        255,\n                        225,\n                        227,\n                        255,\n                        255,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        45,\n                        99,\n                        188,\n                        251,\n                        195,\n                        217,\n                        255,\n                        224,\n                        128,\n                        128,\n                        128\n                    ]\n                ],\n                [\n                    [\n                        1,\n                        1,\n                        251,\n                        255,\n                        213,\n                        255,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        203,\n                        1,\n                        248,\n                        255,\n                        255,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        137,\n                        1,\n                        177,\n                        255,\n                        224,\n                        255,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ]\n                ]\n            ],\n            [\n                [\n                    [\n                        253,\n                        9,\n                        248,\n                        251,\n                        207,\n                        208,\n                        255,\n                        192,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        175,\n                        13,\n                        224,\n                        243,\n                        193,\n                        185,\n                        249,\n                        198,\n                        255,\n                        255,\n                        128\n                    ],\n                    [\n                        73,\n                        17,\n                        171,\n                        221,\n                        161,\n                        179,\n                        236,\n                        167,\n                        255,\n                        234,\n                        128\n                    ]\n                ],\n                [\n                    [\n                        1,\n                        95,\n                        247,\n                        253,\n                        212,\n                        183,\n                        255,\n                        255,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        239,\n                        90,\n                        244,\n                        250,\n                        211,\n                        209,\n                        255,\n                        255,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        155,\n                        77,\n                        195,\n                        248,\n                        188,\n                        195,\n                        255,\n                        255,\n                        128,\n                        128,\n                        128\n                    ]\n                ],\n                [\n                    [\n                        1,\n                        24,\n                        239,\n                        251,\n                        218,\n                        219,\n                        255,\n                        205,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        201,\n                        51,\n                        219,\n                        255,\n                        196,\n                        186,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        69,\n                        46,\n                        190,\n                        239,\n                        201,\n                        218,\n                        255,\n                        228,\n                        128,\n                        128,\n                        128\n                    ]\n                ],\n                [\n                    [\n                        1,\n                        191,\n                        251,\n                        255,\n                        255,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        223,\n                        165,\n                        249,\n                        255,\n                        213,\n                        255,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        141,\n                        124,\n                        248,\n                        255,\n                        255,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ]\n                ],\n                [\n                    [\n                        1,\n                        16,\n                        248,\n                        255,\n                        255,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        190,\n                        36,\n                        230,\n                        255,\n                        236,\n                        255,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        149,\n                        1,\n                        255,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ]\n                ],\n                [\n                    [\n                        1,\n                        226,\n                        255,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        247,\n                        192,\n                        255,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        240,\n                        128,\n                        255,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ]\n                ],\n                [\n                    [\n                        1,\n                        134,\n                        252,\n                        255,\n                        255,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        213,\n                        62,\n                        250,\n                        255,\n                        255,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        55,\n                        93,\n                        255,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ]\n                ],\n                [\n                    [\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ]\n                ]\n            ],\n            [\n                [\n                    [\n                        202,\n                        24,\n                        213,\n                        235,\n                        186,\n                        191,\n                        220,\n                        160,\n                        240,\n                        175,\n                        255\n                    ],\n                    [\n                        126,\n                        38,\n                        182,\n                        232,\n                        169,\n                        184,\n                        228,\n                        174,\n                        255,\n                        187,\n                        128\n                    ],\n                    [\n                        61,\n                        46,\n                        138,\n                        219,\n                        151,\n                        178,\n                        240,\n                        170,\n                        255,\n                        216,\n                        128\n                    ]\n                ],\n                [\n                    [\n                        1,\n                        112,\n                        230,\n                        250,\n                        199,\n                        191,\n                        247,\n                        159,\n                        255,\n                        255,\n                        128\n                    ],\n                    [\n                        166,\n                        109,\n                        228,\n                        252,\n                        211,\n                        215,\n                        255,\n                        174,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        39,\n                        77,\n                        162,\n                        232,\n                        172,\n                        180,\n                        245,\n                        178,\n                        255,\n                        255,\n                        128\n                    ]\n                ],\n                [\n                    [\n                        1,\n                        52,\n                        220,\n                        246,\n                        198,\n                        199,\n                        249,\n                        220,\n                        255,\n                        255,\n                        128\n                    ],\n                    [\n                        124,\n                        74,\n                        191,\n                        243,\n                        183,\n                        193,\n                        250,\n                        221,\n                        255,\n                        255,\n                        128\n                    ],\n                    [\n                        24,\n                        71,\n                        130,\n                        219,\n                        154,\n                        170,\n                        243,\n                        182,\n                        255,\n                        255,\n                        128\n                    ]\n                ],\n                [\n                    [\n                        1,\n                        182,\n                        225,\n                        249,\n                        219,\n                        240,\n                        255,\n                        224,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        149,\n                        150,\n                        226,\n                        252,\n                        216,\n                        205,\n                        255,\n                        171,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        28,\n                        108,\n                        170,\n                        242,\n                        183,\n                        194,\n                        254,\n                        223,\n                        255,\n                        255,\n                        128\n                    ]\n                ],\n                [\n                    [\n                        1,\n                        81,\n                        230,\n                        252,\n                        204,\n                        203,\n                        255,\n                        192,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        123,\n                        102,\n                        209,\n                        247,\n                        188,\n                        196,\n                        255,\n                        233,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        20,\n                        95,\n                        153,\n                        243,\n                        164,\n                        173,\n                        255,\n                        203,\n                        128,\n                        128,\n                        128\n                    ]\n                ],\n                [\n                    [\n                        1,\n                        222,\n                        248,\n                        255,\n                        216,\n                        213,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        168,\n                        175,\n                        246,\n                        252,\n                        235,\n                        205,\n                        255,\n                        255,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        47,\n                        116,\n                        215,\n                        255,\n                        211,\n                        212,\n                        255,\n                        255,\n                        128,\n                        128,\n                        128\n                    ]\n                ],\n                [\n                    [\n                        1,\n                        121,\n                        236,\n                        253,\n                        212,\n                        214,\n                        255,\n                        255,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        141,\n                        84,\n                        213,\n                        252,\n                        201,\n                        202,\n                        255,\n                        219,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        42,\n                        80,\n                        160,\n                        240,\n                        162,\n                        185,\n                        255,\n                        205,\n                        128,\n                        128,\n                        128\n                    ]\n                ],\n                [\n                    [\n                        1,\n                        1,\n                        255,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        244,\n                        1,\n                        255,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        238,\n                        1,\n                        255,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ]\n                ]\n            ]\n        ], ci = [\n            [\n                [\n                    231,\n                    120,\n                    48,\n                    89,\n                    115,\n                    113,\n                    120,\n                    152,\n                    112\n                ],\n                [\n                    152,\n                    179,\n                    64,\n                    126,\n                    170,\n                    118,\n                    46,\n                    70,\n                    95\n                ],\n                [\n                    175,\n                    69,\n                    143,\n                    80,\n                    85,\n                    82,\n                    72,\n                    155,\n                    103\n                ],\n                [\n                    56,\n                    58,\n                    10,\n                    171,\n                    218,\n                    189,\n                    17,\n                    13,\n                    152\n                ],\n                [\n                    114,\n                    26,\n                    17,\n                    163,\n                    44,\n                    195,\n                    21,\n                    10,\n                    173\n                ],\n                [\n                    121,\n                    24,\n                    80,\n                    195,\n                    26,\n                    62,\n                    44,\n                    64,\n                    85\n                ],\n                [\n                    144,\n                    71,\n                    10,\n                    38,\n                    171,\n                    213,\n                    144,\n                    34,\n                    26\n                ],\n                [\n                    170,\n                    46,\n                    55,\n                    19,\n                    136,\n                    160,\n                    33,\n                    206,\n                    71\n                ],\n                [\n                    63,\n                    20,\n                    8,\n                    114,\n                    114,\n                    208,\n                    12,\n                    9,\n                    226\n                ],\n                [\n                    81,\n                    40,\n                    11,\n                    96,\n                    182,\n                    84,\n                    29,\n                    16,\n                    36\n                ]\n            ],\n            [\n                [\n                    134,\n                    183,\n                    89,\n                    137,\n                    98,\n                    101,\n                    106,\n                    165,\n                    148\n                ],\n                [\n                    72,\n                    187,\n                    100,\n                    130,\n                    157,\n                    111,\n                    32,\n                    75,\n                    80\n                ],\n                [\n                    66,\n                    102,\n                    167,\n                    99,\n                    74,\n                    62,\n                    40,\n                    234,\n                    128\n                ],\n                [\n                    41,\n                    53,\n                    9,\n                    178,\n                    241,\n                    141,\n                    26,\n                    8,\n                    107\n                ],\n                [\n                    74,\n                    43,\n                    26,\n                    146,\n                    73,\n                    166,\n                    49,\n                    23,\n                    157\n                ],\n                [\n                    65,\n                    38,\n                    105,\n                    160,\n                    51,\n                    52,\n                    31,\n                    115,\n                    128\n                ],\n                [\n                    104,\n                    79,\n                    12,\n                    27,\n                    217,\n                    255,\n                    87,\n                    17,\n                    7\n                ],\n                [\n                    87,\n                    68,\n                    71,\n                    44,\n                    114,\n                    51,\n                    15,\n                    186,\n                    23\n                ],\n                [\n                    47,\n                    41,\n                    14,\n                    110,\n                    182,\n                    183,\n                    21,\n                    17,\n                    194\n                ],\n                [\n                    66,\n                    45,\n                    25,\n                    102,\n                    197,\n                    189,\n                    23,\n                    18,\n                    22\n                ]\n            ],\n            [\n                [\n                    88,\n                    88,\n                    147,\n                    150,\n                    42,\n                    46,\n                    45,\n                    196,\n                    205\n                ],\n                [\n                    43,\n                    97,\n                    183,\n                    117,\n                    85,\n                    38,\n                    35,\n                    179,\n                    61\n                ],\n                [\n                    39,\n                    53,\n                    200,\n                    87,\n                    26,\n                    21,\n                    43,\n                    232,\n                    171\n                ],\n                [\n                    56,\n                    34,\n                    51,\n                    104,\n                    114,\n                    102,\n                    29,\n                    93,\n                    77\n                ],\n                [\n                    39,\n                    28,\n                    85,\n                    171,\n                    58,\n                    165,\n                    90,\n                    98,\n                    64\n                ],\n                [\n                    34,\n                    22,\n                    116,\n                    206,\n                    23,\n                    34,\n                    43,\n                    166,\n                    73\n                ],\n                [\n                    107,\n                    54,\n                    32,\n                    26,\n                    51,\n                    1,\n                    81,\n                    43,\n                    31\n                ],\n                [\n                    68,\n                    25,\n                    106,\n                    22,\n                    64,\n                    171,\n                    36,\n                    225,\n                    114\n                ],\n                [\n                    34,\n                    19,\n                    21,\n                    102,\n                    132,\n                    188,\n                    16,\n                    76,\n                    124\n                ],\n                [\n                    62,\n                    18,\n                    78,\n                    95,\n                    85,\n                    57,\n                    50,\n                    48,\n                    51\n                ]\n            ],\n            [\n                [\n                    193,\n                    101,\n                    35,\n                    159,\n                    215,\n                    111,\n                    89,\n                    46,\n                    111\n                ],\n                [\n                    60,\n                    148,\n                    31,\n                    172,\n                    219,\n                    228,\n                    21,\n                    18,\n                    111\n                ],\n                [\n                    112,\n                    113,\n                    77,\n                    85,\n                    179,\n                    255,\n                    38,\n                    120,\n                    114\n                ],\n                [\n                    40,\n                    42,\n                    1,\n                    196,\n                    245,\n                    209,\n                    10,\n                    25,\n                    109\n                ],\n                [\n                    88,\n                    43,\n                    29,\n                    140,\n                    166,\n                    213,\n                    37,\n                    43,\n                    154\n                ],\n                [\n                    61,\n                    63,\n                    30,\n                    155,\n                    67,\n                    45,\n                    68,\n                    1,\n                    209\n                ],\n                [\n                    100,\n                    80,\n                    8,\n                    43,\n                    154,\n                    1,\n                    51,\n                    26,\n                    71\n                ],\n                [\n                    142,\n                    78,\n                    78,\n                    16,\n                    255,\n                    128,\n                    34,\n                    197,\n                    171\n                ],\n                [\n                    41,\n                    40,\n                    5,\n                    102,\n                    211,\n                    183,\n                    4,\n                    1,\n                    221\n                ],\n                [\n                    51,\n                    50,\n                    17,\n                    168,\n                    209,\n                    192,\n                    23,\n                    25,\n                    82\n                ]\n            ],\n            [\n                [\n                    138,\n                    31,\n                    36,\n                    171,\n                    27,\n                    166,\n                    38,\n                    44,\n                    229\n                ],\n                [\n                    67,\n                    87,\n                    58,\n                    169,\n                    82,\n                    115,\n                    26,\n                    59,\n                    179\n                ],\n                [\n                    63,\n                    59,\n                    90,\n                    180,\n                    59,\n                    166,\n                    93,\n                    73,\n                    154\n                ],\n                [\n                    40,\n                    40,\n                    21,\n                    116,\n                    143,\n                    209,\n                    34,\n                    39,\n                    175\n                ],\n                [\n                    47,\n                    15,\n                    16,\n                    183,\n                    34,\n                    223,\n                    49,\n                    45,\n                    183\n                ],\n                [\n                    46,\n                    17,\n                    33,\n                    183,\n                    6,\n                    98,\n                    15,\n                    32,\n                    183\n                ],\n                [\n                    57,\n                    46,\n                    22,\n                    24,\n                    128,\n                    1,\n                    54,\n                    17,\n                    37\n                ],\n                [\n                    65,\n                    32,\n                    73,\n                    115,\n                    28,\n                    128,\n                    23,\n                    128,\n                    205\n                ],\n                [\n                    40,\n                    3,\n                    9,\n                    115,\n                    51,\n                    192,\n                    18,\n                    6,\n                    223\n                ],\n                [\n                    87,\n                    37,\n                    9,\n                    115,\n                    59,\n                    77,\n                    64,\n                    21,\n                    47\n                ]\n            ],\n            [\n                [\n                    104,\n                    55,\n                    44,\n                    218,\n                    9,\n                    54,\n                    53,\n                    130,\n                    226\n                ],\n                [\n                    64,\n                    90,\n                    70,\n                    205,\n                    40,\n                    41,\n                    23,\n                    26,\n                    57\n                ],\n                [\n                    54,\n                    57,\n                    112,\n                    184,\n                    5,\n                    41,\n                    38,\n                    166,\n                    213\n                ],\n                [\n                    30,\n                    34,\n                    26,\n                    133,\n                    152,\n                    116,\n                    10,\n                    32,\n                    134\n                ],\n                [\n                    39,\n                    19,\n                    53,\n                    221,\n                    26,\n                    114,\n                    32,\n                    73,\n                    255\n                ],\n                [\n                    31,\n                    9,\n                    65,\n                    234,\n                    2,\n                    15,\n                    1,\n                    118,\n                    73\n                ],\n                [\n                    75,\n                    32,\n                    12,\n                    51,\n                    192,\n                    255,\n                    160,\n                    43,\n                    51\n                ],\n                [\n                    88,\n                    31,\n                    35,\n                    67,\n                    102,\n                    85,\n                    55,\n                    186,\n                    85\n                ],\n                [\n                    56,\n                    21,\n                    23,\n                    111,\n                    59,\n                    205,\n                    45,\n                    37,\n                    192\n                ],\n                [\n                    55,\n                    38,\n                    70,\n                    124,\n                    73,\n                    102,\n                    1,\n                    34,\n                    98\n                ]\n            ],\n            [\n                [\n                    125,\n                    98,\n                    42,\n                    88,\n                    104,\n                    85,\n                    117,\n                    175,\n                    82\n                ],\n                [\n                    95,\n                    84,\n                    53,\n                    89,\n                    128,\n                    100,\n                    113,\n                    101,\n                    45\n                ],\n                [\n                    75,\n                    79,\n                    123,\n                    47,\n                    51,\n                    128,\n                    81,\n                    171,\n                    1\n                ],\n                [\n                    57,\n                    17,\n                    5,\n                    71,\n                    102,\n                    57,\n                    53,\n                    41,\n                    49\n                ],\n                [\n                    38,\n                    33,\n                    13,\n                    121,\n                    57,\n                    73,\n                    26,\n                    1,\n                    85\n                ],\n                [\n                    41,\n                    10,\n                    67,\n                    138,\n                    77,\n                    110,\n                    90,\n                    47,\n                    114\n                ],\n                [\n                    115,\n                    21,\n                    2,\n                    10,\n                    102,\n                    255,\n                    166,\n                    23,\n                    6\n                ],\n                [\n                    101,\n                    29,\n                    16,\n                    10,\n                    85,\n                    128,\n                    101,\n                    196,\n                    26\n                ],\n                [\n                    57,\n                    18,\n                    10,\n                    102,\n                    102,\n                    213,\n                    34,\n                    20,\n                    43\n                ],\n                [\n                    117,\n                    20,\n                    15,\n                    36,\n                    163,\n                    128,\n                    68,\n                    1,\n                    26\n                ]\n            ],\n            [\n                [\n                    102,\n                    61,\n                    71,\n                    37,\n                    34,\n                    53,\n                    31,\n                    243,\n                    192\n                ],\n                [\n                    69,\n                    60,\n                    71,\n                    38,\n                    73,\n                    119,\n                    28,\n                    222,\n                    37\n                ],\n                [\n                    68,\n                    45,\n                    128,\n                    34,\n                    1,\n                    47,\n                    11,\n                    245,\n                    171\n                ],\n                [\n                    62,\n                    17,\n                    19,\n                    70,\n                    146,\n                    85,\n                    55,\n                    62,\n                    70\n                ],\n                [\n                    37,\n                    43,\n                    37,\n                    154,\n                    100,\n                    163,\n                    85,\n                    160,\n                    1\n                ],\n                [\n                    63,\n                    9,\n                    92,\n                    136,\n                    28,\n                    64,\n                    32,\n                    201,\n                    85\n                ],\n                [\n                    75,\n                    15,\n                    9,\n                    9,\n                    64,\n                    255,\n                    184,\n                    119,\n                    16\n                ],\n                [\n                    86,\n                    6,\n                    28,\n                    5,\n                    64,\n                    255,\n                    25,\n                    248,\n                    1\n                ],\n                [\n                    56,\n                    8,\n                    17,\n                    132,\n                    137,\n                    255,\n                    55,\n                    116,\n                    128\n                ],\n                [\n                    58,\n                    15,\n                    20,\n                    82,\n                    135,\n                    57,\n                    26,\n                    121,\n                    40\n                ]\n            ],\n            [\n                [\n                    164,\n                    50,\n                    31,\n                    137,\n                    154,\n                    133,\n                    25,\n                    35,\n                    218\n                ],\n                [\n                    51,\n                    103,\n                    44,\n                    131,\n                    131,\n                    123,\n                    31,\n                    6,\n                    158\n                ],\n                [\n                    86,\n                    40,\n                    64,\n                    135,\n                    148,\n                    224,\n                    45,\n                    183,\n                    128\n                ],\n                [\n                    22,\n                    26,\n                    17,\n                    131,\n                    240,\n                    154,\n                    14,\n                    1,\n                    209\n                ],\n                [\n                    45,\n                    16,\n                    21,\n                    91,\n                    64,\n                    222,\n                    7,\n                    1,\n                    197\n                ],\n                [\n                    56,\n                    21,\n                    39,\n                    155,\n                    60,\n                    138,\n                    23,\n                    102,\n                    213\n                ],\n                [\n                    83,\n                    12,\n                    13,\n                    54,\n                    192,\n                    255,\n                    68,\n                    47,\n                    28\n                ],\n                [\n                    85,\n                    26,\n                    85,\n                    85,\n                    128,\n                    128,\n                    32,\n                    146,\n                    171\n                ],\n                [\n                    18,\n                    11,\n                    7,\n                    63,\n                    144,\n                    171,\n                    4,\n                    4,\n                    246\n                ],\n                [\n                    35,\n                    27,\n                    10,\n                    146,\n                    174,\n                    171,\n                    12,\n                    26,\n                    128\n                ]\n            ],\n            [\n                [\n                    190,\n                    80,\n                    35,\n                    99,\n                    180,\n                    80,\n                    126,\n                    54,\n                    45\n                ],\n                [\n                    85,\n                    126,\n                    47,\n                    87,\n                    176,\n                    51,\n                    41,\n                    20,\n                    32\n                ],\n                [\n                    101,\n                    75,\n                    128,\n                    139,\n                    118,\n                    146,\n                    116,\n                    128,\n                    85\n                ],\n                [\n                    56,\n                    41,\n                    15,\n                    176,\n                    236,\n                    85,\n                    37,\n                    9,\n                    62\n                ],\n                [\n                    71,\n                    30,\n                    17,\n                    119,\n                    118,\n                    255,\n                    17,\n                    18,\n                    138\n                ],\n                [\n                    101,\n                    38,\n                    60,\n                    138,\n                    55,\n                    70,\n                    43,\n                    26,\n                    142\n                ],\n                [\n                    146,\n                    36,\n                    19,\n                    30,\n                    171,\n                    255,\n                    97,\n                    27,\n                    20\n                ],\n                [\n                    138,\n                    45,\n                    61,\n                    62,\n                    219,\n                    1,\n                    81,\n                    188,\n                    64\n                ],\n                [\n                    32,\n                    41,\n                    20,\n                    117,\n                    151,\n                    142,\n                    20,\n                    21,\n                    163\n                ],\n                [\n                    112,\n                    19,\n                    12,\n                    61,\n                    195,\n                    128,\n                    48,\n                    4,\n                    24\n                ]\n            ]\n        ], ui = [\n            [\n                [\n                    [\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ]\n                ],\n                [\n                    [\n                        176,\n                        246,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        223,\n                        241,\n                        252,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        249,\n                        253,\n                        253,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ]\n                ],\n                [\n                    [\n                        255,\n                        244,\n                        252,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        234,\n                        254,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        253,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ]\n                ],\n                [\n                    [\n                        255,\n                        246,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        239,\n                        253,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        254,\n                        255,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ]\n                ],\n                [\n                    [\n                        255,\n                        248,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        251,\n                        255,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ]\n                ],\n                [\n                    [\n                        255,\n                        253,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        251,\n                        254,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        254,\n                        255,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ]\n                ],\n                [\n                    [\n                        255,\n                        254,\n                        253,\n                        255,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        250,\n                        255,\n                        254,\n                        255,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ]\n                ],\n                [\n                    [\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ]\n                ]\n            ],\n            [\n                [\n                    [\n                        217,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        225,\n                        252,\n                        241,\n                        253,\n                        255,\n                        255,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        234,\n                        250,\n                        241,\n                        250,\n                        253,\n                        255,\n                        253,\n                        254,\n                        255,\n                        255,\n                        255\n                    ]\n                ],\n                [\n                    [\n                        255,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        223,\n                        254,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        238,\n                        253,\n                        254,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ]\n                ],\n                [\n                    [\n                        255,\n                        248,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        249,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ]\n                ],\n                [\n                    [\n                        255,\n                        253,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        247,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ]\n                ],\n                [\n                    [\n                        255,\n                        253,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        252,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ]\n                ],\n                [\n                    [\n                        255,\n                        254,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        253,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ]\n                ],\n                [\n                    [\n                        255,\n                        254,\n                        253,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        250,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ]\n                ],\n                [\n                    [\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ]\n                ]\n            ],\n            [\n                [\n                    [\n                        186,\n                        251,\n                        250,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        234,\n                        251,\n                        244,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        251,\n                        251,\n                        243,\n                        253,\n                        254,\n                        255,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255\n                    ]\n                ],\n                [\n                    [\n                        255,\n                        253,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        236,\n                        253,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        251,\n                        253,\n                        253,\n                        254,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ]\n                ],\n                [\n                    [\n                        255,\n                        254,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        254,\n                        254,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ]\n                ],\n                [\n                    [\n                        255,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        254,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ]\n                ],\n                [\n                    [\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ]\n                ],\n                [\n                    [\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ]\n                ],\n                [\n                    [\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ]\n                ],\n                [\n                    [\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ]\n                ]\n            ],\n            [\n                [\n                    [\n                        248,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        250,\n                        254,\n                        252,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        248,\n                        254,\n                        249,\n                        253,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ]\n                ],\n                [\n                    [\n                        255,\n                        253,\n                        253,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        246,\n                        253,\n                        253,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        252,\n                        254,\n                        251,\n                        254,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ]\n                ],\n                [\n                    [\n                        255,\n                        254,\n                        252,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        248,\n                        254,\n                        253,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        253,\n                        255,\n                        254,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ]\n                ],\n                [\n                    [\n                        255,\n                        251,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        245,\n                        251,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        253,\n                        253,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ]\n                ],\n                [\n                    [\n                        255,\n                        251,\n                        253,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        252,\n                        253,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        255,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ]\n                ],\n                [\n                    [\n                        255,\n                        252,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        249,\n                        255,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        255,\n                        255,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ]\n                ],\n                [\n                    [\n                        255,\n                        255,\n                        253,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        250,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ]\n                ],\n                [\n                    [\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ]\n                ]\n            ]\n        ], hi = [\n            0,\n            1,\n            2,\n            3,\n            6,\n            4,\n            5,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            7,\n            0\n        ], li = [], fi = [], di = [], pi = 1, gi = 2, mi = [], vi = [];\n        vr(\"UpsampleRgbLinePair\", Ar, 3), vr(\"UpsampleBgrLinePair\", xr, 3), vr(\"UpsampleRgbaLinePair\", Ir, 4), vr(\"UpsampleBgraLinePair\", kr, 4), vr(\"UpsampleArgbLinePair\", Pr, 4), vr(\"UpsampleRgba4444LinePair\", _r, 2), vr(\"UpsampleRgb565LinePair\", Sr, 2);\n        var bi = t.UpsampleRgbLinePair, yi = t.UpsampleBgrLinePair, wi = t.UpsampleRgbaLinePair, Ni = t.UpsampleBgraLinePair, Li = t.UpsampleArgbLinePair, Ai = t.UpsampleRgba4444LinePair, xi = t.UpsampleRgb565LinePair, Si = 16, _i = 1 << Si - 1, Pi = -227, ki = 482, Ii = 6, Fi = (256 << Ii) - 1, Ci = 0, ji = a(256), Oi = a(256), Bi = a(256), Mi = a(256), Ei = a(ki - Pi), qi = a(ki - Pi);\n        Fr(\"YuvToRgbRow\", Ar, 3), Fr(\"YuvToBgrRow\", xr, 3), Fr(\"YuvToRgbaRow\", Ir, 4), Fr(\"YuvToBgraRow\", kr, 4), Fr(\"YuvToArgbRow\", Pr, 4), Fr(\"YuvToRgba4444Row\", _r, 2), Fr(\"YuvToRgb565Row\", Sr, 2);\n        var Di = [\n            0,\n            4,\n            8,\n            12,\n            128,\n            132,\n            136,\n            140,\n            256,\n            260,\n            264,\n            268,\n            384,\n            388,\n            392,\n            396\n        ], Ri = [\n            0,\n            2,\n            8\n        ], Ti = [\n            8,\n            7,\n            6,\n            4,\n            4,\n            2,\n            2,\n            2,\n            1,\n            1,\n            1,\n            1\n        ], Ui = 1;\n        this.WebPDecodeRGBA = function(t, r, n, i, a) {\n            var o = qn, s = new rr, c = new ot;\n            s.ba = c, c.S = o, c.width = [\n                c.width\n            ], c.height = [\n                c.height\n            ];\n            var u = c.width, h = c.height, l = new st;\n            if (null == l || null == t) var f = 2;\n            else e(null != l), f = Br(t, r, n, l.width, l.height, l.Pd, l.Qd, l.format, null);\n            if (0 != f ? u = 0 : (null != u && (u[0] = l.width[0]), null != h && (h[0] = l.height[0]), u = 1), u) {\n                c.width = c.width[0], c.height = c.height[0], null != i && (i[0] = c.width), null != a && (a[0] = c.height);\n                t: {\n                    if (i = new Gt, (a = new nr).data = t, a.w = r, a.ha = n, a.kd = 1, r = [\n                        0\n                    ], e(null != a), (0 == (t = Br(a.data, a.w, a.ha, null, null, null, r, null, a)) || 7 == t) && r[0] && (t = 4), 0 == (r = t)) {\n                        if (e(null != s), i.data = a.data, i.w = a.w + a.offset, i.ha = a.ha - a.offset, i.put = dt, i.ac = ft, i.bc = pt, i.ma = s, a.xa) {\n                            if (null == (t = kt())) {\n                                s = 1;\n                                break t;\n                            }\n                            if (function(t, r) {\n                                var n = [\n                                    0\n                                ], i = [\n                                    0\n                                ], a = [\n                                    0\n                                ];\n                                e: for(;;){\n                                    if (null == t) return 0;\n                                    if (null == r) return t.a = 2, 0;\n                                    if (t.l = r, t.a = 0, v(t.m, r.data, r.w, r.ha), !gt(t.m, n, i, a)) {\n                                        t.a = 3;\n                                        break e;\n                                    }\n                                    if (t.xb = gi, r.width = n[0], r.height = i[0], !It(n[0], i[0], 1, t, null)) break e;\n                                    return 1;\n                                }\n                                return e(0 != t.a), 0;\n                            }(t, i)) {\n                                if (i = 0 == (r = qr(i.width, i.height, s.Oa, s.ba))) {\n                                    e: {\n                                        i = t;\n                                        r: for(;;){\n                                            if (null == i) {\n                                                i = 0;\n                                                break e;\n                                            }\n                                            if (e(null != i.s.yc), e(null != i.s.Ya), e(0 < i.s.Wb), e(null != (n = i.l)), e(null != (a = n.ma)), 0 != i.xb) {\n                                                if (i.ca = a.ba, i.tb = a.tb, e(null != i.ca), !Mr(a.Oa, n, Rn)) {\n                                                    i.a = 2;\n                                                    break r;\n                                                }\n                                                if (!Ft(i, n.width)) break r;\n                                                if (n.da) break r;\n                                                if ((n.da || nt(i.ca.S)) && mr(), 11 > i.ca.S || (alert(\"todo:WebPInitConvertARGBToYUV\"), null != i.ca.f.kb.F && mr()), i.Pb && 0 < i.s.ua && null == i.s.vb.X && !O(i.s.vb, i.s.Wa.Xa)) {\n                                                    i.a = 1;\n                                                    break r;\n                                                }\n                                                i.xb = 0;\n                                            }\n                                            if (!_t(i, i.V, i.Ba, i.c, i.i, n.o, Lt)) break r;\n                                            a.Dc = i.Ma, i = 1;\n                                            break e;\n                                        }\n                                        e(0 != i.a), i = 0;\n                                    }\n                                    i = !i;\n                                }\n                                i && (r = t.a);\n                            } else r = t.a;\n                        } else {\n                            if (null == (t = new Yt)) {\n                                s = 1;\n                                break t;\n                            }\n                            if (t.Fa = a.na, t.P = a.P, t.qc = a.Sa, Kt(t, i)) {\n                                if (0 == (r = qr(i.width, i.height, s.Oa, s.ba))) {\n                                    if (t.Aa = 0, n = s.Oa, e(null != (a = t)), null != n) {\n                                        if (0 < (u = 0 > (u = n.Md) ? 0 : 100 < u ? 255 : 255 * u / 100)) {\n                                            for(h = l = 0; 4 > h; ++h)12 > (f = a.pb[h]).lc && (f.ia = u * Ti[0 > f.lc ? 0 : f.lc] >> 3), l |= f.ia;\n                                            l && (alert(\"todo:VP8InitRandom\"), a.ia = 1);\n                                        }\n                                        a.Ga = n.Id, 100 < a.Ga ? a.Ga = 100 : 0 > a.Ga && (a.Ga = 0);\n                                    }\n                                    Qt(t, i) || (r = t.a);\n                                }\n                            } else r = t.a;\n                        }\n                        0 == r && null != s.Oa && s.Oa.fd && (r = Er(s.ba));\n                    }\n                    s = r;\n                }\n                o = 0 != s ? null : 11 > o ? c.f.RGBA.eb : c.f.kb.y;\n            } else o = null;\n            return o;\n        };\n        var zi = [\n            3,\n            4,\n            3,\n            4,\n            4,\n            2,\n            2,\n            4,\n            4,\n            4,\n            2,\n            1,\n            1\n        ];\n    };\n    function u(t, e) {\n        for(var r = \"\", n = 0; n < 4; n++)r += String.fromCharCode(t[e++]);\n        return r;\n    }\n    function h(t, e) {\n        return (t[e + 0] << 0 | t[e + 1] << 8 | t[e + 2] << 16) >>> 0;\n    }\n    function l(t, e) {\n        return (t[e + 0] << 0 | t[e + 1] << 8 | t[e + 2] << 16 | t[e + 3] << 24) >>> 0;\n    }\n    new c;\n    var f = [\n        0\n    ], d = [\n        0\n    ], p = [], g = new c, m = t, v = function(t, e) {\n        var r = {}, n = 0, i = !1, a = 0, o = 0;\n        if (r.frames = [], !/** @license\n   * Copyright (c) 2017 Dominik Homberger\n  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n  https://webpjs.appspot.com\n  WebPRiffParser dominikhlbg@gmail.com\n  */ function(t, e, r, n) {\n            for(var i = 0; i < n; i++)if (t[e + i] != r.charCodeAt(i)) return !0;\n            return !1;\n        }(t, e, \"RIFF\", 4)) {\n            for(l(t, e += 4), e += 8; e < t.length;){\n                var s = u(t, e), c = l(t, e += 4);\n                e += 4;\n                var f = c + (1 & c);\n                switch(s){\n                    case \"VP8 \":\n                    case \"VP8L\":\n                        void 0 === r.frames[n] && (r.frames[n] = {}), (g = r.frames[n]).src_off = i ? o : e - 8, g.src_size = a + c + 8, n++, i && (i = !1, a = 0, o = 0);\n                        break;\n                    case \"VP8X\":\n                        (g = r.header = {}).feature_flags = t[e];\n                        var d = e + 4;\n                        g.canvas_width = 1 + h(t, d), d += 3, g.canvas_height = 1 + h(t, d), d += 3;\n                        break;\n                    case \"ALPH\":\n                        i = !0, a = f + 8, o = e - 8;\n                        break;\n                    case \"ANIM\":\n                        (g = r.header).bgcolor = l(t, e), d = e + 4, g.loop_count = (m = t)[(v = d) + 0] << 0 | m[v + 1] << 8, d += 2;\n                        break;\n                    case \"ANMF\":\n                        var p, g;\n                        (g = r.frames[n] = {}).offset_x = 2 * h(t, e), e += 3, g.offset_y = 2 * h(t, e), e += 3, g.width = 1 + h(t, e), e += 3, g.height = 1 + h(t, e), e += 3, g.duration = h(t, e), e += 3, p = t[e++], g.dispose = 1 & p, g.blend = p >> 1 & 1;\n                }\n                \"ANMF\" != s && (e += f);\n            }\n            var m, v;\n            return r;\n        }\n    }(m, 0);\n    v.response = m, v.rgbaoutput = !0, v.dataurl = !1;\n    var b = v.header ? v.header : null, y = v.frames ? v.frames : null;\n    if (b) {\n        b.loop_counter = b.loop_count, f = [\n            b.canvas_height\n        ], d = [\n            b.canvas_width\n        ];\n        for(var w = 0; w < y.length && 0 != y[w].blend; w++);\n    }\n    var N = y[0], L = g.WebPDecodeRGBA(m, N.src_off, N.src_size, d, f);\n    N.rgba = L, N.imgwidth = d[0], N.imgheight = f[0];\n    for(var A = 0; A < d[0] * f[0] * 4; A++)p[A] = L[A];\n    return this.width = d, this.height = f, this.data = p, this;\n}\n!function(t) {\n    var r = function() {\n        return \"function\" == typeof fflate__WEBPACK_IMPORTED_MODULE_1__.zlibSync;\n    }, n = function(r, n, a, h) {\n        var l = 4, f = s;\n        switch(h){\n            case t.image_compression.FAST:\n                l = 1, f = o;\n                break;\n            case t.image_compression.MEDIUM:\n                l = 6, f = c;\n                break;\n            case t.image_compression.SLOW:\n                l = 9, f = u;\n        }\n        r = i(r, n, a, f);\n        var d = (0,fflate__WEBPACK_IMPORTED_MODULE_1__.zlibSync)(r, {\n            level: l\n        });\n        return t.__addimage__.arrayBufferToBinaryString(d);\n    }, i = function(t, e, r, n) {\n        for(var i, a, o, s = t.length / e, c = new Uint8Array(t.length + s), u = l(), h = 0; h < s; h += 1){\n            if (o = h * e, i = t.subarray(o, o + e), n) c.set(n(i, r, a), o + h);\n            else {\n                for(var d, p = u.length, g = []; d < p; d += 1)g[d] = u[d](i, r, a);\n                var m = f(g.concat());\n                c.set(g[m], o + h);\n            }\n            a = i;\n        }\n        return c;\n    }, a = function(t) {\n        var e = Array.apply([], t);\n        return e.unshift(0), e;\n    }, o = function(t, e) {\n        var r, n = [], i = t.length;\n        n[0] = 1;\n        for(var a = 0; a < i; a += 1)r = t[a - e] || 0, n[a + 1] = t[a] - r + 256 & 255;\n        return n;\n    }, s = function(t, e, r) {\n        var n, i = [], a = t.length;\n        i[0] = 2;\n        for(var o = 0; o < a; o += 1)n = r && r[o] || 0, i[o + 1] = t[o] - n + 256 & 255;\n        return i;\n    }, c = function(t, e, r) {\n        var n, i, a = [], o = t.length;\n        a[0] = 3;\n        for(var s = 0; s < o; s += 1)n = t[s - e] || 0, i = r && r[s] || 0, a[s + 1] = t[s] + 256 - (n + i >>> 1) & 255;\n        return a;\n    }, u = function(t, e, r) {\n        var n, i, a, o, s = [], c = t.length;\n        s[0] = 4;\n        for(var u = 0; u < c; u += 1)n = t[u - e] || 0, i = r && r[u] || 0, a = r && r[u - e] || 0, o = h(n, i, a), s[u + 1] = t[u] - o + 256 & 255;\n        return s;\n    }, h = function(t, e, r) {\n        if (t === e && e === r) return t;\n        var n = Math.abs(e - r), i = Math.abs(t - r), a = Math.abs(t + e - r - r);\n        return n <= i && n <= a ? t : i <= a ? e : r;\n    }, l = function() {\n        return [\n            a,\n            o,\n            s,\n            c,\n            u\n        ];\n    }, f = function(t) {\n        var e = t.map(function(t) {\n            return t.reduce(function(t, e) {\n                return t + Math.abs(e);\n            }, 0);\n        });\n        return e.indexOf(Math.min.apply(null, e));\n    };\n    t.processPNG = function(e, i, a, o) {\n        var s, c, u, h, l, f, d, p, g, m, v, b, y, w, N, L = this.decode.FLATE_DECODE, A = \"\";\n        if (this.__addimage__.isArrayBuffer(e) && (e = new Uint8Array(e)), this.__addimage__.isArrayBufferView(e)) {\n            if (e = (u = new Kt(e)).imgData, c = u.bits, s = u.colorSpace, l = u.colors, -1 !== [\n                4,\n                6\n            ].indexOf(u.colorType)) {\n                if (8 === u.bits) {\n                    g = (p = 32 == u.pixelBitlength ? new Uint32Array(u.decodePixels().buffer) : 16 == u.pixelBitlength ? new Uint16Array(u.decodePixels().buffer) : new Uint8Array(u.decodePixels().buffer)).length, v = new Uint8Array(g * u.colors), m = new Uint8Array(g);\n                    var x, S = u.pixelBitlength - u.bits;\n                    for(w = 0, N = 0; w < g; w++){\n                        for(y = p[w], x = 0; x < S;)v[N++] = y >>> x & 255, x += u.bits;\n                        m[w] = y >>> x & 255;\n                    }\n                }\n                if (16 === u.bits) {\n                    g = (p = new Uint32Array(u.decodePixels().buffer)).length, v = new Uint8Array(g * (32 / u.pixelBitlength) * u.colors), m = new Uint8Array(g * (32 / u.pixelBitlength)), b = u.colors > 1, w = 0, N = 0;\n                    for(var _ = 0; w < g;)y = p[w++], v[N++] = y >>> 0 & 255, b && (v[N++] = y >>> 16 & 255, y = p[w++], v[N++] = y >>> 0 & 255), m[_++] = y >>> 16 & 255;\n                    c = 8;\n                }\n                o !== t.image_compression.NONE && r() ? (e = n(v, u.width * u.colors, u.colors, o), d = n(m, u.width, 1, o)) : (e = v, d = m, L = void 0);\n            }\n            if (3 === u.colorType && (s = this.color_spaces.INDEXED, f = u.palette, u.transparency.indexed)) {\n                var P = u.transparency.indexed, k = 0;\n                for(w = 0, g = P.length; w < g; ++w)k += P[w];\n                if ((k /= 255) === g - 1 && -1 !== P.indexOf(0)) h = [\n                    P.indexOf(0)\n                ];\n                else if (k !== g) {\n                    for(p = u.decodePixels(), m = new Uint8Array(p.length), w = 0, g = p.length; w < g; w++)m[w] = P[p[w]];\n                    d = n(m, u.width, 1);\n                }\n            }\n            var I = function(e) {\n                var r;\n                switch(e){\n                    case t.image_compression.FAST:\n                        r = 11;\n                        break;\n                    case t.image_compression.MEDIUM:\n                        r = 13;\n                        break;\n                    case t.image_compression.SLOW:\n                        r = 14;\n                        break;\n                    default:\n                        r = 12;\n                }\n                return r;\n            }(o);\n            return L === this.decode.FLATE_DECODE && (A = \"/Predictor \" + I + \" \"), A += \"/Colors \" + l + \" /BitsPerComponent \" + c + \" /Columns \" + u.width, (this.__addimage__.isArrayBuffer(e) || this.__addimage__.isArrayBufferView(e)) && (e = this.__addimage__.arrayBufferToBinaryString(e)), (d && this.__addimage__.isArrayBuffer(d) || this.__addimage__.isArrayBufferView(d)) && (d = this.__addimage__.arrayBufferToBinaryString(d)), {\n                alias: a,\n                data: e,\n                index: i,\n                filter: L,\n                decodeParameters: A,\n                transparency: h,\n                palette: f,\n                sMask: d,\n                predictor: I,\n                width: u.width,\n                height: u.height,\n                bitsPerComponent: c,\n                colorSpace: s\n            };\n        }\n    };\n}(E.API), function(t) {\n    t.processGIF89A = function(e, r, n, i) {\n        var a = new Zt(e), o = a.width, s = a.height, c = [];\n        a.decodeAndBlitFrameRGBA(0, c);\n        var u = {\n            data: c,\n            width: o,\n            height: s\n        }, h = new Qt(100).encode(u, 100);\n        return t.processJPEG.call(this, h, r, n, i);\n    }, t.processGIF87A = t.processGIF89A;\n}(E.API), te.prototype.parseHeader = function() {\n    if (this.fileSize = this.datav.getUint32(this.pos, !0), this.pos += 4, this.reserved = this.datav.getUint32(this.pos, !0), this.pos += 4, this.offset = this.datav.getUint32(this.pos, !0), this.pos += 4, this.headerSize = this.datav.getUint32(this.pos, !0), this.pos += 4, this.width = this.datav.getUint32(this.pos, !0), this.pos += 4, this.height = this.datav.getInt32(this.pos, !0), this.pos += 4, this.planes = this.datav.getUint16(this.pos, !0), this.pos += 2, this.bitPP = this.datav.getUint16(this.pos, !0), this.pos += 2, this.compress = this.datav.getUint32(this.pos, !0), this.pos += 4, this.rawSize = this.datav.getUint32(this.pos, !0), this.pos += 4, this.hr = this.datav.getUint32(this.pos, !0), this.pos += 4, this.vr = this.datav.getUint32(this.pos, !0), this.pos += 4, this.colors = this.datav.getUint32(this.pos, !0), this.pos += 4, this.importantColors = this.datav.getUint32(this.pos, !0), this.pos += 4, 16 === this.bitPP && this.is_with_alpha && (this.bitPP = 15), this.bitPP < 15) {\n        var t = 0 === this.colors ? 1 << this.bitPP : this.colors;\n        this.palette = new Array(t);\n        for(var e = 0; e < t; e++){\n            var r = this.datav.getUint8(this.pos++, !0), n = this.datav.getUint8(this.pos++, !0), i = this.datav.getUint8(this.pos++, !0), a = this.datav.getUint8(this.pos++, !0);\n            this.palette[e] = {\n                red: i,\n                green: n,\n                blue: r,\n                quad: a\n            };\n        }\n    }\n    this.height < 0 && (this.height *= -1, this.bottom_up = !1);\n}, te.prototype.parseBGR = function() {\n    this.pos = this.offset;\n    try {\n        var t = \"bit\" + this.bitPP, e = this.width * this.height * 4;\n        this.data = new Uint8Array(e), this[t]();\n    } catch (t) {\n        a.log(\"bit decode error:\" + t);\n    }\n}, te.prototype.bit1 = function() {\n    var t, e = Math.ceil(this.width / 8), r = e % 4;\n    for(t = this.height - 1; t >= 0; t--){\n        for(var n = this.bottom_up ? t : this.height - 1 - t, i = 0; i < e; i++)for(var a = this.datav.getUint8(this.pos++, !0), o = n * this.width * 4 + 8 * i * 4, s = 0; s < 8 && 8 * i + s < this.width; s++){\n            var c = this.palette[a >> 7 - s & 1];\n            this.data[o + 4 * s] = c.blue, this.data[o + 4 * s + 1] = c.green, this.data[o + 4 * s + 2] = c.red, this.data[o + 4 * s + 3] = 255;\n        }\n        0 !== r && (this.pos += 4 - r);\n    }\n}, te.prototype.bit4 = function() {\n    for(var t = Math.ceil(this.width / 2), e = t % 4, r = this.height - 1; r >= 0; r--){\n        for(var n = this.bottom_up ? r : this.height - 1 - r, i = 0; i < t; i++){\n            var a = this.datav.getUint8(this.pos++, !0), o = n * this.width * 4 + 2 * i * 4, s = a >> 4, c = 15 & a, u = this.palette[s];\n            if (this.data[o] = u.blue, this.data[o + 1] = u.green, this.data[o + 2] = u.red, this.data[o + 3] = 255, 2 * i + 1 >= this.width) break;\n            u = this.palette[c], this.data[o + 4] = u.blue, this.data[o + 4 + 1] = u.green, this.data[o + 4 + 2] = u.red, this.data[o + 4 + 3] = 255;\n        }\n        0 !== e && (this.pos += 4 - e);\n    }\n}, te.prototype.bit8 = function() {\n    for(var t = this.width % 4, e = this.height - 1; e >= 0; e--){\n        for(var r = this.bottom_up ? e : this.height - 1 - e, n = 0; n < this.width; n++){\n            var i = this.datav.getUint8(this.pos++, !0), a = r * this.width * 4 + 4 * n;\n            if (i < this.palette.length) {\n                var o = this.palette[i];\n                this.data[a] = o.red, this.data[a + 1] = o.green, this.data[a + 2] = o.blue, this.data[a + 3] = 255;\n            } else this.data[a] = 255, this.data[a + 1] = 255, this.data[a + 2] = 255, this.data[a + 3] = 255;\n        }\n        0 !== t && (this.pos += 4 - t);\n    }\n}, te.prototype.bit15 = function() {\n    for(var t = this.width % 3, e = parseInt(\"11111\", 2), r = this.height - 1; r >= 0; r--){\n        for(var n = this.bottom_up ? r : this.height - 1 - r, i = 0; i < this.width; i++){\n            var a = this.datav.getUint16(this.pos, !0);\n            this.pos += 2;\n            var o = (a & e) / e * 255 | 0, s = (a >> 5 & e) / e * 255 | 0, c = (a >> 10 & e) / e * 255 | 0, u = a >> 15 ? 255 : 0, h = n * this.width * 4 + 4 * i;\n            this.data[h] = c, this.data[h + 1] = s, this.data[h + 2] = o, this.data[h + 3] = u;\n        }\n        this.pos += t;\n    }\n}, te.prototype.bit16 = function() {\n    for(var t = this.width % 3, e = parseInt(\"11111\", 2), r = parseInt(\"111111\", 2), n = this.height - 1; n >= 0; n--){\n        for(var i = this.bottom_up ? n : this.height - 1 - n, a = 0; a < this.width; a++){\n            var o = this.datav.getUint16(this.pos, !0);\n            this.pos += 2;\n            var s = (o & e) / e * 255 | 0, c = (o >> 5 & r) / r * 255 | 0, u = (o >> 11) / e * 255 | 0, h = i * this.width * 4 + 4 * a;\n            this.data[h] = u, this.data[h + 1] = c, this.data[h + 2] = s, this.data[h + 3] = 255;\n        }\n        this.pos += t;\n    }\n}, te.prototype.bit24 = function() {\n    for(var t = this.height - 1; t >= 0; t--){\n        for(var e = this.bottom_up ? t : this.height - 1 - t, r = 0; r < this.width; r++){\n            var n = this.datav.getUint8(this.pos++, !0), i = this.datav.getUint8(this.pos++, !0), a = this.datav.getUint8(this.pos++, !0), o = e * this.width * 4 + 4 * r;\n            this.data[o] = a, this.data[o + 1] = i, this.data[o + 2] = n, this.data[o + 3] = 255;\n        }\n        this.pos += this.width % 4;\n    }\n}, te.prototype.bit32 = function() {\n    for(var t = this.height - 1; t >= 0; t--)for(var e = this.bottom_up ? t : this.height - 1 - t, r = 0; r < this.width; r++){\n        var n = this.datav.getUint8(this.pos++, !0), i = this.datav.getUint8(this.pos++, !0), a = this.datav.getUint8(this.pos++, !0), o = this.datav.getUint8(this.pos++, !0), s = e * this.width * 4 + 4 * r;\n        this.data[s] = a, this.data[s + 1] = i, this.data[s + 2] = n, this.data[s + 3] = o;\n    }\n}, te.prototype.getData = function() {\n    return this.data;\n}, /**\n * @license\n * Copyright (c) 2018 Aras Abbasi\n *\n * Licensed under the MIT License.\n * http://opensource.org/licenses/mit-license\n */ function(t) {\n    t.processBMP = function(e, r, n, i) {\n        var a = new te(e, !1), o = a.width, s = a.height, c = {\n            data: a.getData(),\n            width: o,\n            height: s\n        }, u = new Qt(100).encode(c, 100);\n        return t.processJPEG.call(this, u, r, n, i);\n    };\n}(E.API), ee.prototype.getData = function() {\n    return this.data;\n}, /**\n * @license\n * Copyright (c) 2019 Aras Abbasi\n *\n * Licensed under the MIT License.\n * http://opensource.org/licenses/mit-license\n */ function(t) {\n    t.processWEBP = function(e, r, n, i) {\n        var a = new ee(e), o = a.width, s = a.height, c = {\n            data: a.getData(),\n            width: o,\n            height: s\n        }, u = new Qt(100).encode(c, 100);\n        return t.processJPEG.call(this, u, r, n, i);\n    };\n}(E.API), E.API.processRGBA = function(t, e, r) {\n    for(var n = t.data, i = n.length, a = new Uint8Array(i / 4 * 3), o = new Uint8Array(i / 4), s = 0, c = 0, u = 0; u < i; u += 4){\n        var h = n[u], l = n[u + 1], f = n[u + 2], d = n[u + 3];\n        a[s++] = h, a[s++] = l, a[s++] = f, o[c++] = d;\n    }\n    var p = this.__addimage__.arrayBufferToBinaryString(a);\n    return {\n        alpha: this.__addimage__.arrayBufferToBinaryString(o),\n        data: p,\n        index: e,\n        alias: r,\n        colorSpace: \"DeviceRGB\",\n        bitsPerComponent: 8,\n        width: t.width,\n        height: t.height\n    };\n}, E.API.setLanguage = function(t) {\n    return void 0 === this.internal.languageSettings && (this.internal.languageSettings = {}, this.internal.languageSettings.isSubscribed = !1), void 0 !== ({\n        af: \"Afrikaans\",\n        sq: \"Albanian\",\n        ar: \"Arabic (Standard)\",\n        \"ar-DZ\": \"Arabic (Algeria)\",\n        \"ar-BH\": \"Arabic (Bahrain)\",\n        \"ar-EG\": \"Arabic (Egypt)\",\n        \"ar-IQ\": \"Arabic (Iraq)\",\n        \"ar-JO\": \"Arabic (Jordan)\",\n        \"ar-KW\": \"Arabic (Kuwait)\",\n        \"ar-LB\": \"Arabic (Lebanon)\",\n        \"ar-LY\": \"Arabic (Libya)\",\n        \"ar-MA\": \"Arabic (Morocco)\",\n        \"ar-OM\": \"Arabic (Oman)\",\n        \"ar-QA\": \"Arabic (Qatar)\",\n        \"ar-SA\": \"Arabic (Saudi Arabia)\",\n        \"ar-SY\": \"Arabic (Syria)\",\n        \"ar-TN\": \"Arabic (Tunisia)\",\n        \"ar-AE\": \"Arabic (U.A.E.)\",\n        \"ar-YE\": \"Arabic (Yemen)\",\n        an: \"Aragonese\",\n        hy: \"Armenian\",\n        as: \"Assamese\",\n        ast: \"Asturian\",\n        az: \"Azerbaijani\",\n        eu: \"Basque\",\n        be: \"Belarusian\",\n        bn: \"Bengali\",\n        bs: \"Bosnian\",\n        br: \"Breton\",\n        bg: \"Bulgarian\",\n        my: \"Burmese\",\n        ca: \"Catalan\",\n        ch: \"Chamorro\",\n        ce: \"Chechen\",\n        zh: \"Chinese\",\n        \"zh-HK\": \"Chinese (Hong Kong)\",\n        \"zh-CN\": \"Chinese (PRC)\",\n        \"zh-SG\": \"Chinese (Singapore)\",\n        \"zh-TW\": \"Chinese (Taiwan)\",\n        cv: \"Chuvash\",\n        co: \"Corsican\",\n        cr: \"Cree\",\n        hr: \"Croatian\",\n        cs: \"Czech\",\n        da: \"Danish\",\n        nl: \"Dutch (Standard)\",\n        \"nl-BE\": \"Dutch (Belgian)\",\n        en: \"English\",\n        \"en-AU\": \"English (Australia)\",\n        \"en-BZ\": \"English (Belize)\",\n        \"en-CA\": \"English (Canada)\",\n        \"en-IE\": \"English (Ireland)\",\n        \"en-JM\": \"English (Jamaica)\",\n        \"en-NZ\": \"English (New Zealand)\",\n        \"en-PH\": \"English (Philippines)\",\n        \"en-ZA\": \"English (South Africa)\",\n        \"en-TT\": \"English (Trinidad & Tobago)\",\n        \"en-GB\": \"English (United Kingdom)\",\n        \"en-US\": \"English (United States)\",\n        \"en-ZW\": \"English (Zimbabwe)\",\n        eo: \"Esperanto\",\n        et: \"Estonian\",\n        fo: \"Faeroese\",\n        fj: \"Fijian\",\n        fi: \"Finnish\",\n        fr: \"French (Standard)\",\n        \"fr-BE\": \"French (Belgium)\",\n        \"fr-CA\": \"French (Canada)\",\n        \"fr-FR\": \"French (France)\",\n        \"fr-LU\": \"French (Luxembourg)\",\n        \"fr-MC\": \"French (Monaco)\",\n        \"fr-CH\": \"French (Switzerland)\",\n        fy: \"Frisian\",\n        fur: \"Friulian\",\n        gd: \"Gaelic (Scots)\",\n        \"gd-IE\": \"Gaelic (Irish)\",\n        gl: \"Galacian\",\n        ka: \"Georgian\",\n        de: \"German (Standard)\",\n        \"de-AT\": \"German (Austria)\",\n        \"de-DE\": \"German (Germany)\",\n        \"de-LI\": \"German (Liechtenstein)\",\n        \"de-LU\": \"German (Luxembourg)\",\n        \"de-CH\": \"German (Switzerland)\",\n        el: \"Greek\",\n        gu: \"Gujurati\",\n        ht: \"Haitian\",\n        he: \"Hebrew\",\n        hi: \"Hindi\",\n        hu: \"Hungarian\",\n        is: \"Icelandic\",\n        id: \"Indonesian\",\n        iu: \"Inuktitut\",\n        ga: \"Irish\",\n        it: \"Italian (Standard)\",\n        \"it-CH\": \"Italian (Switzerland)\",\n        ja: \"Japanese\",\n        kn: \"Kannada\",\n        ks: \"Kashmiri\",\n        kk: \"Kazakh\",\n        km: \"Khmer\",\n        ky: \"Kirghiz\",\n        tlh: \"Klingon\",\n        ko: \"Korean\",\n        \"ko-KP\": \"Korean (North Korea)\",\n        \"ko-KR\": \"Korean (South Korea)\",\n        la: \"Latin\",\n        lv: \"Latvian\",\n        lt: \"Lithuanian\",\n        lb: \"Luxembourgish\",\n        mk: \"North Macedonia\",\n        ms: \"Malay\",\n        ml: \"Malayalam\",\n        mt: \"Maltese\",\n        mi: \"Maori\",\n        mr: \"Marathi\",\n        mo: \"Moldavian\",\n        nv: \"Navajo\",\n        ng: \"Ndonga\",\n        ne: \"Nepali\",\n        no: \"Norwegian\",\n        nb: \"Norwegian (Bokmal)\",\n        nn: \"Norwegian (Nynorsk)\",\n        oc: \"Occitan\",\n        or: \"Oriya\",\n        om: \"Oromo\",\n        fa: \"Persian\",\n        \"fa-IR\": \"Persian/Iran\",\n        pl: \"Polish\",\n        pt: \"Portuguese\",\n        \"pt-BR\": \"Portuguese (Brazil)\",\n        pa: \"Punjabi\",\n        \"pa-IN\": \"Punjabi (India)\",\n        \"pa-PK\": \"Punjabi (Pakistan)\",\n        qu: \"Quechua\",\n        rm: \"Rhaeto-Romanic\",\n        ro: \"Romanian\",\n        \"ro-MO\": \"Romanian (Moldavia)\",\n        ru: \"Russian\",\n        \"ru-MO\": \"Russian (Moldavia)\",\n        sz: \"Sami (Lappish)\",\n        sg: \"Sango\",\n        sa: \"Sanskrit\",\n        sc: \"Sardinian\",\n        sd: \"Sindhi\",\n        si: \"Singhalese\",\n        sr: \"Serbian\",\n        sk: \"Slovak\",\n        sl: \"Slovenian\",\n        so: \"Somani\",\n        sb: \"Sorbian\",\n        es: \"Spanish\",\n        \"es-AR\": \"Spanish (Argentina)\",\n        \"es-BO\": \"Spanish (Bolivia)\",\n        \"es-CL\": \"Spanish (Chile)\",\n        \"es-CO\": \"Spanish (Colombia)\",\n        \"es-CR\": \"Spanish (Costa Rica)\",\n        \"es-DO\": \"Spanish (Dominican Republic)\",\n        \"es-EC\": \"Spanish (Ecuador)\",\n        \"es-SV\": \"Spanish (El Salvador)\",\n        \"es-GT\": \"Spanish (Guatemala)\",\n        \"es-HN\": \"Spanish (Honduras)\",\n        \"es-MX\": \"Spanish (Mexico)\",\n        \"es-NI\": \"Spanish (Nicaragua)\",\n        \"es-PA\": \"Spanish (Panama)\",\n        \"es-PY\": \"Spanish (Paraguay)\",\n        \"es-PE\": \"Spanish (Peru)\",\n        \"es-PR\": \"Spanish (Puerto Rico)\",\n        \"es-ES\": \"Spanish (Spain)\",\n        \"es-UY\": \"Spanish (Uruguay)\",\n        \"es-VE\": \"Spanish (Venezuela)\",\n        sx: \"Sutu\",\n        sw: \"Swahili\",\n        sv: \"Swedish\",\n        \"sv-FI\": \"Swedish (Finland)\",\n        \"sv-SV\": \"Swedish (Sweden)\",\n        ta: \"Tamil\",\n        tt: \"Tatar\",\n        te: \"Teluga\",\n        th: \"Thai\",\n        tig: \"Tigre\",\n        ts: \"Tsonga\",\n        tn: \"Tswana\",\n        tr: \"Turkish\",\n        tk: \"Turkmen\",\n        uk: \"Ukrainian\",\n        hsb: \"Upper Sorbian\",\n        ur: \"Urdu\",\n        ve: \"Venda\",\n        vi: \"Vietnamese\",\n        vo: \"Volapuk\",\n        wa: \"Walloon\",\n        cy: \"Welsh\",\n        xh: \"Xhosa\",\n        ji: \"Yiddish\",\n        zu: \"Zulu\"\n    })[t] && (this.internal.languageSettings.languageCode = t, !1 === this.internal.languageSettings.isSubscribed && (this.internal.events.subscribe(\"putCatalog\", function() {\n        this.internal.write(\"/Lang (\" + this.internal.languageSettings.languageCode + \")\");\n    }), this.internal.languageSettings.isSubscribed = !0)), this;\n}, Vt = E.API, Gt = Vt.getCharWidthsArray = function(e, r) {\n    var n, i, a = (r = r || {}).font || this.internal.getFont(), o = r.fontSize || this.internal.getFontSize(), s = r.charSpace || this.internal.getCharSpace(), c = r.widths ? r.widths : a.metadata.Unicode.widths, u = c.fof ? c.fof : 1, h = r.kerning ? r.kerning : a.metadata.Unicode.kerning, l = h.fof ? h.fof : 1, f = !1 !== r.doKerning, d = 0, p = e.length, g = 0, m = c[0] || u, v = [];\n    for(n = 0; n < p; n++)i = e.charCodeAt(n), \"function\" == typeof a.metadata.widthOfString ? v.push((a.metadata.widthOfGlyph(a.metadata.characterToGlyph(i)) + s * (1e3 / o) || 0) / 1e3) : (d = f && \"object\" === (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(h[i]) && !isNaN(parseInt(h[i][g], 10)) ? h[i][g] / l : 0, v.push((c[i] || m) / u + d)), g = i;\n    return v;\n}, Yt = Vt.getStringUnitWidth = function(t, e) {\n    var r = (e = e || {}).fontSize || this.internal.getFontSize(), n = e.font || this.internal.getFont(), i = e.charSpace || this.internal.getCharSpace();\n    return Vt.processArabic && (t = Vt.processArabic(t)), \"function\" == typeof n.metadata.widthOfString ? n.metadata.widthOfString(t, r, i) / r : Gt.apply(this, arguments).reduce(function(t, e) {\n        return t + e;\n    }, 0);\n}, Jt = function(t, e, r, n) {\n    for(var i = [], a = 0, o = t.length, s = 0; a !== o && s + e[a] < r;)s += e[a], a++;\n    i.push(t.slice(0, a));\n    var c = a;\n    for(s = 0; a !== o;)s + e[a] > n && (i.push(t.slice(c, a)), s = 0, c = a), s += e[a], a++;\n    return c !== a && i.push(t.slice(c, a)), i;\n}, Xt = function(t, e, r) {\n    r || (r = {});\n    var n, i, a, o, s, c, u, h = [], l = [\n        h\n    ], f = r.textIndent || 0, d = 0, p = 0, g = t.split(\" \"), m = Gt.apply(this, [\n        \" \",\n        r\n    ])[0];\n    if (c = -1 === r.lineIndent ? g[0].length + 2 : r.lineIndent || 0) {\n        var v = Array(c).join(\" \"), b = [];\n        g.map(function(t) {\n            (t = t.split(/\\s*\\n/)).length > 1 ? b = b.concat(t.map(function(t, e) {\n                return (e && t.length ? \"\\n\" : \"\") + t;\n            })) : b.push(t[0]);\n        }), g = b, c = Yt.apply(this, [\n            v,\n            r\n        ]);\n    }\n    for(a = 0, o = g.length; a < o; a++){\n        var y = 0;\n        if (n = g[a], c && \"\\n\" == n[0] && (n = n.substr(1), y = 1), f + d + (p = (i = Gt.apply(this, [\n            n,\n            r\n        ])).reduce(function(t, e) {\n            return t + e;\n        }, 0)) > e || y) {\n            if (p > e) {\n                for(s = Jt.apply(this, [\n                    n,\n                    i,\n                    e - (f + d),\n                    e\n                ]), h.push(s.shift()), h = [\n                    s.pop()\n                ]; s.length;)l.push([\n                    s.shift()\n                ]);\n                p = i.slice(n.length - (h[0] ? h[0].length : 0)).reduce(function(t, e) {\n                    return t + e;\n                }, 0);\n            } else h = [\n                n\n            ];\n            l.push(h), f = p + c, d = m;\n        } else h.push(n), f += d + p, d = m;\n    }\n    return u = c ? function(t, e) {\n        return (e ? v : \"\") + t.join(\" \");\n    } : function(t) {\n        return t.join(\" \");\n    }, l.map(u);\n}, Vt.splitTextToSize = function(t, e, r) {\n    var n, i = (r = r || {}).fontSize || this.internal.getFontSize(), a = (function(t) {\n        if (t.widths && t.kerning) return {\n            widths: t.widths,\n            kerning: t.kerning\n        };\n        var e = this.internal.getFont(t.fontName, t.fontStyle);\n        return e.metadata.Unicode ? {\n            widths: e.metadata.Unicode.widths || {\n                0: 1\n            },\n            kerning: e.metadata.Unicode.kerning || {}\n        } : {\n            font: e.metadata,\n            fontSize: this.internal.getFontSize(),\n            charSpace: this.internal.getCharSpace()\n        };\n    }).call(this, r);\n    n = Array.isArray(t) ? t : String(t).split(/\\r?\\n/);\n    var o = 1 * this.internal.scaleFactor * e / i;\n    a.textIndent = r.textIndent ? 1 * r.textIndent * this.internal.scaleFactor / i : 0, a.lineIndent = r.lineIndent;\n    var s, c, u = [];\n    for(s = 0, c = n.length; s < c; s++)u = u.concat(Xt.apply(this, [\n        n[s],\n        o,\n        a\n    ]));\n    return u;\n}, function(e) {\n    e.__fontmetrics__ = e.__fontmetrics__ || {};\n    for(var r = \"klmnopqrstuvwxyz\", n = {}, i = {}, a = 0; a < r.length; a++)n[r[a]] = \"0123456789abcdef\"[a], i[\"0123456789abcdef\"[a]] = r[a];\n    var o = function(t) {\n        return \"0x\" + parseInt(t, 10).toString(16);\n    }, s = e.__fontmetrics__.compress = function(e) {\n        var r, n, a, c, u = [\n            \"{\"\n        ];\n        for(var h in e){\n            if (r = e[h], isNaN(parseInt(h, 10)) ? n = \"'\" + h + \"'\" : (h = parseInt(h, 10), n = (n = o(h).slice(2)).slice(0, -1) + i[n.slice(-1)]), \"number\" == typeof r) r < 0 ? (a = o(r).slice(3), c = \"-\") : (a = o(r).slice(2), c = \"\"), a = c + a.slice(0, -1) + i[a.slice(-1)];\n            else {\n                if (\"object\" !== (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(r)) throw new Error(\"Don't know what to do with value type \" + (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(r) + \".\");\n                a = s(r);\n            }\n            u.push(n + a);\n        }\n        return u.push(\"}\"), u.join(\"\");\n    }, c = e.__fontmetrics__.uncompress = function(t) {\n        if (\"string\" != typeof t) throw new Error(\"Invalid argument passed to uncompress.\");\n        for(var e, r, i, a, o = {}, s = 1, c = o, u = [], h = \"\", l = \"\", f = t.length - 1, d = 1; d < f; d += 1)\"'\" == (a = t[d]) ? e ? (i = e.join(\"\"), e = void 0) : e = [] : e ? e.push(a) : \"{\" == a ? (u.push([\n            c,\n            i\n        ]), c = {}, i = void 0) : \"}\" == a ? ((r = u.pop())[0][r[1]] = c, i = void 0, c = r[0]) : \"-\" == a ? s = -1 : void 0 === i ? n.hasOwnProperty(a) ? (h += n[a], i = parseInt(h, 16) * s, s = 1, h = \"\") : h += a : n.hasOwnProperty(a) ? (l += n[a], c[i] = parseInt(l, 16) * s, s = 1, i = void 0, l = \"\") : l += a;\n        return o;\n    }, u = {\n        codePages: [\n            \"WinAnsiEncoding\"\n        ],\n        WinAnsiEncoding: c(\"{19m8n201n9q201o9r201s9l201t9m201u8m201w9n201x9o201y8o202k8q202l8r202m9p202q8p20aw8k203k8t203t8v203u9v2cq8s212m9t15m8w15n9w2dw9s16k8u16l9u17s9z17x8y17y9y}\")\n    }, h = {\n        Unicode: {\n            Courier: u,\n            \"Courier-Bold\": u,\n            \"Courier-BoldOblique\": u,\n            \"Courier-Oblique\": u,\n            Helvetica: u,\n            \"Helvetica-Bold\": u,\n            \"Helvetica-BoldOblique\": u,\n            \"Helvetica-Oblique\": u,\n            \"Times-Roman\": u,\n            \"Times-Bold\": u,\n            \"Times-BoldItalic\": u,\n            \"Times-Italic\": u\n        }\n    }, l = {\n        Unicode: {\n            \"Courier-Oblique\": c(\"{'widths'{k3w'fof'6o}'kerning'{'fof'-6o}}\"),\n            \"Times-BoldItalic\": c(\"{'widths'{k3o2q4ycx2r201n3m201o6o201s2l201t2l201u2l201w3m201x3m201y3m2k1t2l2r202m2n2n3m2o3m2p5n202q6o2r1w2s2l2t2l2u3m2v3t2w1t2x2l2y1t2z1w3k3m3l3m3m3m3n3m3o3m3p3m3q3m3r3m3s3m203t2l203u2l3v2l3w3t3x3t3y3t3z3m4k5n4l4m4m4m4n4m4o4s4p4m4q4m4r4s4s4y4t2r4u3m4v4m4w3x4x5t4y4s4z4s5k3x5l4s5m4m5n3r5o3x5p4s5q4m5r5t5s4m5t3x5u3x5v2l5w1w5x2l5y3t5z3m6k2l6l3m6m3m6n2w6o3m6p2w6q2l6r3m6s3r6t1w6u1w6v3m6w1w6x4y6y3r6z3m7k3m7l3m7m2r7n2r7o1w7p3r7q2w7r4m7s3m7t2w7u2r7v2n7w1q7x2n7y3t202l3mcl4mal2ram3man3mao3map3mar3mas2lat4uau1uav3maw3way4uaz2lbk2sbl3t'fof'6obo2lbp3tbq3mbr1tbs2lbu1ybv3mbz3mck4m202k3mcm4mcn4mco4mcp4mcq5ycr4mcs4mct4mcu4mcv4mcw2r2m3rcy2rcz2rdl4sdm4sdn4sdo4sdp4sdq4sds4sdt4sdu4sdv4sdw4sdz3mek3mel3mem3men3meo3mep3meq4ser2wes2wet2weu2wev2wew1wex1wey1wez1wfl3rfm3mfn3mfo3mfp3mfq3mfr3tfs3mft3rfu3rfv3rfw3rfz2w203k6o212m6o2dw2l2cq2l3t3m3u2l17s3x19m3m}'kerning'{cl{4qu5kt5qt5rs17ss5ts}201s{201ss}201t{cks4lscmscnscoscpscls2wu2yu201ts}201x{2wu2yu}2k{201ts}2w{4qx5kx5ou5qx5rs17su5tu}2x{17su5tu5ou}2y{4qx5kx5ou5qx5rs17ss5ts}'fof'-6ofn{17sw5tw5ou5qw5rs}7t{cksclscmscnscoscps4ls}3u{17su5tu5os5qs}3v{17su5tu5os5qs}7p{17su5tu}ck{4qu5kt5qt5rs17ss5ts}4l{4qu5kt5qt5rs17ss5ts}cm{4qu5kt5qt5rs17ss5ts}cn{4qu5kt5qt5rs17ss5ts}co{4qu5kt5qt5rs17ss5ts}cp{4qu5kt5qt5rs17ss5ts}6l{4qu5ou5qw5rt17su5tu}5q{ckuclucmucnucoucpu4lu}5r{ckuclucmucnucoucpu4lu}7q{cksclscmscnscoscps4ls}6p{4qu5ou5qw5rt17sw5tw}ek{4qu5ou5qw5rt17su5tu}el{4qu5ou5qw5rt17su5tu}em{4qu5ou5qw5rt17su5tu}en{4qu5ou5qw5rt17su5tu}eo{4qu5ou5qw5rt17su5tu}ep{4qu5ou5qw5rt17su5tu}es{17ss5ts5qs4qu}et{4qu5ou5qw5rt17sw5tw}eu{4qu5ou5qw5rt17ss5ts}ev{17ss5ts5qs4qu}6z{17sw5tw5ou5qw5rs}fm{17sw5tw5ou5qw5rs}7n{201ts}fo{17sw5tw5ou5qw5rs}fp{17sw5tw5ou5qw5rs}fq{17sw5tw5ou5qw5rs}7r{cksclscmscnscoscps4ls}fs{17sw5tw5ou5qw5rs}ft{17su5tu}fu{17su5tu}fv{17su5tu}fw{17su5tu}fz{cksclscmscnscoscps4ls}}}\"),\n            \"Helvetica-Bold\": c(\"{'widths'{k3s2q4scx1w201n3r201o6o201s1w201t1w201u1w201w3m201x3m201y3m2k1w2l2l202m2n2n3r2o3r2p5t202q6o2r1s2s2l2t2l2u2r2v3u2w1w2x2l2y1w2z1w3k3r3l3r3m3r3n3r3o3r3p3r3q3r3r3r3s3r203t2l203u2l3v2l3w3u3x3u3y3u3z3x4k6l4l4s4m4s4n4s4o4s4p4m4q3x4r4y4s4s4t1w4u3r4v4s4w3x4x5n4y4s4z4y5k4m5l4y5m4s5n4m5o3x5p4s5q4m5r5y5s4m5t4m5u3x5v2l5w1w5x2l5y3u5z3r6k2l6l3r6m3x6n3r6o3x6p3r6q2l6r3x6s3x6t1w6u1w6v3r6w1w6x5t6y3x6z3x7k3x7l3x7m2r7n3r7o2l7p3x7q3r7r4y7s3r7t3r7u3m7v2r7w1w7x2r7y3u202l3rcl4sal2lam3ran3rao3rap3rar3ras2lat4tau2pav3raw3uay4taz2lbk2sbl3u'fof'6obo2lbp3xbq3rbr1wbs2lbu2obv3rbz3xck4s202k3rcm4scn4sco4scp4scq6ocr4scs4mct4mcu4mcv4mcw1w2m2zcy1wcz1wdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3xek3rel3rem3ren3reo3rep3req5ter3res3ret3reu3rev3rew1wex1wey1wez1wfl3xfm3xfn3xfo3xfp3xfq3xfr3ufs3xft3xfu3xfv3xfw3xfz3r203k6o212m6o2dw2l2cq2l3t3r3u2l17s4m19m3r}'kerning'{cl{4qs5ku5ot5qs17sv5tv}201t{2ww4wy2yw}201w{2ks}201x{2ww4wy2yw}2k{201ts201xs}2w{7qs4qu5kw5os5qw5rs17su5tu7tsfzs}2x{5ow5qs}2y{7qs4qu5kw5os5qw5rs17su5tu7tsfzs}'fof'-6o7p{17su5tu5ot}ck{4qs5ku5ot5qs17sv5tv}4l{4qs5ku5ot5qs17sv5tv}cm{4qs5ku5ot5qs17sv5tv}cn{4qs5ku5ot5qs17sv5tv}co{4qs5ku5ot5qs17sv5tv}cp{4qs5ku5ot5qs17sv5tv}6l{17st5tt5os}17s{2kwclvcmvcnvcovcpv4lv4wwckv}5o{2kucltcmtcntcotcpt4lt4wtckt}5q{2ksclscmscnscoscps4ls4wvcks}5r{2ks4ws}5t{2kwclvcmvcnvcovcpv4lv4wwckv}eo{17st5tt5os}fu{17su5tu5ot}6p{17ss5ts}ek{17st5tt5os}el{17st5tt5os}em{17st5tt5os}en{17st5tt5os}6o{201ts}ep{17st5tt5os}es{17ss5ts}et{17ss5ts}eu{17ss5ts}ev{17ss5ts}6z{17su5tu5os5qt}fm{17su5tu5os5qt}fn{17su5tu5os5qt}fo{17su5tu5os5qt}fp{17su5tu5os5qt}fq{17su5tu5os5qt}fs{17su5tu5os5qt}ft{17su5tu5ot}7m{5os}fv{17su5tu5ot}fw{17su5tu5ot}}}\"),\n            Courier: c(\"{'widths'{k3w'fof'6o}'kerning'{'fof'-6o}}\"),\n            \"Courier-BoldOblique\": c(\"{'widths'{k3w'fof'6o}'kerning'{'fof'-6o}}\"),\n            \"Times-Bold\": c(\"{'widths'{k3q2q5ncx2r201n3m201o6o201s2l201t2l201u2l201w3m201x3m201y3m2k1t2l2l202m2n2n3m2o3m2p6o202q6o2r1w2s2l2t2l2u3m2v3t2w1t2x2l2y1t2z1w3k3m3l3m3m3m3n3m3o3m3p3m3q3m3r3m3s3m203t2l203u2l3v2l3w3t3x3t3y3t3z3m4k5x4l4s4m4m4n4s4o4s4p4m4q3x4r4y4s4y4t2r4u3m4v4y4w4m4x5y4y4s4z4y5k3x5l4y5m4s5n3r5o4m5p4s5q4s5r6o5s4s5t4s5u4m5v2l5w1w5x2l5y3u5z3m6k2l6l3m6m3r6n2w6o3r6p2w6q2l6r3m6s3r6t1w6u2l6v3r6w1w6x5n6y3r6z3m7k3r7l3r7m2w7n2r7o2l7p3r7q3m7r4s7s3m7t3m7u2w7v2r7w1q7x2r7y3o202l3mcl4sal2lam3man3mao3map3mar3mas2lat4uau1yav3maw3tay4uaz2lbk2sbl3t'fof'6obo2lbp3rbr1tbs2lbu2lbv3mbz3mck4s202k3mcm4scn4sco4scp4scq6ocr4scs4mct4mcu4mcv4mcw2r2m3rcy2rcz2rdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3rek3mel3mem3men3meo3mep3meq4ser2wes2wet2weu2wev2wew1wex1wey1wez1wfl3rfm3mfn3mfo3mfp3mfq3mfr3tfs3mft3rfu3rfv3rfw3rfz3m203k6o212m6o2dw2l2cq2l3t3m3u2l17s4s19m3m}'kerning'{cl{4qt5ks5ot5qy5rw17sv5tv}201t{cks4lscmscnscoscpscls4wv}2k{201ts}2w{4qu5ku7mu5os5qx5ru17su5tu}2x{17su5tu5ou5qs}2y{4qv5kv7mu5ot5qz5ru17su5tu}'fof'-6o7t{cksclscmscnscoscps4ls}3u{17su5tu5os5qu}3v{17su5tu5os5qu}fu{17su5tu5ou5qu}7p{17su5tu5ou5qu}ck{4qt5ks5ot5qy5rw17sv5tv}4l{4qt5ks5ot5qy5rw17sv5tv}cm{4qt5ks5ot5qy5rw17sv5tv}cn{4qt5ks5ot5qy5rw17sv5tv}co{4qt5ks5ot5qy5rw17sv5tv}cp{4qt5ks5ot5qy5rw17sv5tv}6l{17st5tt5ou5qu}17s{ckuclucmucnucoucpu4lu4wu}5o{ckuclucmucnucoucpu4lu4wu}5q{ckzclzcmzcnzcozcpz4lz4wu}5r{ckxclxcmxcnxcoxcpx4lx4wu}5t{ckuclucmucnucoucpu4lu4wu}7q{ckuclucmucnucoucpu4lu}6p{17sw5tw5ou5qu}ek{17st5tt5qu}el{17st5tt5ou5qu}em{17st5tt5qu}en{17st5tt5qu}eo{17st5tt5qu}ep{17st5tt5ou5qu}es{17ss5ts5qu}et{17sw5tw5ou5qu}eu{17sw5tw5ou5qu}ev{17ss5ts5qu}6z{17sw5tw5ou5qu5rs}fm{17sw5tw5ou5qu5rs}fn{17sw5tw5ou5qu5rs}fo{17sw5tw5ou5qu5rs}fp{17sw5tw5ou5qu5rs}fq{17sw5tw5ou5qu5rs}7r{cktcltcmtcntcotcpt4lt5os}fs{17sw5tw5ou5qu5rs}ft{17su5tu5ou5qu}7m{5os}fv{17su5tu5ou5qu}fw{17su5tu5ou5qu}fz{cksclscmscnscoscps4ls}}}\"),\n            Symbol: c(\"{'widths'{k3uaw4r19m3m2k1t2l2l202m2y2n3m2p5n202q6o3k3m2s2l2t2l2v3r2w1t3m3m2y1t2z1wbk2sbl3r'fof'6o3n3m3o3m3p3m3q3m3r3m3s3m3t3m3u1w3v1w3w3r3x3r3y3r3z2wbp3t3l3m5v2l5x2l5z3m2q4yfr3r7v3k7w1o7x3k}'kerning'{'fof'-6o}}\"),\n            Helvetica: c(\"{'widths'{k3p2q4mcx1w201n3r201o6o201s1q201t1q201u1q201w2l201x2l201y2l2k1w2l1w202m2n2n3r2o3r2p5t202q6o2r1n2s2l2t2l2u2r2v3u2w1w2x2l2y1w2z1w3k3r3l3r3m3r3n3r3o3r3p3r3q3r3r3r3s3r203t2l203u2l3v1w3w3u3x3u3y3u3z3r4k6p4l4m4m4m4n4s4o4s4p4m4q3x4r4y4s4s4t1w4u3m4v4m4w3r4x5n4y4s4z4y5k4m5l4y5m4s5n4m5o3x5p4s5q4m5r5y5s4m5t4m5u3x5v1w5w1w5x1w5y2z5z3r6k2l6l3r6m3r6n3m6o3r6p3r6q1w6r3r6s3r6t1q6u1q6v3m6w1q6x5n6y3r6z3r7k3r7l3r7m2l7n3m7o1w7p3r7q3m7r4s7s3m7t3m7u3m7v2l7w1u7x2l7y3u202l3rcl4mal2lam3ran3rao3rap3rar3ras2lat4tau2pav3raw3uay4taz2lbk2sbl3u'fof'6obo2lbp3rbr1wbs2lbu2obv3rbz3xck4m202k3rcm4mcn4mco4mcp4mcq6ocr4scs4mct4mcu4mcv4mcw1w2m2ncy1wcz1wdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3xek3rel3rem3ren3reo3rep3req5ter3mes3ret3reu3rev3rew1wex1wey1wez1wfl3rfm3rfn3rfo3rfp3rfq3rfr3ufs3xft3rfu3rfv3rfw3rfz3m203k6o212m6o2dw2l2cq2l3t3r3u1w17s4m19m3r}'kerning'{5q{4wv}cl{4qs5kw5ow5qs17sv5tv}201t{2wu4w1k2yu}201x{2wu4wy2yu}17s{2ktclucmucnu4otcpu4lu4wycoucku}2w{7qs4qz5k1m17sy5ow5qx5rsfsu5ty7tufzu}2x{17sy5ty5oy5qs}2y{7qs4qz5k1m17sy5ow5qx5rsfsu5ty7tufzu}'fof'-6o7p{17sv5tv5ow}ck{4qs5kw5ow5qs17sv5tv}4l{4qs5kw5ow5qs17sv5tv}cm{4qs5kw5ow5qs17sv5tv}cn{4qs5kw5ow5qs17sv5tv}co{4qs5kw5ow5qs17sv5tv}cp{4qs5kw5ow5qs17sv5tv}6l{17sy5ty5ow}do{17st5tt}4z{17st5tt}7s{fst}dm{17st5tt}dn{17st5tt}5o{ckwclwcmwcnwcowcpw4lw4wv}dp{17st5tt}dq{17st5tt}7t{5ow}ds{17st5tt}5t{2ktclucmucnu4otcpu4lu4wycoucku}fu{17sv5tv5ow}6p{17sy5ty5ow5qs}ek{17sy5ty5ow}el{17sy5ty5ow}em{17sy5ty5ow}en{5ty}eo{17sy5ty5ow}ep{17sy5ty5ow}es{17sy5ty5qs}et{17sy5ty5ow5qs}eu{17sy5ty5ow5qs}ev{17sy5ty5ow5qs}6z{17sy5ty5ow5qs}fm{17sy5ty5ow5qs}fn{17sy5ty5ow5qs}fo{17sy5ty5ow5qs}fp{17sy5ty5qs}fq{17sy5ty5ow5qs}7r{5ow}fs{17sy5ty5ow5qs}ft{17sv5tv5ow}7m{5ow}fv{17sv5tv5ow}fw{17sv5tv5ow}}}\"),\n            \"Helvetica-BoldOblique\": c(\"{'widths'{k3s2q4scx1w201n3r201o6o201s1w201t1w201u1w201w3m201x3m201y3m2k1w2l2l202m2n2n3r2o3r2p5t202q6o2r1s2s2l2t2l2u2r2v3u2w1w2x2l2y1w2z1w3k3r3l3r3m3r3n3r3o3r3p3r3q3r3r3r3s3r203t2l203u2l3v2l3w3u3x3u3y3u3z3x4k6l4l4s4m4s4n4s4o4s4p4m4q3x4r4y4s4s4t1w4u3r4v4s4w3x4x5n4y4s4z4y5k4m5l4y5m4s5n4m5o3x5p4s5q4m5r5y5s4m5t4m5u3x5v2l5w1w5x2l5y3u5z3r6k2l6l3r6m3x6n3r6o3x6p3r6q2l6r3x6s3x6t1w6u1w6v3r6w1w6x5t6y3x6z3x7k3x7l3x7m2r7n3r7o2l7p3x7q3r7r4y7s3r7t3r7u3m7v2r7w1w7x2r7y3u202l3rcl4sal2lam3ran3rao3rap3rar3ras2lat4tau2pav3raw3uay4taz2lbk2sbl3u'fof'6obo2lbp3xbq3rbr1wbs2lbu2obv3rbz3xck4s202k3rcm4scn4sco4scp4scq6ocr4scs4mct4mcu4mcv4mcw1w2m2zcy1wcz1wdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3xek3rel3rem3ren3reo3rep3req5ter3res3ret3reu3rev3rew1wex1wey1wez1wfl3xfm3xfn3xfo3xfp3xfq3xfr3ufs3xft3xfu3xfv3xfw3xfz3r203k6o212m6o2dw2l2cq2l3t3r3u2l17s4m19m3r}'kerning'{cl{4qs5ku5ot5qs17sv5tv}201t{2ww4wy2yw}201w{2ks}201x{2ww4wy2yw}2k{201ts201xs}2w{7qs4qu5kw5os5qw5rs17su5tu7tsfzs}2x{5ow5qs}2y{7qs4qu5kw5os5qw5rs17su5tu7tsfzs}'fof'-6o7p{17su5tu5ot}ck{4qs5ku5ot5qs17sv5tv}4l{4qs5ku5ot5qs17sv5tv}cm{4qs5ku5ot5qs17sv5tv}cn{4qs5ku5ot5qs17sv5tv}co{4qs5ku5ot5qs17sv5tv}cp{4qs5ku5ot5qs17sv5tv}6l{17st5tt5os}17s{2kwclvcmvcnvcovcpv4lv4wwckv}5o{2kucltcmtcntcotcpt4lt4wtckt}5q{2ksclscmscnscoscps4ls4wvcks}5r{2ks4ws}5t{2kwclvcmvcnvcovcpv4lv4wwckv}eo{17st5tt5os}fu{17su5tu5ot}6p{17ss5ts}ek{17st5tt5os}el{17st5tt5os}em{17st5tt5os}en{17st5tt5os}6o{201ts}ep{17st5tt5os}es{17ss5ts}et{17ss5ts}eu{17ss5ts}ev{17ss5ts}6z{17su5tu5os5qt}fm{17su5tu5os5qt}fn{17su5tu5os5qt}fo{17su5tu5os5qt}fp{17su5tu5os5qt}fq{17su5tu5os5qt}fs{17su5tu5os5qt}ft{17su5tu5ot}7m{5os}fv{17su5tu5ot}fw{17su5tu5ot}}}\"),\n            ZapfDingbats: c(\"{'widths'{k4u2k1w'fof'6o}'kerning'{'fof'-6o}}\"),\n            \"Courier-Bold\": c(\"{'widths'{k3w'fof'6o}'kerning'{'fof'-6o}}\"),\n            \"Times-Italic\": c(\"{'widths'{k3n2q4ycx2l201n3m201o5t201s2l201t2l201u2l201w3r201x3r201y3r2k1t2l2l202m2n2n3m2o3m2p5n202q5t2r1p2s2l2t2l2u3m2v4n2w1t2x2l2y1t2z1w3k3m3l3m3m3m3n3m3o3m3p3m3q3m3r3m3s3m203t2l203u2l3v2l3w4n3x4n3y4n3z3m4k5w4l3x4m3x4n4m4o4s4p3x4q3x4r4s4s4s4t2l4u2w4v4m4w3r4x5n4y4m4z4s5k3x5l4s5m3x5n3m5o3r5p4s5q3x5r5n5s3x5t3r5u3r5v2r5w1w5x2r5y2u5z3m6k2l6l3m6m3m6n2w6o3m6p2w6q1w6r3m6s3m6t1w6u1w6v2w6w1w6x4s6y3m6z3m7k3m7l3m7m2r7n2r7o1w7p3m7q2w7r4m7s2w7t2w7u2r7v2s7w1v7x2s7y3q202l3mcl3xal2ram3man3mao3map3mar3mas2lat4wau1vav3maw4nay4waz2lbk2sbl4n'fof'6obo2lbp3mbq3obr1tbs2lbu1zbv3mbz3mck3x202k3mcm3xcn3xco3xcp3xcq5tcr4mcs3xct3xcu3xcv3xcw2l2m2ucy2lcz2ldl4mdm4sdn4sdo4sdp4sdq4sds4sdt4sdu4sdv4sdw4sdz3mek3mel3mem3men3meo3mep3meq4mer2wes2wet2weu2wev2wew1wex1wey1wez1wfl3mfm3mfn3mfo3mfp3mfq3mfr4nfs3mft3mfu3mfv3mfw3mfz2w203k6o212m6m2dw2l2cq2l3t3m3u2l17s3r19m3m}'kerning'{cl{5kt4qw}201s{201sw}201t{201tw2wy2yy6q-t}201x{2wy2yy}2k{201tw}2w{7qs4qy7rs5ky7mw5os5qx5ru17su5tu}2x{17ss5ts5os}2y{7qs4qy7rs5ky7mw5os5qx5ru17su5tu}'fof'-6o6t{17ss5ts5qs}7t{5os}3v{5qs}7p{17su5tu5qs}ck{5kt4qw}4l{5kt4qw}cm{5kt4qw}cn{5kt4qw}co{5kt4qw}cp{5kt4qw}6l{4qs5ks5ou5qw5ru17su5tu}17s{2ks}5q{ckvclvcmvcnvcovcpv4lv}5r{ckuclucmucnucoucpu4lu}5t{2ks}6p{4qs5ks5ou5qw5ru17su5tu}ek{4qs5ks5ou5qw5ru17su5tu}el{4qs5ks5ou5qw5ru17su5tu}em{4qs5ks5ou5qw5ru17su5tu}en{4qs5ks5ou5qw5ru17su5tu}eo{4qs5ks5ou5qw5ru17su5tu}ep{4qs5ks5ou5qw5ru17su5tu}es{5ks5qs4qs}et{4qs5ks5ou5qw5ru17su5tu}eu{4qs5ks5qw5ru17su5tu}ev{5ks5qs4qs}ex{17ss5ts5qs}6z{4qv5ks5ou5qw5ru17su5tu}fm{4qv5ks5ou5qw5ru17su5tu}fn{4qv5ks5ou5qw5ru17su5tu}fo{4qv5ks5ou5qw5ru17su5tu}fp{4qv5ks5ou5qw5ru17su5tu}fq{4qv5ks5ou5qw5ru17su5tu}7r{5os}fs{4qv5ks5ou5qw5ru17su5tu}ft{17su5tu5qs}fu{17su5tu5qs}fv{17su5tu5qs}fw{17su5tu5qs}}}\"),\n            \"Times-Roman\": c(\"{'widths'{k3n2q4ycx2l201n3m201o6o201s2l201t2l201u2l201w2w201x2w201y2w2k1t2l2l202m2n2n3m2o3m2p5n202q6o2r1m2s2l2t2l2u3m2v3s2w1t2x2l2y1t2z1w3k3m3l3m3m3m3n3m3o3m3p3m3q3m3r3m3s3m203t2l203u2l3v1w3w3s3x3s3y3s3z2w4k5w4l4s4m4m4n4m4o4s4p3x4q3r4r4s4s4s4t2l4u2r4v4s4w3x4x5t4y4s4z4s5k3r5l4s5m4m5n3r5o3x5p4s5q4s5r5y5s4s5t4s5u3x5v2l5w1w5x2l5y2z5z3m6k2l6l2w6m3m6n2w6o3m6p2w6q2l6r3m6s3m6t1w6u1w6v3m6w1w6x4y6y3m6z3m7k3m7l3m7m2l7n2r7o1w7p3m7q3m7r4s7s3m7t3m7u2w7v3k7w1o7x3k7y3q202l3mcl4sal2lam3man3mao3map3mar3mas2lat4wau1vav3maw3say4waz2lbk2sbl3s'fof'6obo2lbp3mbq2xbr1tbs2lbu1zbv3mbz2wck4s202k3mcm4scn4sco4scp4scq5tcr4mcs3xct3xcu3xcv3xcw2l2m2tcy2lcz2ldl4sdm4sdn4sdo4sdp4sdq4sds4sdt4sdu4sdv4sdw4sdz3mek2wel2wem2wen2weo2wep2weq4mer2wes2wet2weu2wev2wew1wex1wey1wez1wfl3mfm3mfn3mfo3mfp3mfq3mfr3sfs3mft3mfu3mfv3mfw3mfz3m203k6o212m6m2dw2l2cq2l3t3m3u1w17s4s19m3m}'kerning'{cl{4qs5ku17sw5ou5qy5rw201ss5tw201ws}201s{201ss}201t{ckw4lwcmwcnwcowcpwclw4wu201ts}2k{201ts}2w{4qs5kw5os5qx5ru17sx5tx}2x{17sw5tw5ou5qu}2y{4qs5kw5os5qx5ru17sx5tx}'fof'-6o7t{ckuclucmucnucoucpu4lu5os5rs}3u{17su5tu5qs}3v{17su5tu5qs}7p{17sw5tw5qs}ck{4qs5ku17sw5ou5qy5rw201ss5tw201ws}4l{4qs5ku17sw5ou5qy5rw201ss5tw201ws}cm{4qs5ku17sw5ou5qy5rw201ss5tw201ws}cn{4qs5ku17sw5ou5qy5rw201ss5tw201ws}co{4qs5ku17sw5ou5qy5rw201ss5tw201ws}cp{4qs5ku17sw5ou5qy5rw201ss5tw201ws}6l{17su5tu5os5qw5rs}17s{2ktclvcmvcnvcovcpv4lv4wuckv}5o{ckwclwcmwcnwcowcpw4lw4wu}5q{ckyclycmycnycoycpy4ly4wu5ms}5r{cktcltcmtcntcotcpt4lt4ws}5t{2ktclvcmvcnvcovcpv4lv4wuckv}7q{cksclscmscnscoscps4ls}6p{17su5tu5qw5rs}ek{5qs5rs}el{17su5tu5os5qw5rs}em{17su5tu5os5qs5rs}en{17su5qs5rs}eo{5qs5rs}ep{17su5tu5os5qw5rs}es{5qs}et{17su5tu5qw5rs}eu{17su5tu5qs5rs}ev{5qs}6z{17sv5tv5os5qx5rs}fm{5os5qt5rs}fn{17sv5tv5os5qx5rs}fo{17sv5tv5os5qx5rs}fp{5os5qt5rs}fq{5os5qt5rs}7r{ckuclucmucnucoucpu4lu5os}fs{17sv5tv5os5qx5rs}ft{17ss5ts5qs}fu{17sw5tw5qs}fv{17sw5tw5qs}fw{17ss5ts5qs}fz{ckuclucmucnucoucpu4lu5os5rs}}}\"),\n            \"Helvetica-Oblique\": c(\"{'widths'{k3p2q4mcx1w201n3r201o6o201s1q201t1q201u1q201w2l201x2l201y2l2k1w2l1w202m2n2n3r2o3r2p5t202q6o2r1n2s2l2t2l2u2r2v3u2w1w2x2l2y1w2z1w3k3r3l3r3m3r3n3r3o3r3p3r3q3r3r3r3s3r203t2l203u2l3v1w3w3u3x3u3y3u3z3r4k6p4l4m4m4m4n4s4o4s4p4m4q3x4r4y4s4s4t1w4u3m4v4m4w3r4x5n4y4s4z4y5k4m5l4y5m4s5n4m5o3x5p4s5q4m5r5y5s4m5t4m5u3x5v1w5w1w5x1w5y2z5z3r6k2l6l3r6m3r6n3m6o3r6p3r6q1w6r3r6s3r6t1q6u1q6v3m6w1q6x5n6y3r6z3r7k3r7l3r7m2l7n3m7o1w7p3r7q3m7r4s7s3m7t3m7u3m7v2l7w1u7x2l7y3u202l3rcl4mal2lam3ran3rao3rap3rar3ras2lat4tau2pav3raw3uay4taz2lbk2sbl3u'fof'6obo2lbp3rbr1wbs2lbu2obv3rbz3xck4m202k3rcm4mcn4mco4mcp4mcq6ocr4scs4mct4mcu4mcv4mcw1w2m2ncy1wcz1wdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3xek3rel3rem3ren3reo3rep3req5ter3mes3ret3reu3rev3rew1wex1wey1wez1wfl3rfm3rfn3rfo3rfp3rfq3rfr3ufs3xft3rfu3rfv3rfw3rfz3m203k6o212m6o2dw2l2cq2l3t3r3u1w17s4m19m3r}'kerning'{5q{4wv}cl{4qs5kw5ow5qs17sv5tv}201t{2wu4w1k2yu}201x{2wu4wy2yu}17s{2ktclucmucnu4otcpu4lu4wycoucku}2w{7qs4qz5k1m17sy5ow5qx5rsfsu5ty7tufzu}2x{17sy5ty5oy5qs}2y{7qs4qz5k1m17sy5ow5qx5rsfsu5ty7tufzu}'fof'-6o7p{17sv5tv5ow}ck{4qs5kw5ow5qs17sv5tv}4l{4qs5kw5ow5qs17sv5tv}cm{4qs5kw5ow5qs17sv5tv}cn{4qs5kw5ow5qs17sv5tv}co{4qs5kw5ow5qs17sv5tv}cp{4qs5kw5ow5qs17sv5tv}6l{17sy5ty5ow}do{17st5tt}4z{17st5tt}7s{fst}dm{17st5tt}dn{17st5tt}5o{ckwclwcmwcnwcowcpw4lw4wv}dp{17st5tt}dq{17st5tt}7t{5ow}ds{17st5tt}5t{2ktclucmucnu4otcpu4lu4wycoucku}fu{17sv5tv5ow}6p{17sy5ty5ow5qs}ek{17sy5ty5ow}el{17sy5ty5ow}em{17sy5ty5ow}en{5ty}eo{17sy5ty5ow}ep{17sy5ty5ow}es{17sy5ty5qs}et{17sy5ty5ow5qs}eu{17sy5ty5ow5qs}ev{17sy5ty5ow5qs}6z{17sy5ty5ow5qs}fm{17sy5ty5ow5qs}fn{17sy5ty5ow5qs}fo{17sy5ty5ow5qs}fp{17sy5ty5qs}fq{17sy5ty5ow5qs}7r{5ow}fs{17sy5ty5ow5qs}ft{17sv5tv5ow}7m{5ow}fv{17sv5tv5ow}fw{17sv5tv5ow}}}\")\n        }\n    };\n    e.events.push([\n        \"addFont\",\n        function(t) {\n            var e = t.font, r = l.Unicode[e.postScriptName];\n            r && (e.metadata.Unicode = {}, e.metadata.Unicode.widths = r.widths, e.metadata.Unicode.kerning = r.kerning);\n            var n = h.Unicode[e.postScriptName];\n            n && (e.metadata.Unicode.encoding = n, e.encoding = n.codePages[0]);\n        }\n    ]);\n}(E.API), /**\n * @license\n * Licensed under the MIT License.\n * http://opensource.org/licenses/mit-license\n */ function(t) {\n    var e = function(t) {\n        for(var e = t.length, r = new Uint8Array(e), n = 0; n < e; n++)r[n] = t.charCodeAt(n);\n        return r;\n    };\n    t.API.events.push([\n        \"addFont\",\n        function(r) {\n            var n = void 0, i = r.font, a = r.instance;\n            if (!i.isStandardFont) {\n                if (void 0 === a) throw new Error(\"Font does not exist in vFS, import fonts or remove declaration doc.addFont('\" + i.postScriptName + \"').\");\n                if (\"string\" != typeof (n = !1 === a.existsFileInVFS(i.postScriptName) ? a.loadFile(i.postScriptName) : a.getFileFromVFS(i.postScriptName))) throw new Error(\"Font is not stored as string-data in vFS, import fonts or remove declaration doc.addFont('\" + i.postScriptName + \"').\");\n                !function(r, n) {\n                    n = /^\\x00\\x01\\x00\\x00/.test(n) ? e(n) : e(u(n)), r.metadata = t.API.TTFFont.open(n), r.metadata.Unicode = r.metadata.Unicode || {\n                        encoding: {},\n                        kerning: {},\n                        widths: []\n                    }, r.metadata.glyIdsUsed = [\n                        0\n                    ];\n                }(i, n);\n            }\n        }\n    ]);\n}(E), /** @license\n * Copyright (c) 2012 Willow Systems Corporation, https://github.com/willowsystems\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n * ====================================================================\n */ function(t) {\n    function e() {\n        return (n.canvg ? Promise.resolve(n.canvg) : __webpack_require__.e(/*! import() */ \"_app-pages-browser_node_modules_canvg_lib_index_es_js\").then(__webpack_require__.bind(__webpack_require__, /*! canvg */ \"(app-pages-browser)/./node_modules/canvg/lib/index.es.js\"))).catch(function(t) {\n            return Promise.reject(new Error(\"Could not load canvg: \" + t));\n        }).then(function(t) {\n            return t.default ? t.default : t;\n        });\n    }\n    E.API.addSvgAsImage = function(t, r, n, i, o, s, c, u) {\n        if (isNaN(r) || isNaN(n)) throw a.error(\"jsPDF.addSvgAsImage: Invalid coordinates\", arguments), new Error(\"Invalid coordinates passed to jsPDF.addSvgAsImage\");\n        if (isNaN(i) || isNaN(o)) throw a.error(\"jsPDF.addSvgAsImage: Invalid measurements\", arguments), new Error(\"Invalid measurements (width and/or height) passed to jsPDF.addSvgAsImage\");\n        var h = document.createElement(\"canvas\");\n        h.width = i, h.height = o;\n        var l = h.getContext(\"2d\");\n        l.fillStyle = \"#fff\", l.fillRect(0, 0, h.width, h.height);\n        var f = {\n            ignoreMouse: !0,\n            ignoreAnimation: !0,\n            ignoreDimensions: !0\n        }, d = this;\n        return e().then(function(e) {\n            return e.fromString(l, t, f);\n        }, function() {\n            return Promise.reject(new Error(\"Could not load canvg.\"));\n        }).then(function(t) {\n            return t.render(f);\n        }).then(function() {\n            d.addImage(h.toDataURL(\"image/jpeg\", 1), r, n, i, o, c, u);\n        });\n    };\n}(), E.API.putTotalPages = function(t) {\n    var e, r = 0;\n    parseInt(this.internal.getFont().id.substr(1), 10) < 15 ? (e = new RegExp(t, \"g\"), r = this.internal.getNumberOfPages()) : (e = new RegExp(this.pdfEscape16(t, this.internal.getFont()), \"g\"), r = this.pdfEscape16(this.internal.getNumberOfPages() + \"\", this.internal.getFont()));\n    for(var n = 1; n <= this.internal.getNumberOfPages(); n++)for(var i = 0; i < this.internal.pages[n].length; i++)this.internal.pages[n][i] = this.internal.pages[n][i].replace(e, r);\n    return this;\n}, E.API.viewerPreferences = function(e, r) {\n    var n;\n    e = e || {}, r = r || !1;\n    var i, a, o, s = {\n        HideToolbar: {\n            defaultValue: !1,\n            value: !1,\n            type: \"boolean\",\n            explicitSet: !1,\n            valueSet: [\n                !0,\n                !1\n            ],\n            pdfVersion: 1.3\n        },\n        HideMenubar: {\n            defaultValue: !1,\n            value: !1,\n            type: \"boolean\",\n            explicitSet: !1,\n            valueSet: [\n                !0,\n                !1\n            ],\n            pdfVersion: 1.3\n        },\n        HideWindowUI: {\n            defaultValue: !1,\n            value: !1,\n            type: \"boolean\",\n            explicitSet: !1,\n            valueSet: [\n                !0,\n                !1\n            ],\n            pdfVersion: 1.3\n        },\n        FitWindow: {\n            defaultValue: !1,\n            value: !1,\n            type: \"boolean\",\n            explicitSet: !1,\n            valueSet: [\n                !0,\n                !1\n            ],\n            pdfVersion: 1.3\n        },\n        CenterWindow: {\n            defaultValue: !1,\n            value: !1,\n            type: \"boolean\",\n            explicitSet: !1,\n            valueSet: [\n                !0,\n                !1\n            ],\n            pdfVersion: 1.3\n        },\n        DisplayDocTitle: {\n            defaultValue: !1,\n            value: !1,\n            type: \"boolean\",\n            explicitSet: !1,\n            valueSet: [\n                !0,\n                !1\n            ],\n            pdfVersion: 1.4\n        },\n        NonFullScreenPageMode: {\n            defaultValue: \"UseNone\",\n            value: \"UseNone\",\n            type: \"name\",\n            explicitSet: !1,\n            valueSet: [\n                \"UseNone\",\n                \"UseOutlines\",\n                \"UseThumbs\",\n                \"UseOC\"\n            ],\n            pdfVersion: 1.3\n        },\n        Direction: {\n            defaultValue: \"L2R\",\n            value: \"L2R\",\n            type: \"name\",\n            explicitSet: !1,\n            valueSet: [\n                \"L2R\",\n                \"R2L\"\n            ],\n            pdfVersion: 1.3\n        },\n        ViewArea: {\n            defaultValue: \"CropBox\",\n            value: \"CropBox\",\n            type: \"name\",\n            explicitSet: !1,\n            valueSet: [\n                \"MediaBox\",\n                \"CropBox\",\n                \"TrimBox\",\n                \"BleedBox\",\n                \"ArtBox\"\n            ],\n            pdfVersion: 1.4\n        },\n        ViewClip: {\n            defaultValue: \"CropBox\",\n            value: \"CropBox\",\n            type: \"name\",\n            explicitSet: !1,\n            valueSet: [\n                \"MediaBox\",\n                \"CropBox\",\n                \"TrimBox\",\n                \"BleedBox\",\n                \"ArtBox\"\n            ],\n            pdfVersion: 1.4\n        },\n        PrintArea: {\n            defaultValue: \"CropBox\",\n            value: \"CropBox\",\n            type: \"name\",\n            explicitSet: !1,\n            valueSet: [\n                \"MediaBox\",\n                \"CropBox\",\n                \"TrimBox\",\n                \"BleedBox\",\n                \"ArtBox\"\n            ],\n            pdfVersion: 1.4\n        },\n        PrintClip: {\n            defaultValue: \"CropBox\",\n            value: \"CropBox\",\n            type: \"name\",\n            explicitSet: !1,\n            valueSet: [\n                \"MediaBox\",\n                \"CropBox\",\n                \"TrimBox\",\n                \"BleedBox\",\n                \"ArtBox\"\n            ],\n            pdfVersion: 1.4\n        },\n        PrintScaling: {\n            defaultValue: \"AppDefault\",\n            value: \"AppDefault\",\n            type: \"name\",\n            explicitSet: !1,\n            valueSet: [\n                \"AppDefault\",\n                \"None\"\n            ],\n            pdfVersion: 1.6\n        },\n        Duplex: {\n            defaultValue: \"\",\n            value: \"none\",\n            type: \"name\",\n            explicitSet: !1,\n            valueSet: [\n                \"Simplex\",\n                \"DuplexFlipShortEdge\",\n                \"DuplexFlipLongEdge\",\n                \"none\"\n            ],\n            pdfVersion: 1.7\n        },\n        PickTrayByPDFSize: {\n            defaultValue: !1,\n            value: !1,\n            type: \"boolean\",\n            explicitSet: !1,\n            valueSet: [\n                !0,\n                !1\n            ],\n            pdfVersion: 1.7\n        },\n        PrintPageRange: {\n            defaultValue: \"\",\n            value: \"\",\n            type: \"array\",\n            explicitSet: !1,\n            valueSet: null,\n            pdfVersion: 1.7\n        },\n        NumCopies: {\n            defaultValue: 1,\n            value: 1,\n            type: \"integer\",\n            explicitSet: !1,\n            valueSet: null,\n            pdfVersion: 1.7\n        }\n    }, c = Object.keys(s), u = [], h = 0, l = 0, f = 0;\n    function d(t, e) {\n        var r, n = !1;\n        for(r = 0; r < t.length; r += 1)t[r] === e && (n = !0);\n        return n;\n    }\n    if (void 0 === this.internal.viewerpreferences && (this.internal.viewerpreferences = {}, this.internal.viewerpreferences.configuration = JSON.parse(JSON.stringify(s)), this.internal.viewerpreferences.isSubscribed = !1), n = this.internal.viewerpreferences.configuration, \"reset\" === e || !0 === r) {\n        var p = c.length;\n        for(f = 0; f < p; f += 1)n[c[f]].value = n[c[f]].defaultValue, n[c[f]].explicitSet = !1;\n    }\n    if (\"object\" === (0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(e)) {\n        for(a in e)if (o = e[a], d(c, a) && void 0 !== o) {\n            if (\"boolean\" === n[a].type && \"boolean\" == typeof o) n[a].value = o;\n            else if (\"name\" === n[a].type && d(n[a].valueSet, o)) n[a].value = o;\n            else if (\"integer\" === n[a].type && Number.isInteger(o)) n[a].value = o;\n            else if (\"array\" === n[a].type) {\n                for(h = 0; h < o.length; h += 1)if (i = !0, 1 === o[h].length && \"number\" == typeof o[h][0]) u.push(String(o[h] - 1));\n                else if (o[h].length > 1) {\n                    for(l = 0; l < o[h].length; l += 1)\"number\" != typeof o[h][l] && (i = !1);\n                    !0 === i && u.push([\n                        o[h][0] - 1,\n                        o[h][1] - 1\n                    ].join(\" \"));\n                }\n                n[a].value = \"[\" + u.join(\" \") + \"]\";\n            } else n[a].value = n[a].defaultValue;\n            n[a].explicitSet = !0;\n        }\n    }\n    return !1 === this.internal.viewerpreferences.isSubscribed && (this.internal.events.subscribe(\"putCatalog\", function() {\n        var t, e = [];\n        for(t in n)!0 === n[t].explicitSet && (\"name\" === n[t].type ? e.push(\"/\" + t + \" /\" + n[t].value) : e.push(\"/\" + t + \" \" + n[t].value));\n        0 !== e.length && this.internal.write(\"/ViewerPreferences\\n<<\\n\" + e.join(\"\\n\") + \"\\n>>\");\n    }), this.internal.viewerpreferences.isSubscribed = !0), this.internal.viewerpreferences.configuration = n, this;\n}, /** ====================================================================\n * @license\n * jsPDF XMP metadata plugin\n * Copyright (c) 2016 Jussi Utunen, u-jussi@suomi24.fi\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n * ====================================================================\n */ function(t) {\n    var e = function() {\n        var t = '<rdf:RDF xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"><rdf:Description rdf:about=\"\" xmlns:jspdf=\"' + this.internal.__metadata__.namespaceuri + '\"><jspdf:metadata>', e = unescape(encodeURIComponent('<x:xmpmeta xmlns:x=\"adobe:ns:meta/\">')), r = unescape(encodeURIComponent(t)), n = unescape(encodeURIComponent(this.internal.__metadata__.metadata)), i = unescape(encodeURIComponent(\"</jspdf:metadata></rdf:Description></rdf:RDF>\")), a = unescape(encodeURIComponent(\"</x:xmpmeta>\")), o = r.length + n.length + i.length + e.length + a.length;\n        this.internal.__metadata__.metadata_object_number = this.internal.newObject(), this.internal.write(\"<< /Type /Metadata /Subtype /XML /Length \" + o + \" >>\"), this.internal.write(\"stream\"), this.internal.write(e + r + n + i + a), this.internal.write(\"endstream\"), this.internal.write(\"endobj\");\n    }, r = function() {\n        this.internal.__metadata__.metadata_object_number && this.internal.write(\"/Metadata \" + this.internal.__metadata__.metadata_object_number + \" 0 R\");\n    };\n    t.addMetadata = function(t, n) {\n        return void 0 === this.internal.__metadata__ && (this.internal.__metadata__ = {\n            metadata: t,\n            namespaceuri: n || \"http://jspdf.default.namespaceuri/\"\n        }, this.internal.events.subscribe(\"putCatalog\", r), this.internal.events.subscribe(\"postPutResources\", e)), this;\n    };\n}(E.API), function(t) {\n    var e = t.API, r = e.pdfEscape16 = function(t, e) {\n        for(var r, n = e.metadata.Unicode.widths, i = [\n            \"\",\n            \"0\",\n            \"00\",\n            \"000\",\n            \"0000\"\n        ], a = [\n            \"\"\n        ], o = 0, s = t.length; o < s; ++o){\n            if (r = e.metadata.characterToGlyph(t.charCodeAt(o)), e.metadata.glyIdsUsed.push(r), e.metadata.toUnicode[r] = t.charCodeAt(o), -1 == n.indexOf(r) && (n.push(r), n.push([\n                parseInt(e.metadata.widthOfGlyph(r), 10)\n            ])), \"0\" == r) return a.join(\"\");\n            r = r.toString(16), a.push(i[4 - r.length], r);\n        }\n        return a.join(\"\");\n    }, n = function(t) {\n        var e, r, n, i, a, o, s;\n        for(a = \"/CIDInit /ProcSet findresource begin\\n12 dict begin\\nbegincmap\\n/CIDSystemInfo <<\\n  /Registry (Adobe)\\n  /Ordering (UCS)\\n  /Supplement 0\\n>> def\\n/CMapName /Adobe-Identity-UCS def\\n/CMapType 2 def\\n1 begincodespacerange\\n<0000><ffff>\\nendcodespacerange\", n = [], o = 0, s = (r = Object.keys(t).sort(function(t, e) {\n            return t - e;\n        })).length; o < s; o++)e = r[o], n.length >= 100 && (a += \"\\n\" + n.length + \" beginbfchar\\n\" + n.join(\"\\n\") + \"\\nendbfchar\", n = []), void 0 !== t[e] && null !== t[e] && \"function\" == typeof t[e].toString && (i = (\"0000\" + t[e].toString(16)).slice(-4), e = (\"0000\" + (+e).toString(16)).slice(-4), n.push(\"<\" + e + \"><\" + i + \">\"));\n        return n.length && (a += \"\\n\" + n.length + \" beginbfchar\\n\" + n.join(\"\\n\") + \"\\nendbfchar\\n\"), a += \"endcmap\\nCMapName currentdict /CMap defineresource pop\\nend\\nend\";\n    };\n    e.events.push([\n        \"putFont\",\n        function(e) {\n            !function(e) {\n                var r = e.font, i = e.out, a = e.newObject, o = e.putStream;\n                if (r.metadata instanceof t.API.TTFFont && \"Identity-H\" === r.encoding) {\n                    for(var s = r.metadata.Unicode.widths, c = r.metadata.subset.encode(r.metadata.glyIdsUsed, 1), u = \"\", h = 0; h < c.length; h++)u += String.fromCharCode(c[h]);\n                    var l = a();\n                    o({\n                        data: u,\n                        addLength1: !0,\n                        objectId: l\n                    }), i(\"endobj\");\n                    var f = a();\n                    o({\n                        data: n(r.metadata.toUnicode),\n                        addLength1: !0,\n                        objectId: f\n                    }), i(\"endobj\");\n                    var d = a();\n                    i(\"<<\"), i(\"/Type /FontDescriptor\"), i(\"/FontName /\" + F(r.fontName)), i(\"/FontFile2 \" + l + \" 0 R\"), i(\"/FontBBox \" + t.API.PDFObject.convert(r.metadata.bbox)), i(\"/Flags \" + r.metadata.flags), i(\"/StemV \" + r.metadata.stemV), i(\"/ItalicAngle \" + r.metadata.italicAngle), i(\"/Ascent \" + r.metadata.ascender), i(\"/Descent \" + r.metadata.decender), i(\"/CapHeight \" + r.metadata.capHeight), i(\">>\"), i(\"endobj\");\n                    var p = a();\n                    i(\"<<\"), i(\"/Type /Font\"), i(\"/BaseFont /\" + F(r.fontName)), i(\"/FontDescriptor \" + d + \" 0 R\"), i(\"/W \" + t.API.PDFObject.convert(s)), i(\"/CIDToGIDMap /Identity\"), i(\"/DW 1000\"), i(\"/Subtype /CIDFontType2\"), i(\"/CIDSystemInfo\"), i(\"<<\"), i(\"/Supplement 0\"), i(\"/Registry (Adobe)\"), i(\"/Ordering (\" + r.encoding + \")\"), i(\">>\"), i(\">>\"), i(\"endobj\"), r.objectNumber = a(), i(\"<<\"), i(\"/Type /Font\"), i(\"/Subtype /Type0\"), i(\"/ToUnicode \" + f + \" 0 R\"), i(\"/BaseFont /\" + F(r.fontName)), i(\"/Encoding /\" + r.encoding), i(\"/DescendantFonts [\" + p + \" 0 R]\"), i(\">>\"), i(\"endobj\"), r.isAlreadyPutted = !0;\n                }\n            }(e);\n        }\n    ]);\n    e.events.push([\n        \"putFont\",\n        function(e) {\n            !function(e) {\n                var r = e.font, i = e.out, a = e.newObject, o = e.putStream;\n                if (r.metadata instanceof t.API.TTFFont && \"WinAnsiEncoding\" === r.encoding) {\n                    for(var s = r.metadata.rawData, c = \"\", u = 0; u < s.length; u++)c += String.fromCharCode(s[u]);\n                    var h = a();\n                    o({\n                        data: c,\n                        addLength1: !0,\n                        objectId: h\n                    }), i(\"endobj\");\n                    var l = a();\n                    o({\n                        data: n(r.metadata.toUnicode),\n                        addLength1: !0,\n                        objectId: l\n                    }), i(\"endobj\");\n                    var f = a();\n                    i(\"<<\"), i(\"/Descent \" + r.metadata.decender), i(\"/CapHeight \" + r.metadata.capHeight), i(\"/StemV \" + r.metadata.stemV), i(\"/Type /FontDescriptor\"), i(\"/FontFile2 \" + h + \" 0 R\"), i(\"/Flags 96\"), i(\"/FontBBox \" + t.API.PDFObject.convert(r.metadata.bbox)), i(\"/FontName /\" + F(r.fontName)), i(\"/ItalicAngle \" + r.metadata.italicAngle), i(\"/Ascent \" + r.metadata.ascender), i(\">>\"), i(\"endobj\"), r.objectNumber = a();\n                    for(var d = 0; d < r.metadata.hmtx.widths.length; d++)r.metadata.hmtx.widths[d] = parseInt(r.metadata.hmtx.widths[d] * (1e3 / r.metadata.head.unitsPerEm));\n                    i(\"<</Subtype/TrueType/Type/Font/ToUnicode \" + l + \" 0 R/BaseFont/\" + F(r.fontName) + \"/FontDescriptor \" + f + \" 0 R/Encoding/\" + r.encoding + \" /FirstChar 29 /LastChar 255 /Widths \" + t.API.PDFObject.convert(r.metadata.hmtx.widths) + \">>\"), i(\"endobj\"), r.isAlreadyPutted = !0;\n                }\n            }(e);\n        }\n    ]);\n    var i = function(t) {\n        var e, n = t.text || \"\", i = t.x, a = t.y, o = t.options || {}, s = t.mutex || {}, c = s.pdfEscape, u = s.activeFontKey, h = s.fonts, l = u, f = \"\", d = 0, p = \"\", g = h[l].encoding;\n        if (\"Identity-H\" !== h[l].encoding) return {\n            text: n,\n            x: i,\n            y: a,\n            options: o,\n            mutex: s\n        };\n        for(p = n, l = u, Array.isArray(n) && (p = n[0]), d = 0; d < p.length; d += 1)h[l].metadata.hasOwnProperty(\"cmap\") && (e = h[l].metadata.cmap.unicode.codeMap[p[d].charCodeAt(0)]), e || p[d].charCodeAt(0) < 256 && h[l].metadata.hasOwnProperty(\"Unicode\") ? f += p[d] : f += \"\";\n        var m = \"\";\n        return parseInt(l.slice(1)) < 14 || \"WinAnsiEncoding\" === g ? m = c(f, l).split(\"\").map(function(t) {\n            return t.charCodeAt(0).toString(16);\n        }).join(\"\") : \"Identity-H\" === g && (m = r(f, h[l])), s.isHex = !0, {\n            text: m,\n            x: i,\n            y: a,\n            options: o,\n            mutex: s\n        };\n    };\n    e.events.push([\n        \"postProcessText\",\n        function(t) {\n            var e = t.text || \"\", r = [], n = {\n                text: e,\n                x: t.x,\n                y: t.y,\n                options: t.options,\n                mutex: t.mutex\n            };\n            if (Array.isArray(e)) {\n                var a = 0;\n                for(a = 0; a < e.length; a += 1)Array.isArray(e[a]) && 3 === e[a].length ? r.push([\n                    i(Object.assign({}, n, {\n                        text: e[a][0]\n                    })).text,\n                    e[a][1],\n                    e[a][2]\n                ]) : r.push(i(Object.assign({}, n, {\n                    text: e[a]\n                })).text);\n                t.text = r;\n            } else t.text = i(Object.assign({}, n, {\n                text: e\n            })).text;\n        }\n    ]);\n}(E), /**\n * @license\n * jsPDF virtual FileSystem functionality\n *\n * Licensed under the MIT License.\n * http://opensource.org/licenses/mit-license\n */ function(t) {\n    var e = function() {\n        return void 0 === this.internal.vFS && (this.internal.vFS = {}), !0;\n    };\n    t.existsFileInVFS = function(t) {\n        return e.call(this), void 0 !== this.internal.vFS[t];\n    }, t.addFileToVFS = function(t, r) {\n        return e.call(this), this.internal.vFS[t] = r, this;\n    }, t.getFileFromVFS = function(t) {\n        return e.call(this), void 0 !== this.internal.vFS[t] ? this.internal.vFS[t] : null;\n    };\n}(E.API), /**\n * @license\n * Unicode Bidi Engine based on the work of Alex Shensis (@asthensis)\n * MIT License\n */ function(t) {\n    t.__bidiEngine__ = t.prototype.__bidiEngine__ = function(t) {\n        var r, n, i, a, o, s, c, u = e, h = [\n            [\n                0,\n                3,\n                0,\n                1,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                3,\n                0,\n                1,\n                2,\n                2,\n                0\n            ],\n            [\n                0,\n                3,\n                0,\n                17,\n                2,\n                0,\n                1\n            ],\n            [\n                0,\n                3,\n                5,\n                5,\n                4,\n                1,\n                0\n            ],\n            [\n                0,\n                3,\n                21,\n                21,\n                4,\n                0,\n                1\n            ],\n            [\n                0,\n                3,\n                5,\n                5,\n                4,\n                2,\n                0\n            ]\n        ], l = [\n            [\n                2,\n                0,\n                1,\n                1,\n                0,\n                1,\n                0\n            ],\n            [\n                2,\n                0,\n                1,\n                1,\n                0,\n                2,\n                0\n            ],\n            [\n                2,\n                0,\n                2,\n                1,\n                3,\n                2,\n                0\n            ],\n            [\n                2,\n                0,\n                2,\n                33,\n                3,\n                1,\n                1\n            ]\n        ], f = {\n            L: 0,\n            R: 1,\n            EN: 2,\n            AN: 3,\n            N: 4,\n            B: 5,\n            S: 6\n        }, d = {\n            0: 0,\n            5: 1,\n            6: 2,\n            7: 3,\n            32: 4,\n            251: 5,\n            254: 6,\n            255: 7\n        }, p = [\n            \"(\",\n            \")\",\n            \"(\",\n            \"<\",\n            \">\",\n            \"<\",\n            \"[\",\n            \"]\",\n            \"[\",\n            \"{\",\n            \"}\",\n            \"{\",\n            \"\\xab\",\n            \"\\xbb\",\n            \"\\xab\",\n            \"‹\",\n            \"›\",\n            \"‹\",\n            \"⁅\",\n            \"⁆\",\n            \"⁅\",\n            \"⁽\",\n            \"⁾\",\n            \"⁽\",\n            \"₍\",\n            \"₎\",\n            \"₍\",\n            \"≤\",\n            \"≥\",\n            \"≤\",\n            \"〈\",\n            \"〉\",\n            \"〈\",\n            \"﹙\",\n            \"﹚\",\n            \"﹙\",\n            \"﹛\",\n            \"﹜\",\n            \"﹛\",\n            \"﹝\",\n            \"﹞\",\n            \"﹝\",\n            \"﹤\",\n            \"﹥\",\n            \"﹤\"\n        ], g = new RegExp(/^([1-4|9]|1[0-9]|2[0-9]|3[0168]|4[04589]|5[012]|7[78]|159|16[0-9]|17[0-2]|21[569]|22[03489]|250)$/), m = !1, v = 0;\n        this.__bidiEngine__ = {};\n        var b = function(t) {\n            var e = t.charCodeAt(), r = e >> 8, n = d[r];\n            return void 0 !== n ? u[256 * n + (255 & e)] : 252 === r || 253 === r ? \"AL\" : g.test(r) ? \"L\" : 8 === r ? \"R\" : \"N\";\n        }, y = function(t) {\n            for(var e, r = 0; r < t.length; r++){\n                if (\"L\" === (e = b(t.charAt(r)))) return !1;\n                if (\"R\" === e) return !0;\n            }\n            return !1;\n        }, w = function(t, e, o, s) {\n            var c, u, h, l, f = e[s];\n            switch(f){\n                case \"L\":\n                case \"R\":\n                    m = !1;\n                    break;\n                case \"N\":\n                case \"AN\":\n                    break;\n                case \"EN\":\n                    m && (f = \"AN\");\n                    break;\n                case \"AL\":\n                    m = !0, f = \"R\";\n                    break;\n                case \"WS\":\n                    f = \"N\";\n                    break;\n                case \"CS\":\n                    s < 1 || s + 1 >= e.length || \"EN\" !== (c = o[s - 1]) && \"AN\" !== c || \"EN\" !== (u = e[s + 1]) && \"AN\" !== u ? f = \"N\" : m && (u = \"AN\"), f = u === c ? u : \"N\";\n                    break;\n                case \"ES\":\n                    f = \"EN\" === (c = s > 0 ? o[s - 1] : \"B\") && s + 1 < e.length && \"EN\" === e[s + 1] ? \"EN\" : \"N\";\n                    break;\n                case \"ET\":\n                    if (s > 0 && \"EN\" === o[s - 1]) {\n                        f = \"EN\";\n                        break;\n                    }\n                    if (m) {\n                        f = \"N\";\n                        break;\n                    }\n                    for(h = s + 1, l = e.length; h < l && \"ET\" === e[h];)h++;\n                    f = h < l && \"EN\" === e[h] ? \"EN\" : \"N\";\n                    break;\n                case \"NSM\":\n                    if (i && !a) {\n                        for(l = e.length, h = s + 1; h < l && \"NSM\" === e[h];)h++;\n                        if (h < l) {\n                            var d = t[s], p = d >= 1425 && d <= 2303 || 64286 === d;\n                            if (c = e[h], p && (\"R\" === c || \"AL\" === c)) {\n                                f = \"R\";\n                                break;\n                            }\n                        }\n                    }\n                    f = s < 1 || \"B\" === (c = e[s - 1]) ? \"N\" : o[s - 1];\n                    break;\n                case \"B\":\n                    m = !1, r = !0, f = v;\n                    break;\n                case \"S\":\n                    n = !0, f = \"N\";\n                    break;\n                case \"LRE\":\n                case \"RLE\":\n                case \"LRO\":\n                case \"RLO\":\n                case \"PDF\":\n                    m = !1;\n                    break;\n                case \"BN\":\n                    f = \"N\";\n            }\n            return f;\n        }, N = function(t, e, r) {\n            var n = t.split(\"\");\n            return r && L(n, r, {\n                hiLevel: v\n            }), n.reverse(), e && e.reverse(), n.join(\"\");\n        }, L = function(t, e, i) {\n            var a, o, s, c, u, d = -1, p = t.length, g = 0, y = [], N = v ? l : h, L = [];\n            for(m = !1, r = !1, n = !1, o = 0; o < p; o++)L[o] = b(t[o]);\n            for(s = 0; s < p; s++){\n                if (u = g, y[s] = w(t, L, y, s), a = 240 & (g = N[u][f[y[s]]]), g &= 15, e[s] = c = N[g][5], a > 0) if (16 === a) {\n                    for(o = d; o < s; o++)e[o] = 1;\n                    d = -1;\n                } else d = -1;\n                if (N[g][6]) -1 === d && (d = s);\n                else if (d > -1) {\n                    for(o = d; o < s; o++)e[o] = c;\n                    d = -1;\n                }\n                \"B\" === L[s] && (e[s] = 0), i.hiLevel |= c;\n            }\n            n && function(t, e, r) {\n                for(var n = 0; n < r; n++)if (\"S\" === t[n]) {\n                    e[n] = v;\n                    for(var i = n - 1; i >= 0 && \"WS\" === t[i]; i--)e[i] = v;\n                }\n            }(L, e, p);\n        }, A = function(t, e, n, i, a) {\n            if (!(a.hiLevel < t)) {\n                if (1 === t && 1 === v && !r) return e.reverse(), void (n && n.reverse());\n                for(var o, s, c, u, h = e.length, l = 0; l < h;){\n                    if (i[l] >= t) {\n                        for(c = l + 1; c < h && i[c] >= t;)c++;\n                        for(u = l, s = c - 1; u < s; u++, s--)o = e[u], e[u] = e[s], e[s] = o, n && (o = n[u], n[u] = n[s], n[s] = o);\n                        l = c;\n                    }\n                    l++;\n                }\n            }\n        }, x = function(t, e, r) {\n            var n = t.split(\"\"), i = {\n                hiLevel: v\n            };\n            return r || (r = []), L(n, r, i), function(t, e, r) {\n                if (0 !== r.hiLevel && c) for(var n, i = 0; i < t.length; i++)1 === e[i] && (n = p.indexOf(t[i])) >= 0 && (t[i] = p[n + 1]);\n            }(n, r, i), A(2, n, e, r, i), A(1, n, e, r, i), n.join(\"\");\n        };\n        return this.__bidiEngine__.doBidiReorder = function(t, e, r) {\n            if (function(t, e) {\n                if (e) for(var r = 0; r < t.length; r++)e[r] = r;\n                void 0 === a && (a = y(t)), void 0 === s && (s = y(t));\n            }(t, e), i || !o || s) if (i && o && a ^ s) v = a ? 1 : 0, t = N(t, e, r);\n            else if (!i && o && s) v = a ? 1 : 0, t = x(t, e, r), t = N(t, e);\n            else if (!i || a || o || s) {\n                if (i && !o && a ^ s) t = N(t, e), a ? (v = 0, t = x(t, e, r)) : (v = 1, t = x(t, e, r), t = N(t, e));\n                else if (i && a && !o && s) v = 1, t = x(t, e, r), t = N(t, e);\n                else if (!i && !o && a ^ s) {\n                    var n = c;\n                    a ? (v = 1, t = x(t, e, r), v = 0, c = !1, t = x(t, e, r), c = n) : (v = 0, t = x(t, e, r), t = N(t, e), v = 1, c = !1, t = x(t, e, r), c = n, t = N(t, e));\n                }\n            } else v = 0, t = x(t, e, r);\n            else v = a ? 1 : 0, t = x(t, e, r);\n            return t;\n        }, this.__bidiEngine__.setOptions = function(t) {\n            t && (i = t.isInputVisual, o = t.isOutputVisual, a = t.isInputRtl, s = t.isOutputRtl, c = t.isSymmetricSwapping);\n        }, this.__bidiEngine__.setOptions(t), this.__bidiEngine__;\n    };\n    var e = [\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"S\",\n        \"B\",\n        \"S\",\n        \"WS\",\n        \"B\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"B\",\n        \"B\",\n        \"B\",\n        \"S\",\n        \"WS\",\n        \"N\",\n        \"N\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"ES\",\n        \"CS\",\n        \"ES\",\n        \"CS\",\n        \"CS\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"CS\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"B\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"CS\",\n        \"N\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"L\",\n        \"N\",\n        \"N\",\n        \"BN\",\n        \"N\",\n        \"N\",\n        \"ET\",\n        \"ET\",\n        \"EN\",\n        \"EN\",\n        \"N\",\n        \"L\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"EN\",\n        \"L\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"N\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"N\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"N\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"N\",\n        \"N\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"N\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"N\",\n        \"L\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"ET\",\n        \"N\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"R\",\n        \"NSM\",\n        \"R\",\n        \"NSM\",\n        \"NSM\",\n        \"R\",\n        \"NSM\",\n        \"NSM\",\n        \"R\",\n        \"NSM\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"AN\",\n        \"AN\",\n        \"AN\",\n        \"AN\",\n        \"AN\",\n        \"AN\",\n        \"N\",\n        \"N\",\n        \"AL\",\n        \"ET\",\n        \"ET\",\n        \"AL\",\n        \"CS\",\n        \"AL\",\n        \"N\",\n        \"N\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"AL\",\n        \"AL\",\n        \"N\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"AN\",\n        \"AN\",\n        \"AN\",\n        \"AN\",\n        \"AN\",\n        \"AN\",\n        \"AN\",\n        \"AN\",\n        \"AN\",\n        \"AN\",\n        \"ET\",\n        \"AN\",\n        \"AN\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"NSM\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"AN\",\n        \"N\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"AL\",\n        \"AL\",\n        \"NSM\",\n        \"NSM\",\n        \"N\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"AL\",\n        \"AL\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"N\",\n        \"AL\",\n        \"AL\",\n        \"NSM\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"N\",\n        \"N\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"AL\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"R\",\n        \"R\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"R\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"WS\",\n        \"WS\",\n        \"WS\",\n        \"WS\",\n        \"WS\",\n        \"WS\",\n        \"WS\",\n        \"WS\",\n        \"WS\",\n        \"WS\",\n        \"WS\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"L\",\n        \"R\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"WS\",\n        \"B\",\n        \"LRE\",\n        \"RLE\",\n        \"PDF\",\n        \"LRO\",\n        \"RLO\",\n        \"CS\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"CS\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"WS\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"N\",\n        \"LRI\",\n        \"RLI\",\n        \"FSI\",\n        \"PDI\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"EN\",\n        \"L\",\n        \"N\",\n        \"N\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"ES\",\n        \"ES\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"L\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"ES\",\n        \"ES\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"R\",\n        \"NSM\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"ES\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"N\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"N\",\n        \"R\",\n        \"N\",\n        \"R\",\n        \"R\",\n        \"N\",\n        \"R\",\n        \"R\",\n        \"N\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"CS\",\n        \"N\",\n        \"CS\",\n        \"N\",\n        \"N\",\n        \"CS\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"ET\",\n        \"N\",\n        \"N\",\n        \"ES\",\n        \"ES\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"ET\",\n        \"ET\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"N\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"N\",\n        \"N\",\n        \"BN\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"ES\",\n        \"CS\",\n        \"ES\",\n        \"CS\",\n        \"CS\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"CS\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"N\",\n        \"N\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"N\",\n        \"N\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"N\",\n        \"N\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"ET\",\n        \"ET\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"ET\",\n        \"ET\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\"\n    ], r = new t.__bidiEngine__({\n        isInputVisual: !0\n    });\n    t.API.events.push([\n        \"postProcessText\",\n        function(t) {\n            var e = t.text;\n            t.x, t.y;\n            var n = t.options || {};\n            t.mutex, n.lang;\n            var i = [];\n            if (n.isInputVisual = \"boolean\" != typeof n.isInputVisual || n.isInputVisual, r.setOptions(n), \"[object Array]\" === Object.prototype.toString.call(e)) {\n                var a = 0;\n                for(i = [], a = 0; a < e.length; a += 1)\"[object Array]\" === Object.prototype.toString.call(e[a]) ? i.push([\n                    r.doBidiReorder(e[a][0]),\n                    e[a][1],\n                    e[a][2]\n                ]) : i.push([\n                    r.doBidiReorder(e[a])\n                ]);\n                t.text = i;\n            } else t.text = r.doBidiReorder(e);\n            r.setOptions({\n                isInputVisual: !0\n            });\n        }\n    ]);\n}(E), E.API.TTFFont = function() {\n    function t(t) {\n        var e;\n        if (this.rawData = t, e = this.contents = new ne(t), this.contents.pos = 4, \"ttcf\" === e.readString(4)) throw new Error(\"TTCF not supported.\");\n        e.pos = 0, this.parse(), this.subset = new Le(this), this.registerTTF();\n    }\n    return t.open = function(e) {\n        return new t(e);\n    }, t.prototype.parse = function() {\n        return this.directory = new ie(this.contents), this.head = new se(this), this.name = new pe(this), this.cmap = new ue(this), this.toUnicode = {}, this.hhea = new he(this), this.maxp = new ge(this), this.hmtx = new me(this), this.post = new fe(this), this.os2 = new le(this), this.loca = new Ne(this), this.glyf = new be(this), this.ascender = this.os2.exists && this.os2.ascender || this.hhea.ascender, this.decender = this.os2.exists && this.os2.decender || this.hhea.decender, this.lineGap = this.os2.exists && this.os2.lineGap || this.hhea.lineGap, this.bbox = [\n            this.head.xMin,\n            this.head.yMin,\n            this.head.xMax,\n            this.head.yMax\n        ];\n    }, t.prototype.registerTTF = function() {\n        var t, e, r, n, i;\n        if (this.scaleFactor = 1e3 / this.head.unitsPerEm, this.bbox = (function() {\n            var e, r, n, i;\n            for(i = [], e = 0, r = (n = this.bbox).length; e < r; e++)t = n[e], i.push(Math.round(t * this.scaleFactor));\n            return i;\n        }).call(this), this.stemV = 0, this.post.exists ? (r = 255 & (n = this.post.italic_angle), 0 != (32768 & (e = n >> 16)) && (e = -(1 + (65535 ^ e))), this.italicAngle = +(e + \".\" + r)) : this.italicAngle = 0, this.ascender = Math.round(this.ascender * this.scaleFactor), this.decender = Math.round(this.decender * this.scaleFactor), this.lineGap = Math.round(this.lineGap * this.scaleFactor), this.capHeight = this.os2.exists && this.os2.capHeight || this.ascender, this.xHeight = this.os2.exists && this.os2.xHeight || 0, this.familyClass = (this.os2.exists && this.os2.familyClass || 0) >> 8, this.isSerif = 1 === (i = this.familyClass) || 2 === i || 3 === i || 4 === i || 5 === i || 7 === i, this.isScript = 10 === this.familyClass, this.flags = 0, this.post.isFixedPitch && (this.flags |= 1), this.isSerif && (this.flags |= 2), this.isScript && (this.flags |= 8), 0 !== this.italicAngle && (this.flags |= 64), this.flags |= 32, !this.cmap.unicode) throw new Error(\"No unicode cmap for font\");\n    }, t.prototype.characterToGlyph = function(t) {\n        var e;\n        return (null != (e = this.cmap.unicode) ? e.codeMap[t] : void 0) || 0;\n    }, t.prototype.widthOfGlyph = function(t) {\n        var e;\n        return e = 1e3 / this.head.unitsPerEm, this.hmtx.forGlyph(t).advance * e;\n    }, t.prototype.widthOfString = function(t, e, r) {\n        var n, i, a, o;\n        for(a = 0, i = 0, o = (t = \"\" + t).length; 0 <= o ? i < o : i > o; i = 0 <= o ? ++i : --i)n = t.charCodeAt(i), a += this.widthOfGlyph(this.characterToGlyph(n)) + r * (1e3 / e) || 0;\n        return a * (e / 1e3);\n    }, t.prototype.lineHeight = function(t, e) {\n        var r;\n        return null == e && (e = !1), r = e ? this.lineGap : 0, (this.ascender + r - this.decender) / 1e3 * t;\n    }, t;\n}();\nvar re, ne = function() {\n    function t(t) {\n        this.data = null != t ? t : [], this.pos = 0, this.length = this.data.length;\n    }\n    return t.prototype.readByte = function() {\n        return this.data[this.pos++];\n    }, t.prototype.writeByte = function(t) {\n        return this.data[this.pos++] = t;\n    }, t.prototype.readUInt32 = function() {\n        return 16777216 * this.readByte() + (this.readByte() << 16) + (this.readByte() << 8) + this.readByte();\n    }, t.prototype.writeUInt32 = function(t) {\n        return this.writeByte(t >>> 24 & 255), this.writeByte(t >> 16 & 255), this.writeByte(t >> 8 & 255), this.writeByte(255 & t);\n    }, t.prototype.readInt32 = function() {\n        var t;\n        return (t = this.readUInt32()) >= 2147483648 ? t - 4294967296 : t;\n    }, t.prototype.writeInt32 = function(t) {\n        return t < 0 && (t += 4294967296), this.writeUInt32(t);\n    }, t.prototype.readUInt16 = function() {\n        return this.readByte() << 8 | this.readByte();\n    }, t.prototype.writeUInt16 = function(t) {\n        return this.writeByte(t >> 8 & 255), this.writeByte(255 & t);\n    }, t.prototype.readInt16 = function() {\n        var t;\n        return (t = this.readUInt16()) >= 32768 ? t - 65536 : t;\n    }, t.prototype.writeInt16 = function(t) {\n        return t < 0 && (t += 65536), this.writeUInt16(t);\n    }, t.prototype.readString = function(t) {\n        var e, r;\n        for(r = [], e = 0; 0 <= t ? e < t : e > t; e = 0 <= t ? ++e : --e)r[e] = String.fromCharCode(this.readByte());\n        return r.join(\"\");\n    }, t.prototype.writeString = function(t) {\n        var e, r, n;\n        for(n = [], e = 0, r = t.length; 0 <= r ? e < r : e > r; e = 0 <= r ? ++e : --e)n.push(this.writeByte(t.charCodeAt(e)));\n        return n;\n    }, t.prototype.readShort = function() {\n        return this.readInt16();\n    }, t.prototype.writeShort = function(t) {\n        return this.writeInt16(t);\n    }, t.prototype.readLongLong = function() {\n        var t, e, r, n, i, a, o, s;\n        return t = this.readByte(), e = this.readByte(), r = this.readByte(), n = this.readByte(), i = this.readByte(), a = this.readByte(), o = this.readByte(), s = this.readByte(), 128 & t ? -1 * (72057594037927940 * (255 ^ t) + 281474976710656 * (255 ^ e) + 1099511627776 * (255 ^ r) + 4294967296 * (255 ^ n) + 16777216 * (255 ^ i) + 65536 * (255 ^ a) + 256 * (255 ^ o) + (255 ^ s) + 1) : 72057594037927940 * t + 281474976710656 * e + 1099511627776 * r + 4294967296 * n + 16777216 * i + 65536 * a + 256 * o + s;\n    }, t.prototype.writeLongLong = function(t) {\n        var e, r;\n        return e = Math.floor(t / 4294967296), r = 4294967295 & t, this.writeByte(e >> 24 & 255), this.writeByte(e >> 16 & 255), this.writeByte(e >> 8 & 255), this.writeByte(255 & e), this.writeByte(r >> 24 & 255), this.writeByte(r >> 16 & 255), this.writeByte(r >> 8 & 255), this.writeByte(255 & r);\n    }, t.prototype.readInt = function() {\n        return this.readInt32();\n    }, t.prototype.writeInt = function(t) {\n        return this.writeInt32(t);\n    }, t.prototype.read = function(t) {\n        var e, r;\n        for(e = [], r = 0; 0 <= t ? r < t : r > t; r = 0 <= t ? ++r : --r)e.push(this.readByte());\n        return e;\n    }, t.prototype.write = function(t) {\n        var e, r, n, i;\n        for(i = [], r = 0, n = t.length; r < n; r++)e = t[r], i.push(this.writeByte(e));\n        return i;\n    }, t;\n}(), ie = function() {\n    var t;\n    function e(t) {\n        var e, r, n;\n        for(this.scalarType = t.readInt(), this.tableCount = t.readShort(), this.searchRange = t.readShort(), this.entrySelector = t.readShort(), this.rangeShift = t.readShort(), this.tables = {}, r = 0, n = this.tableCount; 0 <= n ? r < n : r > n; r = 0 <= n ? ++r : --r)e = {\n            tag: t.readString(4),\n            checksum: t.readInt(),\n            offset: t.readInt(),\n            length: t.readInt()\n        }, this.tables[e.tag] = e;\n    }\n    return e.prototype.encode = function(e) {\n        var r, n, i, a, o, s, c, u, h, l, f, d, p;\n        for(p in f = Object.keys(e).length, s = Math.log(2), h = 16 * Math.floor(Math.log(f) / s), a = Math.floor(h / s), u = 16 * f - h, (n = new ne).writeInt(this.scalarType), n.writeShort(f), n.writeShort(h), n.writeShort(a), n.writeShort(u), i = 16 * f, c = n.pos + i, o = null, d = [], e)for(l = e[p], n.writeString(p), n.writeInt(t(l)), n.writeInt(c), n.writeInt(l.length), d = d.concat(l), \"head\" === p && (o = c), c += l.length; c % 4;)d.push(0), c++;\n        return n.write(d), r = 2981146554 - t(n.data), n.pos = o + 8, n.writeUInt32(r), n.data;\n    }, t = function(t) {\n        var e, r, n, i;\n        for(t = ve.call(t); t.length % 4;)t.push(0);\n        for(n = new ne(t), r = 0, e = 0, i = t.length; e < i; e = e += 4)r += n.readUInt32();\n        return 4294967295 & r;\n    }, e;\n}(), ae = {}.hasOwnProperty, oe = function(t, e) {\n    for(var r in e)ae.call(e, r) && (t[r] = e[r]);\n    function n() {\n        this.constructor = t;\n    }\n    return n.prototype = e.prototype, t.prototype = new n, t.__super__ = e.prototype, t;\n};\nre = function() {\n    function t(t) {\n        var e;\n        this.file = t, e = this.file.directory.tables[this.tag], this.exists = !!e, e && (this.offset = e.offset, this.length = e.length, this.parse(this.file.contents));\n    }\n    return t.prototype.parse = function() {}, t.prototype.encode = function() {}, t.prototype.raw = function() {\n        return this.exists ? (this.file.contents.pos = this.offset, this.file.contents.read(this.length)) : null;\n    }, t;\n}();\nvar se = function(t) {\n    function e() {\n        return e.__super__.constructor.apply(this, arguments);\n    }\n    return oe(e, re), e.prototype.tag = \"head\", e.prototype.parse = function(t) {\n        return t.pos = this.offset, this.version = t.readInt(), this.revision = t.readInt(), this.checkSumAdjustment = t.readInt(), this.magicNumber = t.readInt(), this.flags = t.readShort(), this.unitsPerEm = t.readShort(), this.created = t.readLongLong(), this.modified = t.readLongLong(), this.xMin = t.readShort(), this.yMin = t.readShort(), this.xMax = t.readShort(), this.yMax = t.readShort(), this.macStyle = t.readShort(), this.lowestRecPPEM = t.readShort(), this.fontDirectionHint = t.readShort(), this.indexToLocFormat = t.readShort(), this.glyphDataFormat = t.readShort();\n    }, e.prototype.encode = function(t) {\n        var e;\n        return (e = new ne).writeInt(this.version), e.writeInt(this.revision), e.writeInt(this.checkSumAdjustment), e.writeInt(this.magicNumber), e.writeShort(this.flags), e.writeShort(this.unitsPerEm), e.writeLongLong(this.created), e.writeLongLong(this.modified), e.writeShort(this.xMin), e.writeShort(this.yMin), e.writeShort(this.xMax), e.writeShort(this.yMax), e.writeShort(this.macStyle), e.writeShort(this.lowestRecPPEM), e.writeShort(this.fontDirectionHint), e.writeShort(t), e.writeShort(this.glyphDataFormat), e.data;\n    }, e;\n}(), ce = function() {\n    function t(t, e) {\n        var r, n, i, a, o, s, c, u, h, l, f, d, p, g, m, v, b;\n        switch(this.platformID = t.readUInt16(), this.encodingID = t.readShort(), this.offset = e + t.readInt(), h = t.pos, t.pos = this.offset, this.format = t.readUInt16(), this.length = t.readUInt16(), this.language = t.readUInt16(), this.isUnicode = 3 === this.platformID && 1 === this.encodingID && 4 === this.format || 0 === this.platformID && 4 === this.format, this.codeMap = {}, this.format){\n            case 0:\n                for(s = 0; s < 256; ++s)this.codeMap[s] = t.readByte();\n                break;\n            case 4:\n                for(f = t.readUInt16(), l = f / 2, t.pos += 6, i = function() {\n                    var e, r;\n                    for(r = [], s = e = 0; 0 <= l ? e < l : e > l; s = 0 <= l ? ++e : --e)r.push(t.readUInt16());\n                    return r;\n                }(), t.pos += 2, p = function() {\n                    var e, r;\n                    for(r = [], s = e = 0; 0 <= l ? e < l : e > l; s = 0 <= l ? ++e : --e)r.push(t.readUInt16());\n                    return r;\n                }(), c = function() {\n                    var e, r;\n                    for(r = [], s = e = 0; 0 <= l ? e < l : e > l; s = 0 <= l ? ++e : --e)r.push(t.readUInt16());\n                    return r;\n                }(), u = function() {\n                    var e, r;\n                    for(r = [], s = e = 0; 0 <= l ? e < l : e > l; s = 0 <= l ? ++e : --e)r.push(t.readUInt16());\n                    return r;\n                }(), n = (this.length - t.pos + this.offset) / 2, o = function() {\n                    var e, r;\n                    for(r = [], s = e = 0; 0 <= n ? e < n : e > n; s = 0 <= n ? ++e : --e)r.push(t.readUInt16());\n                    return r;\n                }(), s = m = 0, b = i.length; m < b; s = ++m)for(g = i[s], r = v = d = p[s]; d <= g ? v <= g : v >= g; r = d <= g ? ++v : --v)0 === u[s] ? a = r + c[s] : 0 !== (a = o[u[s] / 2 + (r - d) - (l - s)] || 0) && (a += c[s]), this.codeMap[r] = 65535 & a;\n        }\n        t.pos = h;\n    }\n    return t.encode = function(t, e) {\n        var r, n, i, a, o, s, c, u, h, l, f, d, p, g, m, v, b, y, w, N, L, A, x, S, _, P, k, I, F, C, j, O, B, M, E, q, D, R, T, U, z, H, W, V, G, Y;\n        switch(I = new ne, a = Object.keys(t).sort(function(t, e) {\n            return t - e;\n        }), e){\n            case \"macroman\":\n                for(p = 0, g = function() {\n                    var t = [];\n                    for(d = 0; d < 256; ++d)t.push(0);\n                    return t;\n                }(), v = {\n                    0: 0\n                }, i = {}, F = 0, B = a.length; F < B; F++)null == v[W = t[n = a[F]]] && (v[W] = ++p), i[n] = {\n                    old: t[n],\n                    new: v[t[n]]\n                }, g[n] = v[t[n]];\n                return I.writeUInt16(1), I.writeUInt16(0), I.writeUInt32(12), I.writeUInt16(0), I.writeUInt16(262), I.writeUInt16(0), I.write(g), {\n                    charMap: i,\n                    subtable: I.data,\n                    maxGlyphID: p + 1\n                };\n            case \"unicode\":\n                for(P = [], h = [], b = 0, v = {}, r = {}, m = c = null, C = 0, M = a.length; C < M; C++)null == v[w = t[n = a[C]]] && (v[w] = ++b), r[n] = {\n                    old: w,\n                    new: v[w]\n                }, o = v[w] - n, null != m && o === c || (m && h.push(m), P.push(n), c = o), m = n;\n                for(m && h.push(m), h.push(65535), P.push(65535), S = 2 * (x = P.length), A = 2 * Math.pow(Math.log(x) / Math.LN2, 2), l = Math.log(A / 2) / Math.LN2, L = 2 * x - A, s = [], N = [], f = [], d = j = 0, E = P.length; j < E; d = ++j){\n                    if (_ = P[d], u = h[d], 65535 === _) {\n                        s.push(0), N.push(0);\n                        break;\n                    }\n                    if (_ - (k = r[_].new) >= 32768) for(s.push(0), N.push(2 * (f.length + x - d)), n = O = _; _ <= u ? O <= u : O >= u; n = _ <= u ? ++O : --O)f.push(r[n].new);\n                    else s.push(k - _), N.push(0);\n                }\n                for(I.writeUInt16(3), I.writeUInt16(1), I.writeUInt32(12), I.writeUInt16(4), I.writeUInt16(16 + 8 * x + 2 * f.length), I.writeUInt16(0), I.writeUInt16(S), I.writeUInt16(A), I.writeUInt16(l), I.writeUInt16(L), z = 0, q = h.length; z < q; z++)n = h[z], I.writeUInt16(n);\n                for(I.writeUInt16(0), H = 0, D = P.length; H < D; H++)n = P[H], I.writeUInt16(n);\n                for(V = 0, R = s.length; V < R; V++)o = s[V], I.writeUInt16(o);\n                for(G = 0, T = N.length; G < T; G++)y = N[G], I.writeUInt16(y);\n                for(Y = 0, U = f.length; Y < U; Y++)p = f[Y], I.writeUInt16(p);\n                return {\n                    charMap: r,\n                    subtable: I.data,\n                    maxGlyphID: b + 1\n                };\n        }\n    }, t;\n}(), ue = function(t) {\n    function e() {\n        return e.__super__.constructor.apply(this, arguments);\n    }\n    return oe(e, re), e.prototype.tag = \"cmap\", e.prototype.parse = function(t) {\n        var e, r, n;\n        for(t.pos = this.offset, this.version = t.readUInt16(), n = t.readUInt16(), this.tables = [], this.unicode = null, r = 0; 0 <= n ? r < n : r > n; r = 0 <= n ? ++r : --r)e = new ce(t, this.offset), this.tables.push(e), e.isUnicode && null == this.unicode && (this.unicode = e);\n        return !0;\n    }, e.encode = function(t, e) {\n        var r, n;\n        return null == e && (e = \"macroman\"), r = ce.encode(t, e), (n = new ne).writeUInt16(0), n.writeUInt16(1), r.table = n.data.concat(r.subtable), r;\n    }, e;\n}(), he = function(t) {\n    function e() {\n        return e.__super__.constructor.apply(this, arguments);\n    }\n    return oe(e, re), e.prototype.tag = \"hhea\", e.prototype.parse = function(t) {\n        return t.pos = this.offset, this.version = t.readInt(), this.ascender = t.readShort(), this.decender = t.readShort(), this.lineGap = t.readShort(), this.advanceWidthMax = t.readShort(), this.minLeftSideBearing = t.readShort(), this.minRightSideBearing = t.readShort(), this.xMaxExtent = t.readShort(), this.caretSlopeRise = t.readShort(), this.caretSlopeRun = t.readShort(), this.caretOffset = t.readShort(), t.pos += 8, this.metricDataFormat = t.readShort(), this.numberOfMetrics = t.readUInt16();\n    }, e;\n}(), le = function(t) {\n    function e() {\n        return e.__super__.constructor.apply(this, arguments);\n    }\n    return oe(e, re), e.prototype.tag = \"OS/2\", e.prototype.parse = function(t) {\n        if (t.pos = this.offset, this.version = t.readUInt16(), this.averageCharWidth = t.readShort(), this.weightClass = t.readUInt16(), this.widthClass = t.readUInt16(), this.type = t.readShort(), this.ySubscriptXSize = t.readShort(), this.ySubscriptYSize = t.readShort(), this.ySubscriptXOffset = t.readShort(), this.ySubscriptYOffset = t.readShort(), this.ySuperscriptXSize = t.readShort(), this.ySuperscriptYSize = t.readShort(), this.ySuperscriptXOffset = t.readShort(), this.ySuperscriptYOffset = t.readShort(), this.yStrikeoutSize = t.readShort(), this.yStrikeoutPosition = t.readShort(), this.familyClass = t.readShort(), this.panose = function() {\n            var e, r;\n            for(r = [], e = 0; e < 10; ++e)r.push(t.readByte());\n            return r;\n        }(), this.charRange = function() {\n            var e, r;\n            for(r = [], e = 0; e < 4; ++e)r.push(t.readInt());\n            return r;\n        }(), this.vendorID = t.readString(4), this.selection = t.readShort(), this.firstCharIndex = t.readShort(), this.lastCharIndex = t.readShort(), this.version > 0 && (this.ascent = t.readShort(), this.descent = t.readShort(), this.lineGap = t.readShort(), this.winAscent = t.readShort(), this.winDescent = t.readShort(), this.codePageRange = function() {\n            var e, r;\n            for(r = [], e = 0; e < 2; e = ++e)r.push(t.readInt());\n            return r;\n        }(), this.version > 1)) return this.xHeight = t.readShort(), this.capHeight = t.readShort(), this.defaultChar = t.readShort(), this.breakChar = t.readShort(), this.maxContext = t.readShort();\n    }, e;\n}(), fe = function(t) {\n    function e() {\n        return e.__super__.constructor.apply(this, arguments);\n    }\n    return oe(e, re), e.prototype.tag = \"post\", e.prototype.parse = function(t) {\n        var e, r, n;\n        switch(t.pos = this.offset, this.format = t.readInt(), this.italicAngle = t.readInt(), this.underlinePosition = t.readShort(), this.underlineThickness = t.readShort(), this.isFixedPitch = t.readInt(), this.minMemType42 = t.readInt(), this.maxMemType42 = t.readInt(), this.minMemType1 = t.readInt(), this.maxMemType1 = t.readInt(), this.format){\n            case 65536:\n                break;\n            case 131072:\n                var i;\n                for(r = t.readUInt16(), this.glyphNameIndex = [], i = 0; 0 <= r ? i < r : i > r; i = 0 <= r ? ++i : --i)this.glyphNameIndex.push(t.readUInt16());\n                for(this.names = [], n = []; t.pos < this.offset + this.length;)e = t.readByte(), n.push(this.names.push(t.readString(e)));\n                return n;\n            case 151552:\n                return r = t.readUInt16(), this.offsets = t.read(r);\n            case 196608:\n                break;\n            case 262144:\n                return this.map = (function() {\n                    var e, r, n;\n                    for(n = [], i = e = 0, r = this.file.maxp.numGlyphs; 0 <= r ? e < r : e > r; i = 0 <= r ? ++e : --e)n.push(t.readUInt32());\n                    return n;\n                }).call(this);\n        }\n    }, e;\n}(), de = function(t, e) {\n    this.raw = t, this.length = t.length, this.platformID = e.platformID, this.encodingID = e.encodingID, this.languageID = e.languageID;\n}, pe = function(t) {\n    function e() {\n        return e.__super__.constructor.apply(this, arguments);\n    }\n    return oe(e, re), e.prototype.tag = \"name\", e.prototype.parse = function(t) {\n        var e, r, n, i, a, o, s, c, u, h, l;\n        for(t.pos = this.offset, t.readShort(), e = t.readShort(), o = t.readShort(), r = [], i = 0; 0 <= e ? i < e : i > e; i = 0 <= e ? ++i : --i)r.push({\n            platformID: t.readShort(),\n            encodingID: t.readShort(),\n            languageID: t.readShort(),\n            nameID: t.readShort(),\n            length: t.readShort(),\n            offset: this.offset + o + t.readShort()\n        });\n        for(s = {}, i = u = 0, h = r.length; u < h; i = ++u)n = r[i], t.pos = n.offset, c = t.readString(n.length), a = new de(c, n), null == s[l = n.nameID] && (s[l] = []), s[n.nameID].push(a);\n        this.strings = s, this.copyright = s[0], this.fontFamily = s[1], this.fontSubfamily = s[2], this.uniqueSubfamily = s[3], this.fontName = s[4], this.version = s[5];\n        try {\n            this.postscriptName = s[6][0].raw.replace(/[\\x00-\\x19\\x80-\\xff]/g, \"\");\n        } catch (t) {\n            this.postscriptName = s[4][0].raw.replace(/[\\x00-\\x19\\x80-\\xff]/g, \"\");\n        }\n        return this.trademark = s[7], this.manufacturer = s[8], this.designer = s[9], this.description = s[10], this.vendorUrl = s[11], this.designerUrl = s[12], this.license = s[13], this.licenseUrl = s[14], this.preferredFamily = s[15], this.preferredSubfamily = s[17], this.compatibleFull = s[18], this.sampleText = s[19];\n    }, e;\n}(), ge = function(t) {\n    function e() {\n        return e.__super__.constructor.apply(this, arguments);\n    }\n    return oe(e, re), e.prototype.tag = \"maxp\", e.prototype.parse = function(t) {\n        return t.pos = this.offset, this.version = t.readInt(), this.numGlyphs = t.readUInt16(), this.maxPoints = t.readUInt16(), this.maxContours = t.readUInt16(), this.maxCompositePoints = t.readUInt16(), this.maxComponentContours = t.readUInt16(), this.maxZones = t.readUInt16(), this.maxTwilightPoints = t.readUInt16(), this.maxStorage = t.readUInt16(), this.maxFunctionDefs = t.readUInt16(), this.maxInstructionDefs = t.readUInt16(), this.maxStackElements = t.readUInt16(), this.maxSizeOfInstructions = t.readUInt16(), this.maxComponentElements = t.readUInt16(), this.maxComponentDepth = t.readUInt16();\n    }, e;\n}(), me = function(t) {\n    function e() {\n        return e.__super__.constructor.apply(this, arguments);\n    }\n    return oe(e, re), e.prototype.tag = \"hmtx\", e.prototype.parse = function(t) {\n        var e, r, n, i, a, o, s;\n        for(t.pos = this.offset, this.metrics = [], e = 0, o = this.file.hhea.numberOfMetrics; 0 <= o ? e < o : e > o; e = 0 <= o ? ++e : --e)this.metrics.push({\n            advance: t.readUInt16(),\n            lsb: t.readInt16()\n        });\n        for(n = this.file.maxp.numGlyphs - this.file.hhea.numberOfMetrics, this.leftSideBearings = function() {\n            var r, i;\n            for(i = [], e = r = 0; 0 <= n ? r < n : r > n; e = 0 <= n ? ++r : --r)i.push(t.readInt16());\n            return i;\n        }(), this.widths = (function() {\n            var t, e, r, n;\n            for(n = [], t = 0, e = (r = this.metrics).length; t < e; t++)i = r[t], n.push(i.advance);\n            return n;\n        }).call(this), r = this.widths[this.widths.length - 1], s = [], e = a = 0; 0 <= n ? a < n : a > n; e = 0 <= n ? ++a : --a)s.push(this.widths.push(r));\n        return s;\n    }, e.prototype.forGlyph = function(t) {\n        return t in this.metrics ? this.metrics[t] : {\n            advance: this.metrics[this.metrics.length - 1].advance,\n            lsb: this.leftSideBearings[t - this.metrics.length]\n        };\n    }, e;\n}(), ve = [].slice, be = function(t) {\n    function e() {\n        return e.__super__.constructor.apply(this, arguments);\n    }\n    return oe(e, re), e.prototype.tag = \"glyf\", e.prototype.parse = function() {\n        return this.cache = {};\n    }, e.prototype.glyphFor = function(t) {\n        var e, r, n, i, a, o, s, c, u, h;\n        return t in this.cache ? this.cache[t] : (i = this.file.loca, e = this.file.contents, r = i.indexOf(t), 0 === (n = i.lengthOf(t)) ? this.cache[t] = null : (e.pos = this.offset + r, a = (o = new ne(e.read(n))).readShort(), c = o.readShort(), h = o.readShort(), s = o.readShort(), u = o.readShort(), this.cache[t] = -1 === a ? new we(o, c, h, s, u) : new ye(o, a, c, h, s, u), this.cache[t]));\n    }, e.prototype.encode = function(t, e, r) {\n        var n, i, a, o, s;\n        for(a = [], i = [], o = 0, s = e.length; o < s; o++)n = t[e[o]], i.push(a.length), n && (a = a.concat(n.encode(r)));\n        return i.push(a.length), {\n            table: a,\n            offsets: i\n        };\n    }, e;\n}(), ye = function() {\n    function t(t, e, r, n, i, a) {\n        this.raw = t, this.numberOfContours = e, this.xMin = r, this.yMin = n, this.xMax = i, this.yMax = a, this.compound = !1;\n    }\n    return t.prototype.encode = function() {\n        return this.raw.data;\n    }, t;\n}(), we = function() {\n    function t(t, e, r, n, i) {\n        var a, o;\n        for(this.raw = t, this.xMin = e, this.yMin = r, this.xMax = n, this.yMax = i, this.compound = !0, this.glyphIDs = [], this.glyphOffsets = [], a = this.raw; o = a.readShort(), this.glyphOffsets.push(a.pos), this.glyphIDs.push(a.readUInt16()), 32 & o;)a.pos += 1 & o ? 4 : 2, 128 & o ? a.pos += 8 : 64 & o ? a.pos += 4 : 8 & o && (a.pos += 2);\n    }\n    return t.prototype.encode = function() {\n        var t, e, r;\n        for(e = new ne(ve.call(this.raw.data)), t = 0, r = this.glyphIDs.length; t < r; ++t)e.pos = this.glyphOffsets[t];\n        return e.data;\n    }, t;\n}(), Ne = function(t) {\n    function e() {\n        return e.__super__.constructor.apply(this, arguments);\n    }\n    return oe(e, re), e.prototype.tag = \"loca\", e.prototype.parse = function(t) {\n        var e, r;\n        return t.pos = this.offset, e = this.file.head.indexToLocFormat, this.offsets = 0 === e ? (function() {\n            var e, n;\n            for(n = [], r = 0, e = this.length; r < e; r += 2)n.push(2 * t.readUInt16());\n            return n;\n        }).call(this) : (function() {\n            var e, n;\n            for(n = [], r = 0, e = this.length; r < e; r += 4)n.push(t.readUInt32());\n            return n;\n        }).call(this);\n    }, e.prototype.indexOf = function(t) {\n        return this.offsets[t];\n    }, e.prototype.lengthOf = function(t) {\n        return this.offsets[t + 1] - this.offsets[t];\n    }, e.prototype.encode = function(t, e) {\n        for(var r = new Uint32Array(this.offsets.length), n = 0, i = 0, a = 0; a < r.length; ++a)if (r[a] = n, i < e.length && e[i] == a) {\n            ++i, r[a] = n;\n            var o = this.offsets[a], s = this.offsets[a + 1] - o;\n            s > 0 && (n += s);\n        }\n        for(var c = new Array(4 * r.length), u = 0; u < r.length; ++u)c[4 * u + 3] = 255 & r[u], c[4 * u + 2] = (65280 & r[u]) >> 8, c[4 * u + 1] = (16711680 & r[u]) >> 16, c[4 * u] = (4278190080 & r[u]) >> 24;\n        return c;\n    }, e;\n}(), Le = function() {\n    function t(t) {\n        this.font = t, this.subset = {}, this.unicodes = {}, this.next = 33;\n    }\n    return t.prototype.generateCmap = function() {\n        var t, e, r, n, i;\n        for(e in n = this.font.cmap.tables[0].codeMap, t = {}, i = this.subset)r = i[e], t[e] = n[r];\n        return t;\n    }, t.prototype.glyphsFor = function(t) {\n        var e, r, n, i, a, o, s;\n        for(n = {}, a = 0, o = t.length; a < o; a++)n[i = t[a]] = this.font.glyf.glyphFor(i);\n        for(i in e = [], n)(null != (r = n[i]) ? r.compound : void 0) && e.push.apply(e, r.glyphIDs);\n        if (e.length > 0) for(i in s = this.glyphsFor(e))r = s[i], n[i] = r;\n        return n;\n    }, t.prototype.encode = function(t, e) {\n        var r, n, i, a, o, s, c, u, h, l, f, d, p, g, m;\n        for(n in r = ue.encode(this.generateCmap(), \"unicode\"), a = this.glyphsFor(t), f = {\n            0: 0\n        }, m = r.charMap)f[(s = m[n]).old] = s.new;\n        for(d in l = r.maxGlyphID, a)d in f || (f[d] = l++);\n        return u = function(t) {\n            var e, r;\n            for(e in r = {}, t)r[t[e]] = e;\n            return r;\n        }(f), h = Object.keys(u).sort(function(t, e) {\n            return t - e;\n        }), p = function() {\n            var t, e, r;\n            for(r = [], t = 0, e = h.length; t < e; t++)o = h[t], r.push(u[o]);\n            return r;\n        }(), i = this.font.glyf.encode(a, p, f), c = this.font.loca.encode(i.offsets, p), g = {\n            cmap: this.font.cmap.raw(),\n            glyf: i.table,\n            loca: c,\n            hmtx: this.font.hmtx.raw(),\n            hhea: this.font.hhea.raw(),\n            maxp: this.font.maxp.raw(),\n            post: this.font.post.raw(),\n            name: this.font.name.raw(),\n            head: this.font.head.encode(e)\n        }, this.font.os2.exists && (g[\"OS/2\"] = this.font.os2.raw()), this.font.directory.encode(g);\n    }, t;\n}();\nE.API.PDFObject = function() {\n    var t;\n    function e() {}\n    return t = function(t, e) {\n        return (Array(e + 1).join(\"0\") + t).slice(-e);\n    }, e.convert = function(r) {\n        var n, i, a, o;\n        if (Array.isArray(r)) return \"[\" + (function() {\n            var t, i, a;\n            for(a = [], t = 0, i = r.length; t < i; t++)n = r[t], a.push(e.convert(n));\n            return a;\n        })().join(\" \") + \"]\";\n        if (\"string\" == typeof r) return \"/\" + r;\n        if (null != r ? r.isString : void 0) return \"(\" + r + \")\";\n        if (r instanceof Date) return \"(D:\" + t(r.getUTCFullYear(), 4) + t(r.getUTCMonth(), 2) + t(r.getUTCDate(), 2) + t(r.getUTCHours(), 2) + t(r.getUTCMinutes(), 2) + t(r.getUTCSeconds(), 2) + \"Z)\";\n        if (\"[object Object]\" === ({}).toString.call(r)) {\n            for(i in a = [\n                \"<<\"\n            ], r)o = r[i], a.push(\"/\" + i + \" \" + e.convert(o));\n            return a.push(\">>\"), a.join(\"\\n\");\n        }\n        return \"\" + r;\n    }, e;\n}();\n //# sourceMappingURL=jspdf.es.min.js.map\nvar _c, _c1, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18;\n$RefreshReg$(_c, \"L\");\n$RefreshReg$(_c1, \"A\");\n$RefreshReg$(_c2, \"P\");\n$RefreshReg$(_c3, \"I\");\n$RefreshReg$(_c4, \"F\");\n$RefreshReg$(_c5, \"C\");\n$RefreshReg$(_c6, \"O\");\n$RefreshReg$(_c7, \"B\");\n$RefreshReg$(_c8, \"M\");\n$RefreshReg$(_c9, \"E\");\n$RefreshReg$(_c10, \"Nt\");\n$RefreshReg$(_c11, \"Lt\");\n$RefreshReg$(_c12, \"Ot\");\n$RefreshReg$(_c13, \"Et\");\n$RefreshReg$(_c14, \"Dt\");\n$RefreshReg$(_c15, \"Rt\");\n$RefreshReg$(_c16, \"Tt\");\n$RefreshReg$(_c17, \"Zt\");\n$RefreshReg$(_c18, \"Qt\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/jspdf/dist/jspdf.es.min.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/api/navigation.js":
/*!**************************************************!*\
  !*** ./node_modules/next/dist/api/navigation.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _client_components_navigation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../client/components/navigation */ \"(app-pages-browser)/./node_modules/next/dist/client/components/navigation.js\");\n/* harmony import */ var _client_components_navigation__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_client_components_navigation__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _client_components_navigation__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _client_components_navigation__WEBPACK_IMPORTED_MODULE_0__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n //# sourceMappingURL=navigation.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYXBpL25hdmlnYXRpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWdELENBRWhELHNDQUFzQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2FwaS9uYXZpZ2F0aW9uLmpzPzFkMjgiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4uL2NsaWVudC9jb21wb25lbnRzL25hdmlnYXRpb25cIjtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bmF2aWdhdGlvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/api/navigation.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */ \nif (true) {\n    (function() {\n        \"use strict\";\n        var React = __webpack_require__(/*! next/dist/compiled/react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n        // ATTENTION\n        // When adding new symbols to this file,\n        // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n        // The Symbol used to tag the ReactElement-like types.\n        var REACT_ELEMENT_TYPE = Symbol.for(\"react.element\");\n        var REACT_PORTAL_TYPE = Symbol.for(\"react.portal\");\n        var REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\n        var REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\");\n        var REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\");\n        var REACT_PROVIDER_TYPE = Symbol.for(\"react.provider\");\n        var REACT_CONTEXT_TYPE = Symbol.for(\"react.context\");\n        var REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\");\n        var REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\");\n        var REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\");\n        var REACT_MEMO_TYPE = Symbol.for(\"react.memo\");\n        var REACT_LAZY_TYPE = Symbol.for(\"react.lazy\");\n        var REACT_OFFSCREEN_TYPE = Symbol.for(\"react.offscreen\");\n        var REACT_CACHE_TYPE = Symbol.for(\"react.cache\");\n        var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\n        var FAUX_ITERATOR_SYMBOL = \"@@iterator\";\n        function getIteratorFn(maybeIterable) {\n            if (maybeIterable === null || typeof maybeIterable !== \"object\") {\n                return null;\n            }\n            var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n            if (typeof maybeIterator === \"function\") {\n                return maybeIterator;\n            }\n            return null;\n        }\n        var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n        function error(format) {\n            {\n                {\n                    for(var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++){\n                        args[_key2 - 1] = arguments[_key2];\n                    }\n                    printWarning(\"error\", format, args);\n                }\n            }\n        }\n        function printWarning(level, format, args) {\n            // When changing this logic, you might want to also\n            // update consoleWithStackDev.www.js as well.\n            {\n                var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n                var stack = ReactDebugCurrentFrame.getStackAddendum();\n                if (stack !== \"\") {\n                    format += \"%s\";\n                    args = args.concat([\n                        stack\n                    ]);\n                } // eslint-disable-next-line react-internal/safe-string-coercion\n                var argsWithFormat = args.map(function(item) {\n                    return String(item);\n                }); // Careful: RN currently depends on this prefix\n                argsWithFormat.unshift(\"Warning: \" + format); // We intentionally don't use spread (or .apply) directly because it\n                // breaks IE9: https://github.com/facebook/react/issues/13610\n                // eslint-disable-next-line react-internal/no-production-logging\n                Function.prototype.apply.call(console[level], console, argsWithFormat);\n            }\n        }\n        // -----------------------------------------------------------------------------\n        var enableScopeAPI = false; // Experimental Create Event Handle API.\n        var enableCacheElement = false;\n        var enableTransitionTracing = false; // No known bugs, but needs performance testing\n        var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n        // stuff. Intended to enable React core members to more easily debug scheduling\n        // issues in DEV builds.\n        var enableDebugTracing = false;\n        var REACT_CLIENT_REFERENCE$2 = Symbol.for(\"react.client.reference\");\n        function isValidElementType(type) {\n            if (typeof type === \"string\" || typeof type === \"function\") {\n                return true;\n            } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n            if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) {\n                return true;\n            }\n            if (typeof type === \"object\" && type !== null) {\n                if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n                // types supported by any Flight configuration anywhere since\n                // we don't know which Flight build this will end up being used\n                // with.\n                type.$$typeof === REACT_CLIENT_REFERENCE$2 || type.getModuleId !== undefined) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        function getWrappedName(outerType, innerType, wrapperName) {\n            var displayName = outerType.displayName;\n            if (displayName) {\n                return displayName;\n            }\n            var functionName = innerType.displayName || innerType.name || \"\";\n            return functionName !== \"\" ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n        } // Keep in sync with react-reconciler/getComponentNameFromFiber\n        function getContextName(type) {\n            return type.displayName || \"Context\";\n        }\n        var REACT_CLIENT_REFERENCE$1 = Symbol.for(\"react.client.reference\"); // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n        function getComponentNameFromType(type) {\n            if (type == null) {\n                // Host root, text node or just invalid type.\n                return null;\n            }\n            if (typeof type === \"function\") {\n                if (type.$$typeof === REACT_CLIENT_REFERENCE$1) {\n                    // TODO: Create a convention for naming client references with debug info.\n                    return null;\n                }\n                return type.displayName || type.name || null;\n            }\n            if (typeof type === \"string\") {\n                return type;\n            }\n            switch(type){\n                case REACT_FRAGMENT_TYPE:\n                    return \"Fragment\";\n                case REACT_PORTAL_TYPE:\n                    return \"Portal\";\n                case REACT_PROFILER_TYPE:\n                    return \"Profiler\";\n                case REACT_STRICT_MODE_TYPE:\n                    return \"StrictMode\";\n                case REACT_SUSPENSE_TYPE:\n                    return \"Suspense\";\n                case REACT_SUSPENSE_LIST_TYPE:\n                    return \"SuspenseList\";\n                case REACT_CACHE_TYPE:\n                    {\n                        return \"Cache\";\n                    }\n            }\n            if (typeof type === \"object\") {\n                {\n                    if (typeof type.tag === \"number\") {\n                        error(\"Received an unexpected object in getComponentNameFromType(). \" + \"This is likely a bug in React. Please file an issue.\");\n                    }\n                }\n                switch(type.$$typeof){\n                    case REACT_CONTEXT_TYPE:\n                        var context = type;\n                        return getContextName(context) + \".Consumer\";\n                    case REACT_PROVIDER_TYPE:\n                        var provider = type;\n                        return getContextName(provider._context) + \".Provider\";\n                    case REACT_FORWARD_REF_TYPE:\n                        return getWrappedName(type, type.render, \"ForwardRef\");\n                    case REACT_MEMO_TYPE:\n                        var outerName = type.displayName || null;\n                        if (outerName !== null) {\n                            return outerName;\n                        }\n                        return getComponentNameFromType(type.type) || \"Memo\";\n                    case REACT_LAZY_TYPE:\n                        {\n                            var lazyComponent = type;\n                            var payload = lazyComponent._payload;\n                            var init = lazyComponent._init;\n                            try {\n                                return getComponentNameFromType(init(payload));\n                            } catch (x) {\n                                return null;\n                            }\n                        }\n                }\n            }\n            return null;\n        }\n        var assign = Object.assign;\n        // Helpers to patch console.logs to avoid logging during side-effect free\n        // replaying on render function. This currently only patches the object\n        // lazily which won't cover if the log function was extracted eagerly.\n        // We could also eagerly patch the method.\n        var disabledDepth = 0;\n        var prevLog;\n        var prevInfo;\n        var prevWarn;\n        var prevError;\n        var prevGroup;\n        var prevGroupCollapsed;\n        var prevGroupEnd;\n        function disabledLog() {}\n        disabledLog.__reactDisabledLog = true;\n        function disableLogs() {\n            {\n                if (disabledDepth === 0) {\n                    /* eslint-disable react-internal/no-production-logging */ prevLog = console.log;\n                    prevInfo = console.info;\n                    prevWarn = console.warn;\n                    prevError = console.error;\n                    prevGroup = console.group;\n                    prevGroupCollapsed = console.groupCollapsed;\n                    prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n                    var props = {\n                        configurable: true,\n                        enumerable: true,\n                        value: disabledLog,\n                        writable: true\n                    }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n                    Object.defineProperties(console, {\n                        info: props,\n                        log: props,\n                        warn: props,\n                        error: props,\n                        group: props,\n                        groupCollapsed: props,\n                        groupEnd: props\n                    });\n                /* eslint-enable react-internal/no-production-logging */ }\n                disabledDepth++;\n            }\n        }\n        function reenableLogs() {\n            {\n                disabledDepth--;\n                if (disabledDepth === 0) {\n                    /* eslint-disable react-internal/no-production-logging */ var props = {\n                        configurable: true,\n                        enumerable: true,\n                        writable: true\n                    }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n                    Object.defineProperties(console, {\n                        log: assign({}, props, {\n                            value: prevLog\n                        }),\n                        info: assign({}, props, {\n                            value: prevInfo\n                        }),\n                        warn: assign({}, props, {\n                            value: prevWarn\n                        }),\n                        error: assign({}, props, {\n                            value: prevError\n                        }),\n                        group: assign({}, props, {\n                            value: prevGroup\n                        }),\n                        groupCollapsed: assign({}, props, {\n                            value: prevGroupCollapsed\n                        }),\n                        groupEnd: assign({}, props, {\n                            value: prevGroupEnd\n                        })\n                    });\n                /* eslint-enable react-internal/no-production-logging */ }\n                if (disabledDepth < 0) {\n                    error(\"disabledDepth fell below zero. \" + \"This is a bug in React. Please file an issue.\");\n                }\n            }\n        }\n        var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\n        var prefix;\n        function describeBuiltInComponentFrame(name, source, ownerFn) {\n            {\n                if (prefix === undefined) {\n                    // Extract the VM specific prefix used by each line.\n                    try {\n                        throw Error();\n                    } catch (x) {\n                        var match = x.stack.trim().match(/\\n( *(at )?)/);\n                        prefix = match && match[1] || \"\";\n                    }\n                } // We use the prefix to ensure our stacks line up with native stack frames.\n                return \"\\n\" + prefix + name;\n            }\n        }\n        var reentry = false;\n        var componentFrameCache;\n        {\n            var PossiblyWeakMap = typeof WeakMap === \"function\" ? WeakMap : Map;\n            componentFrameCache = new PossiblyWeakMap();\n        }\n        /**\n * Leverages native browser/VM stack frames to get proper details (e.g.\n * filename, line + col number) for a single component in a component stack. We\n * do this by:\n *   (1) throwing and catching an error in the function - this will be our\n *       control error.\n *   (2) calling the component which will eventually throw an error that we'll\n *       catch - this will be our sample error.\n *   (3) diffing the control and sample error stacks to find the stack frame\n *       which represents our component.\n */ function describeNativeComponentFrame(fn, construct) {\n            // If something asked for a stack inside a fake render, it should get ignored.\n            if (!fn || reentry) {\n                return \"\";\n            }\n            {\n                var frame = componentFrameCache.get(fn);\n                if (frame !== undefined) {\n                    return frame;\n                }\n            }\n            reentry = true;\n            var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe[incompatible-type] It does accept undefined.\n            Error.prepareStackTrace = undefined;\n            var previousDispatcher;\n            {\n                previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n                // for warnings.\n                ReactCurrentDispatcher.current = null;\n                disableLogs();\n            }\n            /**\n   * Finding a common stack frame between sample and control errors can be\n   * tricky given the different types and levels of stack trace truncation from\n   * different JS VMs. So instead we'll attempt to control what that common\n   * frame should be through this object method:\n   * Having both the sample and control errors be in the function under the\n   * `DescribeNativeComponentFrameRoot` property, + setting the `name` and\n   * `displayName` properties of the function ensures that a stack\n   * frame exists that has the method name `DescribeNativeComponentFrameRoot` in\n   * it for both control and sample stacks.\n   */ var RunInRootFrame = {\n                DetermineComponentFrameRoot: function() {\n                    var control;\n                    try {\n                        // This should throw.\n                        if (construct) {\n                            // Something should be setting the props in the constructor.\n                            var Fake = function() {\n                                throw Error();\n                            }; // $FlowFixMe[prop-missing]\n                            Object.defineProperty(Fake.prototype, \"props\", {\n                                set: function() {\n                                    // We use a throwing setter instead of frozen or non-writable props\n                                    // because that won't throw in a non-strict mode function.\n                                    throw Error();\n                                }\n                            });\n                            if (typeof Reflect === \"object\" && Reflect.construct) {\n                                // We construct a different control for this case to include any extra\n                                // frames added by the construct call.\n                                try {\n                                    Reflect.construct(Fake, []);\n                                } catch (x) {\n                                    control = x;\n                                }\n                                Reflect.construct(fn, [], Fake);\n                            } else {\n                                try {\n                                    Fake.call();\n                                } catch (x) {\n                                    control = x;\n                                } // $FlowFixMe[prop-missing] found when upgrading Flow\n                                fn.call(Fake.prototype);\n                            }\n                        } else {\n                            try {\n                                throw Error();\n                            } catch (x) {\n                                control = x;\n                            } // TODO(luna): This will currently only throw if the function component\n                            // tries to access React/ReactDOM/props. We should probably make this throw\n                            // in simple components too\n                            var maybePromise = fn(); // If the function component returns a promise, it's likely an async\n                            // component, which we don't yet support. Attach a noop catch handler to\n                            // silence the error.\n                            // TODO: Implement component stacks for async client components?\n                            if (maybePromise && typeof maybePromise.catch === \"function\") {\n                                maybePromise.catch(function() {});\n                            }\n                        }\n                    } catch (sample) {\n                        // This is inlined manually because closure doesn't do it for us.\n                        if (sample && control && typeof sample.stack === \"string\") {\n                            return [\n                                sample.stack,\n                                control.stack\n                            ];\n                        }\n                    }\n                    return [\n                        null,\n                        null\n                    ];\n                }\n            }; // $FlowFixMe[prop-missing]\n            RunInRootFrame.DetermineComponentFrameRoot.displayName = \"DetermineComponentFrameRoot\";\n            var namePropDescriptor = Object.getOwnPropertyDescriptor(RunInRootFrame.DetermineComponentFrameRoot, \"name\"); // Before ES6, the `name` property was not configurable.\n            if (namePropDescriptor && namePropDescriptor.configurable) {\n                // V8 utilizes a function's `name` property when generating a stack trace.\n                Object.defineProperty(RunInRootFrame.DetermineComponentFrameRoot, // is set to `false`.\n                // $FlowFixMe[cannot-write]\n                \"name\", {\n                    value: \"DetermineComponentFrameRoot\"\n                });\n            }\n            try {\n                var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(), sampleStack = _RunInRootFrame$Deter[0], controlStack = _RunInRootFrame$Deter[1];\n                if (sampleStack && controlStack) {\n                    // This extracts the first frame from the sample that isn't also in the control.\n                    // Skipping one frame that we assume is the frame that calls the two.\n                    var sampleLines = sampleStack.split(\"\\n\");\n                    var controlLines = controlStack.split(\"\\n\");\n                    var s = 0;\n                    var c = 0;\n                    while(s < sampleLines.length && !sampleLines[s].includes(\"DetermineComponentFrameRoot\")){\n                        s++;\n                    }\n                    while(c < controlLines.length && !controlLines[c].includes(\"DetermineComponentFrameRoot\")){\n                        c++;\n                    } // We couldn't find our intentionally injected common root frame, attempt\n                    // to find another common root frame by search from the bottom of the\n                    // control stack...\n                    if (s === sampleLines.length || c === controlLines.length) {\n                        s = sampleLines.length - 1;\n                        c = controlLines.length - 1;\n                        while(s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]){\n                            // We expect at least one stack frame to be shared.\n                            // Typically this will be the root most one. However, stack frames may be\n                            // cut off due to maximum stack limits. In this case, one maybe cut off\n                            // earlier than the other. We assume that the sample is longer or the same\n                            // and there for cut off earlier. So we should find the root most frame in\n                            // the sample somewhere in the control.\n                            c--;\n                        }\n                    }\n                    for(; s >= 1 && c >= 0; s--, c--){\n                        // Next we find the first one that isn't the same which should be the\n                        // frame that called our sample function and the control.\n                        if (sampleLines[s] !== controlLines[c]) {\n                            // In V8, the first line is describing the message but other VMs don't.\n                            // If we're about to return the first line, and the control is also on the same\n                            // line, that's a pretty good indicator that our sample threw at same line as\n                            // the control. I.e. before we entered the sample frame. So we ignore this result.\n                            // This can happen if you passed a class to function component, or non-function.\n                            if (s !== 1 || c !== 1) {\n                                do {\n                                    s--;\n                                    c--; // We may still have similar intermediate frames from the construct call.\n                                    // The next one that isn't the same should be our match though.\n                                    if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                                        // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                                        var _frame = \"\\n\" + sampleLines[s].replace(\" at new \", \" at \"); // If our component frame is labeled \"<anonymous>\"\n                                        // but we have a user-provided \"displayName\"\n                                        // splice it in to make the stack more readable.\n                                        if (fn.displayName && _frame.includes(\"<anonymous>\")) {\n                                            _frame = _frame.replace(\"<anonymous>\", fn.displayName);\n                                        }\n                                        if (true) {\n                                            if (typeof fn === \"function\") {\n                                                componentFrameCache.set(fn, _frame);\n                                            }\n                                        } // Return the line we found.\n                                        return _frame;\n                                    }\n                                }while (s >= 1 && c >= 0);\n                            }\n                            break;\n                        }\n                    }\n                }\n            } finally{\n                reentry = false;\n                {\n                    ReactCurrentDispatcher.current = previousDispatcher;\n                    reenableLogs();\n                }\n                Error.prepareStackTrace = previousPrepareStackTrace;\n            } // Fallback to just using the name if we couldn't make it throw.\n            var name = fn ? fn.displayName || fn.name : \"\";\n            var syntheticFrame = name ? describeBuiltInComponentFrame(name) : \"\";\n            {\n                if (typeof fn === \"function\") {\n                    componentFrameCache.set(fn, syntheticFrame);\n                }\n            }\n            return syntheticFrame;\n        }\n        function describeFunctionComponentFrame(fn, source, ownerFn) {\n            {\n                return describeNativeComponentFrame(fn, false);\n            }\n        }\n        function shouldConstruct(Component) {\n            var prototype = Component.prototype;\n            return !!(prototype && prototype.isReactComponent);\n        }\n        function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n            if (type == null) {\n                return \"\";\n            }\n            if (typeof type === \"function\") {\n                {\n                    return describeNativeComponentFrame(type, shouldConstruct(type));\n                }\n            }\n            if (typeof type === \"string\") {\n                return describeBuiltInComponentFrame(type);\n            }\n            switch(type){\n                case REACT_SUSPENSE_TYPE:\n                    return describeBuiltInComponentFrame(\"Suspense\");\n                case REACT_SUSPENSE_LIST_TYPE:\n                    return describeBuiltInComponentFrame(\"SuspenseList\");\n            }\n            if (typeof type === \"object\") {\n                switch(type.$$typeof){\n                    case REACT_FORWARD_REF_TYPE:\n                        return describeFunctionComponentFrame(type.render);\n                    case REACT_MEMO_TYPE:\n                        // Memo may contain any component type so we recursively resolve it.\n                        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n                    case REACT_LAZY_TYPE:\n                        {\n                            var lazyComponent = type;\n                            var payload = lazyComponent._payload;\n                            var init = lazyComponent._init;\n                            try {\n                                // Lazy may contain any component type so we recursively resolve it.\n                                return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n                            } catch (x) {}\n                        }\n                }\n            }\n            return \"\";\n        }\n        // $FlowFixMe[method-unbinding]\n        var hasOwnProperty = Object.prototype.hasOwnProperty;\n        var loggedTypeFailures = {};\n        var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n        function setCurrentlyValidatingElement$1(element) {\n            {\n                if (element) {\n                    var owner = element._owner;\n                    var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n                    ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n                } else {\n                    ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n                }\n            }\n        }\n        function checkPropTypes(typeSpecs, values, location, componentName, element) {\n            {\n                // $FlowFixMe[incompatible-use] This is okay but Flow doesn't know it.\n                var has = Function.call.bind(hasOwnProperty);\n                for(var typeSpecName in typeSpecs){\n                    if (has(typeSpecs, typeSpecName)) {\n                        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n                        // fail the render phase where it didn't fail before. So we log it.\n                        // After these have been cleaned up, we'll let them throw.\n                        try {\n                            // This is intentionally an invariant that gets caught. It's the same\n                            // behavior as without this statement except with a better message.\n                            if (typeof typeSpecs[typeSpecName] !== \"function\") {\n                                // eslint-disable-next-line react-internal/prod-error-codes\n                                var err = Error((componentName || \"React class\") + \": \" + location + \" type `\" + typeSpecName + \"` is invalid; \" + \"it must be a function, usually from the `prop-types` package, but received `\" + typeof typeSpecs[typeSpecName] + \"`.\" + \"This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.\");\n                                err.name = \"Invariant Violation\";\n                                throw err;\n                            }\n                            error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, \"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\");\n                        } catch (ex) {\n                            error$1 = ex;\n                        }\n                        if (error$1 && !(error$1 instanceof Error)) {\n                            setCurrentlyValidatingElement$1(element);\n                            error(\"%s: type specification of %s\" + \" `%s` is invalid; the type checker \" + \"function must return `null` or an `Error` but returned a %s. \" + \"You may have forgotten to pass an argument to the type checker \" + \"creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and \" + \"shape all require an argument).\", componentName || \"React class\", location, typeSpecName, typeof error$1);\n                            setCurrentlyValidatingElement$1(null);\n                        }\n                        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n                            // Only monitor this failure once because there tends to be a lot of the\n                            // same error.\n                            loggedTypeFailures[error$1.message] = true;\n                            setCurrentlyValidatingElement$1(element);\n                            error(\"Failed %s type: %s\", location, error$1.message);\n                            setCurrentlyValidatingElement$1(null);\n                        }\n                    }\n                }\n            }\n        }\n        var isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n        function isArray(a) {\n            return isArrayImpl(a);\n        }\n        /*\n * The `'' + value` pattern (used in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */ // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n        function typeName(value) {\n            {\n                // toStringTag is needed for namespaced types like Temporal.Instant\n                var hasToStringTag = typeof Symbol === \"function\" && Symbol.toStringTag;\n                var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || \"Object\"; // $FlowFixMe[incompatible-return]\n                return type;\n            }\n        } // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n        function willCoercionThrow(value) {\n            {\n                try {\n                    testStringCoercion(value);\n                    return false;\n                } catch (e) {\n                    return true;\n                }\n            }\n        }\n        function testStringCoercion(value) {\n            // If you ended up here by following an exception call stack, here's what's\n            // happened: you supplied an object or symbol value to React (as a prop, key,\n            // DOM attribute, CSS property, string ref, etc.) and when React tried to\n            // coerce it to a string using `'' + value`, an exception was thrown.\n            //\n            // The most common types that will cause this exception are `Symbol` instances\n            // and Temporal objects like `Temporal.Instant`. But any object that has a\n            // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n            // exception. (Library authors do this to prevent users from using built-in\n            // numeric operators like `+` or comparison operators like `>=` because custom\n            // methods are needed to perform accurate arithmetic or comparison.)\n            //\n            // To fix the problem, coerce this object or symbol value to a string before\n            // passing it to React. The most reliable way is usually `String(value)`.\n            //\n            // To find which value is throwing, check the browser or debugger console.\n            // Before this exception was thrown, there should be `console.error` output\n            // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n            // problem and how that type was used: key, atrribute, input value prop, etc.\n            // In most cases, this console output also shows the component and its\n            // ancestor components where the exception happened.\n            //\n            // eslint-disable-next-line react-internal/safe-string-coercion\n            return \"\" + value;\n        }\n        function checkKeyStringCoercion(value) {\n            {\n                if (willCoercionThrow(value)) {\n                    error(\"The provided key is an unsupported type %s.\" + \" This value must be coerced to a string before using it here.\", typeName(value));\n                    return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n                }\n            }\n        }\n        var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\n        var RESERVED_PROPS = {\n            key: true,\n            ref: true,\n            __self: true,\n            __source: true\n        };\n        var specialPropKeyWarningShown;\n        var specialPropRefWarningShown;\n        var didWarnAboutStringRefs;\n        {\n            didWarnAboutStringRefs = {};\n        }\n        function hasValidRef(config) {\n            {\n                if (hasOwnProperty.call(config, \"ref\")) {\n                    var getter = Object.getOwnPropertyDescriptor(config, \"ref\").get;\n                    if (getter && getter.isReactWarning) {\n                        return false;\n                    }\n                }\n            }\n            return config.ref !== undefined;\n        }\n        function hasValidKey(config) {\n            {\n                if (hasOwnProperty.call(config, \"key\")) {\n                    var getter = Object.getOwnPropertyDescriptor(config, \"key\").get;\n                    if (getter && getter.isReactWarning) {\n                        return false;\n                    }\n                }\n            }\n            return config.key !== undefined;\n        }\n        function warnIfStringRefCannotBeAutoConverted(config, self) {\n            {\n                if (typeof config.ref === \"string\" && ReactCurrentOwner$1.current && self && ReactCurrentOwner$1.current.stateNode !== self) {\n                    var componentName = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n                    if (!didWarnAboutStringRefs[componentName]) {\n                        error('Component \"%s\" contains the string ref \"%s\". ' + \"Support for string refs will be removed in a future major release. \" + \"This case cannot be automatically converted to an arrow function. \" + \"We ask you to manually fix this case by using useRef() or createRef() instead. \" + \"Learn more about using refs safely here: \" + \"https://reactjs.org/link/strict-mode-string-ref\", getComponentNameFromType(ReactCurrentOwner$1.current.type), config.ref);\n                        didWarnAboutStringRefs[componentName] = true;\n                    }\n                }\n            }\n        }\n        function defineKeyPropWarningGetter(props, displayName) {\n            {\n                var warnAboutAccessingKey = function() {\n                    if (!specialPropKeyWarningShown) {\n                        specialPropKeyWarningShown = true;\n                        error(\"%s: `key` is not a prop. Trying to access it will result \" + \"in `undefined` being returned. If you need to access the same \" + \"value within the child component, you should pass it as a different \" + \"prop. (https://reactjs.org/link/special-props)\", displayName);\n                    }\n                };\n                warnAboutAccessingKey.isReactWarning = true;\n                Object.defineProperty(props, \"key\", {\n                    get: warnAboutAccessingKey,\n                    configurable: true\n                });\n            }\n        }\n        function defineRefPropWarningGetter(props, displayName) {\n            {\n                var warnAboutAccessingRef = function() {\n                    if (!specialPropRefWarningShown) {\n                        specialPropRefWarningShown = true;\n                        error(\"%s: `ref` is not a prop. Trying to access it will result \" + \"in `undefined` being returned. If you need to access the same \" + \"value within the child component, you should pass it as a different \" + \"prop. (https://reactjs.org/link/special-props)\", displayName);\n                    }\n                };\n                warnAboutAccessingRef.isReactWarning = true;\n                Object.defineProperty(props, \"ref\", {\n                    get: warnAboutAccessingRef,\n                    configurable: true\n                });\n            }\n        }\n        /**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */ function ReactElement(type, key, ref, self, source, owner, props) {\n            var element = {\n                // This tag allows us to uniquely identify this as a React Element\n                $$typeof: REACT_ELEMENT_TYPE,\n                // Built-in properties that belong on the element\n                type: type,\n                key: key,\n                ref: ref,\n                props: props,\n                // Record the component responsible for creating this element.\n                _owner: owner\n            };\n            {\n                // The validation flag is currently mutative. We put it on\n                // an external backing store so that we can freeze the whole object.\n                // This can be replaced with a WeakMap once they are implemented in\n                // commonly used development environments.\n                element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n                // the validation flag non-enumerable (where possible, which should\n                // include every environment we run tests in), so the test framework\n                // ignores it.\n                Object.defineProperty(element._store, \"validated\", {\n                    configurable: false,\n                    enumerable: false,\n                    writable: true,\n                    value: false\n                }); // self and source are DEV only properties.\n                Object.defineProperty(element, \"_self\", {\n                    configurable: false,\n                    enumerable: false,\n                    writable: false,\n                    value: self\n                }); // Two elements created in two different places should be considered\n                // equal for testing purposes and therefore we hide it from enumeration.\n                Object.defineProperty(element, \"_source\", {\n                    configurable: false,\n                    enumerable: false,\n                    writable: false,\n                    value: source\n                });\n                if (Object.freeze) {\n                    Object.freeze(element.props);\n                    Object.freeze(element);\n                }\n            }\n            return element;\n        }\n        /**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */ function jsxDEV$1(type, config, maybeKey, source, self) {\n            {\n                var propName; // Reserved names are extracted\n                var props = {};\n                var key = null;\n                var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n                // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n                // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n                // but as an intermediary step, we will use jsxDEV for everything except\n                // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n                // key is explicitly declared to be undefined or not.\n                if (maybeKey !== undefined) {\n                    {\n                        checkKeyStringCoercion(maybeKey);\n                    }\n                    key = \"\" + maybeKey;\n                }\n                if (hasValidKey(config)) {\n                    {\n                        checkKeyStringCoercion(config.key);\n                    }\n                    key = \"\" + config.key;\n                }\n                if (hasValidRef(config)) {\n                    ref = config.ref;\n                    warnIfStringRefCannotBeAutoConverted(config, self);\n                } // Remaining properties are added to a new props object\n                for(propName in config){\n                    if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n                        props[propName] = config[propName];\n                    }\n                } // Resolve default props\n                if (type && type.defaultProps) {\n                    var defaultProps = type.defaultProps;\n                    for(propName in defaultProps){\n                        if (props[propName] === undefined) {\n                            props[propName] = defaultProps[propName];\n                        }\n                    }\n                }\n                if (key || ref) {\n                    var displayName = typeof type === \"function\" ? type.displayName || type.name || \"Unknown\" : type;\n                    if (key) {\n                        defineKeyPropWarningGetter(props, displayName);\n                    }\n                    if (ref) {\n                        defineRefPropWarningGetter(props, displayName);\n                    }\n                }\n                return ReactElement(type, key, ref, self, source, ReactCurrentOwner$1.current, props);\n            }\n        }\n        var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\n        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n        var REACT_CLIENT_REFERENCE = Symbol.for(\"react.client.reference\");\n        function setCurrentlyValidatingElement(element) {\n            {\n                if (element) {\n                    var owner = element._owner;\n                    var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n                    ReactDebugCurrentFrame.setExtraStackFrame(stack);\n                } else {\n                    ReactDebugCurrentFrame.setExtraStackFrame(null);\n                }\n            }\n        }\n        var propTypesMisspellWarningShown;\n        {\n            propTypesMisspellWarningShown = false;\n        }\n        /**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */ function isValidElement(object) {\n            {\n                return typeof object === \"object\" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n            }\n        }\n        function getDeclarationErrorAddendum() {\n            {\n                if (ReactCurrentOwner.current) {\n                    var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n                    if (name) {\n                        return \"\\n\\nCheck the render method of `\" + name + \"`.\";\n                    }\n                }\n                return \"\";\n            }\n        }\n        function getSourceInfoErrorAddendum(source) {\n            {\n                if (source !== undefined) {\n                    var fileName = source.fileName.replace(/^.*[\\\\\\/]/, \"\");\n                    var lineNumber = source.lineNumber;\n                    return \"\\n\\nCheck your code at \" + fileName + \":\" + lineNumber + \".\";\n                }\n                return \"\";\n            }\n        }\n        /**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */ var ownerHasKeyUseWarning = {};\n        function getCurrentComponentErrorInfo(parentType) {\n            {\n                var info = getDeclarationErrorAddendum();\n                if (!info) {\n                    var parentName = getComponentNameFromType(parentType);\n                    if (parentName) {\n                        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n                    }\n                }\n                return info;\n            }\n        }\n        /**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */ function validateExplicitKey(element, parentType) {\n            {\n                if (!element._store || element._store.validated || element.key != null) {\n                    return;\n                }\n                element._store.validated = true;\n                var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n                if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n                    return;\n                }\n                ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n                // property, it may be the creator of the child that's responsible for\n                // assigning it a key.\n                var childOwner = \"\";\n                if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n                    // Give the component that originally created this child.\n                    childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n                }\n                setCurrentlyValidatingElement(element);\n                error('Each child in a list should have a unique \"key\" prop.' + \"%s%s See https://reactjs.org/link/warning-keys for more information.\", currentComponentErrorInfo, childOwner);\n                setCurrentlyValidatingElement(null);\n            }\n        }\n        /**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */ function validateChildKeys(node, parentType) {\n            {\n                if (typeof node !== \"object\" || !node) {\n                    return;\n                }\n                if (node.$$typeof === REACT_CLIENT_REFERENCE) ;\n                else if (isArray(node)) {\n                    for(var i = 0; i < node.length; i++){\n                        var child = node[i];\n                        if (isValidElement(child)) {\n                            validateExplicitKey(child, parentType);\n                        }\n                    }\n                } else if (isValidElement(node)) {\n                    // This element was passed in a valid location.\n                    if (node._store) {\n                        node._store.validated = true;\n                    }\n                } else {\n                    var iteratorFn = getIteratorFn(node);\n                    if (typeof iteratorFn === \"function\") {\n                        // Entry iterators used to provide implicit keys,\n                        // but now we print a separate warning for them later.\n                        if (iteratorFn !== node.entries) {\n                            var iterator = iteratorFn.call(node);\n                            var step;\n                            while(!(step = iterator.next()).done){\n                                if (isValidElement(step.value)) {\n                                    validateExplicitKey(step.value, parentType);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        /**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */ function validatePropTypes(element) {\n            {\n                var type = element.type;\n                if (type === null || type === undefined || typeof type === \"string\") {\n                    return;\n                }\n                if (type.$$typeof === REACT_CLIENT_REFERENCE) {\n                    return;\n                }\n                var propTypes;\n                if (typeof type === \"function\") {\n                    propTypes = type.propTypes;\n                } else if (typeof type === \"object\" && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n                // Inner props are checked in the reconciler.\n                type.$$typeof === REACT_MEMO_TYPE)) {\n                    propTypes = type.propTypes;\n                } else {\n                    return;\n                }\n                if (propTypes) {\n                    // Intentionally inside to avoid triggering lazy initializers:\n                    var name = getComponentNameFromType(type);\n                    checkPropTypes(propTypes, element.props, \"prop\", name, element);\n                } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n                    propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n                    var _name = getComponentNameFromType(type);\n                    error(\"Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?\", _name || \"Unknown\");\n                }\n                if (typeof type.getDefaultProps === \"function\" && !type.getDefaultProps.isReactClassApproved) {\n                    error(\"getDefaultProps is only used on classic React.createClass \" + \"definitions. Use a static property named `defaultProps` instead.\");\n                }\n            }\n        }\n        /**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */ function validateFragmentProps(fragment) {\n            {\n                var keys = Object.keys(fragment.props);\n                for(var i = 0; i < keys.length; i++){\n                    var key = keys[i];\n                    if (key !== \"children\" && key !== \"key\") {\n                        setCurrentlyValidatingElement(fragment);\n                        error(\"Invalid prop `%s` supplied to `React.Fragment`. \" + \"React.Fragment can only have `key` and `children` props.\", key);\n                        setCurrentlyValidatingElement(null);\n                        break;\n                    }\n                }\n                if (fragment.ref !== null) {\n                    setCurrentlyValidatingElement(fragment);\n                    error(\"Invalid attribute `ref` supplied to `React.Fragment`.\");\n                    setCurrentlyValidatingElement(null);\n                }\n            }\n        }\n        var didWarnAboutKeySpread = {};\n        function jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n            {\n                var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n                // succeed and there will likely be errors in render.\n                if (!validType) {\n                    var info = \"\";\n                    if (type === undefined || typeof type === \"object\" && type !== null && Object.keys(type).length === 0) {\n                        info += \" You likely forgot to export your component from the file \" + \"it's defined in, or you might have mixed up default and named imports.\";\n                    }\n                    var sourceInfo = getSourceInfoErrorAddendum(source);\n                    if (sourceInfo) {\n                        info += sourceInfo;\n                    } else {\n                        info += getDeclarationErrorAddendum();\n                    }\n                    var typeString;\n                    if (type === null) {\n                        typeString = \"null\";\n                    } else if (isArray(type)) {\n                        typeString = \"array\";\n                    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n                        typeString = \"<\" + (getComponentNameFromType(type.type) || \"Unknown\") + \" />\";\n                        info = \" Did you accidentally export a JSX literal instead of a component?\";\n                    } else {\n                        typeString = typeof type;\n                    }\n                    error(\"React.jsx: type is invalid -- expected a string (for \" + \"built-in components) or a class/function (for composite \" + \"components) but got: %s.%s\", typeString, info);\n                }\n                var element = jsxDEV$1(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n                // TODO: Drop this when these are no longer allowed as the type argument.\n                if (element == null) {\n                    return element;\n                } // Skip key warning if the type isn't valid since our key validation logic\n                // doesn't expect a non-string/function type and can throw confusing errors.\n                // We don't want exception behavior to differ between dev and prod.\n                // (Rendering will throw with a helpful message and as soon as the type is\n                // fixed, the key warnings will appear.)\n                if (validType) {\n                    var children = props.children;\n                    if (children !== undefined) {\n                        if (isStaticChildren) {\n                            if (isArray(children)) {\n                                for(var i = 0; i < children.length; i++){\n                                    validateChildKeys(children[i], type);\n                                }\n                                if (Object.freeze) {\n                                    Object.freeze(children);\n                                }\n                            } else {\n                                error(\"React.jsx: Static children should always be an array. \" + \"You are likely explicitly calling React.jsxs or React.jsxDEV. \" + \"Use the Babel transform instead.\");\n                            }\n                        } else {\n                            validateChildKeys(children, type);\n                        }\n                    }\n                }\n                if (hasOwnProperty.call(props, \"key\")) {\n                    var componentName = getComponentNameFromType(type);\n                    var keys = Object.keys(props).filter(function(k) {\n                        return k !== \"key\";\n                    });\n                    var beforeExample = keys.length > 0 ? \"{key: someKey, \" + keys.join(\": ..., \") + \": ...}\" : \"{key: someKey}\";\n                    if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n                        var afterExample = keys.length > 0 ? \"{\" + keys.join(\": ..., \") + \": ...}\" : \"{}\";\n                        error('A props object containing a \"key\" prop is being spread into JSX:\\n' + \"  let props = %s;\\n\" + \"  <%s {...props} />\\n\" + \"React keys must be passed directly to JSX without using spread:\\n\" + \"  let props = %s;\\n\" + \"  <%s key={someKey} {...props} />\", beforeExample, componentName, afterExample, componentName);\n                        didWarnAboutKeySpread[componentName + beforeExample] = true;\n                    }\n                }\n                if (type === REACT_FRAGMENT_TYPE) {\n                    validateFragmentProps(element);\n                } else {\n                    validatePropTypes(element);\n                }\n                return element;\n            }\n        } // These two functions exist to still get child warnings in dev\n        var jsxDEV = jsxWithValidation;\n        exports.Fragment = REACT_FRAGMENT_TYPE;\n        exports.jsxDEV = jsxDEV;\n    })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/jsx-dev-runtime.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nif (false) {} else {\n    module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUEsSUFBSUEsS0FBeUIsRUFBYyxFQUUxQyxNQUFNO0lBQ0xDLDhMQUF5QjtBQUMzQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3JlYWN0L2pzeC1kZXYtcnVudGltZS5qcz9jYTIwIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1qc3gtZGV2LXJ1bnRpbWUucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwibmFtZXMiOlsicHJvY2VzcyIsIm1vZHVsZSIsImV4cG9ydHMiLCJyZXF1aXJlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/admin/accounts/page.tsx":
/*!*************************************!*\
  !*** ./app/admin/accounts/page.tsx ***!
  \*************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ AdminAccounts; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/navigation */ \"(app-pages-browser)/./node_modules/next/dist/api/navigation.js\");\n/* harmony import */ var jspdf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! jspdf */ \"(app-pages-browser)/./node_modules/jspdf/dist/jspdf.es.min.js\");\n/* harmony import */ var _manager_OutlineButton__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../manager/OutlineButton */ \"(app-pages-browser)/./app/admin/manager/OutlineButton.tsx\");\n/* harmony import */ var _config_fieldsConfig__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../config/fieldsConfig */ \"(app-pages-browser)/./app/config/fieldsConfig.ts\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\nconst fieldLabels = {\n    firstName: \"姓\",\n    lastName: \"名\",\n    firstNameFurigana: \"姓(ふりがな)\",\n    lastNameFurigana: \"名(ふりがな)\",\n    firstNameRomaji: \"姓(ローマ字)\",\n    lastNameRomaji: \"名(ローマ字)\",\n    gender: \"性别\",\n    birth: \"出生年月日\",\n    age: \"年龄\",\n    nationality: \"国籍\",\n    nationalityOther: \"其他国籍\",\n    visa: \"在留资格\",\n    visaOther: \"其他在留资格\",\n    visaDate: \"在留卡期限\",\n    jobs: \"职种\",\n    exp: \"经验\",\n    expYear: \"经验(年)\",\n    expMonth: \"经验(月)\",\n    zip: \"邮编\",\n    address: \"住址\",\n    selectedChome: \"丁目\",\n    phone: \"电话\",\n    healthDate: \"健康检查日\",\n    bpHigh: \"血压(高)\",\n    bpLow: \"血压(低)\",\n    bloodPressure: \"血压\",\n    blood: \"血型\",\n    emgName: \"紧急联系人姓名\",\n    emgFurigana: \"紧急联系人ふりがな\",\n    emgPhone: \"紧急联系人电话\",\n    emgAddress: \"紧急联系人住址\",\n    emgSame: \"紧急联系人同上\",\n    insuranceDate: \"保险到期日\",\n    emgSelectedChome: \"紧急联系人丁目\",\n    relationship: \"关系\",\n    relationshipOther: \"其他关系\",\n    emgZip: \"紧急联系人邮编\",\n    lang: \"语言\",\n    fullName: \"姓名\",\n    fullFurigana: \"ふりがな\",\n    fullRomaji: \"罗马字\"\n};\nconst fieldLabelsJa = {\n    fullName: \"氏名\",\n    fullFurigana: \"ふりがな\",\n    fullRomaji: \"ローマ字\",\n    gender: \"性別\",\n    birth: \"生年月日\",\n    age: \"年齢\",\n    nationality: \"国籍\",\n    visa: \"在留資格\",\n    visaOther: \"在留資格（その他）\",\n    jobs: \"職種\",\n    expYear: \"経験年数\",\n    insuranceDate: \"労災保険満了日\",\n    zip: \"郵便番号\",\n    address: \"住所\",\n    phone: \"電話番号\",\n    healthDate: \"健康診断日\",\n    bloodPressure: \"血圧\",\n    blood: \"血液型\",\n    emgName: \"緊急連絡先氏名\",\n    emgFurigana: \"緊急連絡先ふりがな\",\n    emgPhone: \"緊急連絡先電話番号\",\n    relationship: \"本人との関係\",\n    emgZip: \"緊急連絡先郵便番号\",\n    emgAddress: \"緊急連絡先住所\"\n};\n// 字段顺序数组，自动从 fieldsConfig 生成，保证和 register 页面一致\nconst fieldOrder = _config_fieldsConfig__WEBPACK_IMPORTED_MODULE_5__.fieldsConfig.map((f)=>f.key);\n// 工具函数\nfunction calcAge(birth) {\n    if (!/^[0-9]{8}$/.test(birth)) return \"\";\n    const y = parseInt(birth.slice(0, 4), 10);\n    const m = parseInt(birth.slice(4, 6), 10);\n    const d = parseInt(birth.slice(6, 8), 10);\n    const today = new Date();\n    let age = today.getFullYear() - y;\n    if (today.getMonth() + 1 < m || today.getMonth() + 1 === m && today.getDate() < d) {\n        age--;\n    }\n    return age;\n}\nfunction calcExp(expYear, expMonth, submitDate) {\n    let y = parseInt(expYear) || 0;\n    let m = parseInt(expMonth) || 0;\n    if (!submitDate) return m === 0 ? \"\".concat(y, \"年\") : \"\".concat(y, \"年\").concat(m, \"月\");\n    const submit = new Date(submitDate);\n    const now = new Date();\n    let months = (now.getFullYear() - submit.getFullYear()) * 12 + (now.getMonth() - submit.getMonth());\n    m += months;\n    y += Math.floor(m / 12);\n    m = m % 12;\n    return m === 0 ? \"\".concat(y, \"年\") : \"\".concat(y, \"年\").concat(m, \"月\");\n}\nfunction formatJPDate(val) {\n    if (!/^[0-9]{8}$/.test(val)) return val;\n    return \"\".concat(val.slice(0, 4), \"年\").concat(val.slice(4, 6), \"月\").concat(val.slice(6, 8), \"日\");\n}\nfunction AdminAccounts() {\n    _s();\n    const [accounts, setAccounts] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [selected, setSelected] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [showDetail, setShowDetail] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [showReset, setShowReset] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [resetPwd, setResetPwd] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [resetError, setResetError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [lockStatus, setLockStatus] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({});\n    const [showDeleteConfirm, setShowDeleteConfirm] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [pendingDelete, setPendingDelete] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [rawList, setRawList] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [previewImg, setPreviewImg] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const router = (0,next_navigation__WEBPACK_IMPORTED_MODULE_2__.useRouter)();\n    // 加载账号和锁定状态\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const list = JSON.parse(localStorage.getItem(\"registerList\") || \"[]\");\n        setRawList(list);\n        const result = list.map((item, idx)=>{\n            const account = (item.firstNameRomaji + item.lastNameRomaji).replace(/\\s/g, \"\").toUpperCase();\n            const password = localStorage.getItem(\"userPassword_\" + account) || \"\";\n            return {\n                account,\n                password,\n                name: item.firstName + \" \" + item.lastName,\n                birth: item.birth,\n                nationality: item.nationality,\n                phone: item.phone,\n                code: 1000 + idx,\n                lastName: item.lastName,\n                firstName: item.firstName\n            };\n        });\n        setAccounts(result);\n        // 加载锁定状态\n        const lockObj = {};\n        result.forEach((a)=>{\n            lockObj[a.account] = localStorage.getItem(\"userLocked_\" + a.account) === \"1\";\n        });\n        setLockStatus(lockObj);\n    }, []);\n    // 新增：根据账号查找原始资料\n    const getRawByAccount = (account)=>{\n        return rawList.find((item)=>(item.firstNameRomaji + item.lastNameRomaji).replace(/\\s/g, \"\").toUpperCase() === account);\n    };\n    // 详情弹窗\n    const handleShowDetail = (a)=>{\n        setSelected(a);\n        setShowDetail(true);\n    };\n    // 重置密码弹窗\n    const handleShowReset = (a)=>{\n        setSelected(a);\n        setResetPwd(\"\");\n        setResetError(\"\");\n        setShowReset(true);\n    };\n    // 重置密码逻辑\n    const handleResetPwd = ()=>{\n        if (!resetPwd || !/^[0-9]{6}$/.test(resetPwd)) {\n            setResetError(\"密码必须为6位数字\");\n            return;\n        }\n        if (selected) {\n            localStorage.setItem(\"userPassword_\" + selected.account, resetPwd);\n            setAccounts((accs)=>accs.map((a)=>a.account === selected.account ? {\n                        ...a,\n                        password: resetPwd\n                    } : a));\n            setShowReset(false);\n        }\n    };\n    // 锁定/解锁账号\n    const handleToggleLock = (a)=>{\n        const locked = lockStatus[a.account];\n        if (locked) {\n            localStorage.removeItem(\"userLocked_\" + a.account);\n        } else {\n            localStorage.setItem(\"userLocked_\" + a.account, \"1\");\n        }\n        setLockStatus((s)=>({\n                ...s,\n                [a.account]: !locked\n            }));\n    };\n    // 删除账号\n    const handleDelete = (a)=>{\n        setPendingDelete(a);\n        setShowDeleteConfirm(true);\n    };\n    const confirmDelete = ()=>{\n        if (!pendingDelete) return;\n        const a = pendingDelete;\n        // 删除 registerList\n        const list = JSON.parse(localStorage.getItem(\"registerList\") || \"[]\");\n        const newList = list.filter((item)=>(item.firstNameRomaji + item.lastNameRomaji).replace(/\\s/g, \"\").toUpperCase() !== a.account);\n        localStorage.setItem(\"registerList\", JSON.stringify(newList));\n        // 删除密码和锁定状态\n        localStorage.removeItem(\"userPassword_\" + a.account);\n        localStorage.removeItem(\"userLocked_\" + a.account);\n        setAccounts((accs)=>accs.filter((acc)=>acc.account !== a.account));\n        setLockStatus((s)=>{\n            const copy = {\n                ...s\n            };\n            delete copy[a.account];\n            return copy;\n        });\n        setShowDeleteConfirm(false);\n        setPendingDelete(null);\n    };\n    const cancelDelete = ()=>{\n        setShowDeleteConfirm(false);\n        setPendingDelete(null);\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"min-h-screen flex flex-col items-center justify-center bg-neutral-100 dark:bg-neutral-900 text-neutral-900 dark:text-neutral-100 p-8\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_manager_OutlineButton__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                className: \"fixed top-6 left-6 z-50 px-4 py-2 rounded font-medium transition-all shadow-sm text-lg font-bold\",\n                onClick: ()=>router.back(),\n                children: \"返回\"\n            }, void 0, false, {\n                fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                lineNumber: 248,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"bg-white dark:bg-neutral-800 rounded-lg p-3 inline-block max-h-[90vh] overflow-y-auto shadow\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                        className: \"text-xl font-bold mb-2\",\n                        children: \"员工账号信息\"\n                    }, void 0, false, {\n                        fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                        lineNumber: 255,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"table\", {\n                        className: \"w-full text-sm border\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"thead\", {\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"tr\", {\n                                    className: \"bg-neutral-100 dark:bg-neutral-700\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"th\", {\n                                            className: \"border px-1 py-0.5 text-center\",\n                                            children: \"状态\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                                            lineNumber: 259,\n                                            columnNumber: 15\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"th\", {\n                                            className: \"border px-1 py-0.5 text-center\",\n                                            children: \"编码\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                                            lineNumber: 260,\n                                            columnNumber: 15\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"th\", {\n                                            className: \"border px-1 py-0.5 text-left\",\n                                            children: \"账号\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                                            lineNumber: 261,\n                                            columnNumber: 15\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"th\", {\n                                            className: \"border px-1 py-0.5 text-left\",\n                                            children: \"密码\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                                            lineNumber: 262,\n                                            columnNumber: 15\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"th\", {\n                                            className: \"border px-1 py-0.5 text-center\",\n                                            children: \"姓名\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                                            lineNumber: 263,\n                                            columnNumber: 15\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"th\", {\n                                            className: \"border px-1 py-0.5 text-center\",\n                                            children: \"出生年月日\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                                            lineNumber: 264,\n                                            columnNumber: 15\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"th\", {\n                                            className: \"border px-1 py-0.5 text-center\",\n                                            children: \"国籍\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                                            lineNumber: 265,\n                                            columnNumber: 15\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"th\", {\n                                            className: \"border px-1 py-0.5 text-center\",\n                                            children: \"电话\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                                            lineNumber: 266,\n                                            columnNumber: 15\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"th\", {\n                                            className: \"border px-1 py-0.5 text-center\",\n                                            children: \"操作\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                                            lineNumber: 267,\n                                            columnNumber: 15\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                                    lineNumber: 258,\n                                    columnNumber: 13\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                                lineNumber: 257,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"tbody\", {\n                                children: accounts.map((a, i)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"tr\", {\n                                        className: \"text-center\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                                className: \"border px-1 py-1 text-center align-middle\",\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                    className: lockStatus[a.account] ? \"inline-block w-4 h-4 rounded-full bg-red-500 align-middle\" : \"inline-block w-4 h-4 rounded-full bg-green-500 align-middle\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                                                    lineNumber: 274,\n                                                    columnNumber: 19\n                                                }, this)\n                                            }, void 0, false, {\n                                                fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                                                lineNumber: 273,\n                                                columnNumber: 17\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                                className: \"border px-1 py-1 text-center\",\n                                                children: a.code\n                                            }, void 0, false, {\n                                                fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                                                lineNumber: 280,\n                                                columnNumber: 17\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                                className: \"border px-1 py-1 font-mono text-left\",\n                                                children: a.account\n                                            }, void 0, false, {\n                                                fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                                                lineNumber: 281,\n                                                columnNumber: 17\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                                className: \"border px-1 py-1 font-mono text-left\",\n                                                children: a.password\n                                            }, void 0, false, {\n                                                fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                                                lineNumber: 282,\n                                                columnNumber: 17\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                                className: \"border px-1 py-1 text-center whitespace-nowrap\",\n                                                children: [\n                                                    a.firstName,\n                                                    \" \",\n                                                    a.lastName\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                                                lineNumber: 283,\n                                                columnNumber: 17\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                                className: \"border px-1 py-1 text-center\",\n                                                children: formatJPDate(a.birth)\n                                            }, void 0, false, {\n                                                fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                                                lineNumber: 284,\n                                                columnNumber: 17\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                                className: \"border px-1 py-1 text-center\",\n                                                children: a.nationality\n                                            }, void 0, false, {\n                                                fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                                                lineNumber: 285,\n                                                columnNumber: 17\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                                className: \"border px-1 py-1 text-center\",\n                                                children: a.phone\n                                            }, void 0, false, {\n                                                fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                                                lineNumber: 286,\n                                                columnNumber: 17\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                                className: \"border px-1 py-1 whitespace-nowrap\",\n                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    className: \"flex flex-row flex-nowrap gap-0.5\",\n                                                    children: [\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_manager_OutlineButton__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                                                            className: \"w-[48px] h-8 text-sm flex items-center justify-center rounded font-medium\",\n                                                            onClick: ()=>handleShowDetail(a),\n                                                            children: \"详情\"\n                                                        }, void 0, false, {\n                                                            fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                                                            lineNumber: 289,\n                                                            columnNumber: 21\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_manager_OutlineButton__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                                                            className: \"w-[48px] h-8 text-sm flex items-center justify-center rounded font-medium\",\n                                                            onClick: ()=>handleToggleLock(a),\n                                                            children: lockStatus[a.account] ? \"激活\" : \"停用\"\n                                                        }, void 0, false, {\n                                                            fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                                                            lineNumber: 290,\n                                                            columnNumber: 21\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_manager_OutlineButton__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                                                            className: \"w-[64px] h-8 text-sm flex items-center justify-center rounded font-medium\",\n                                                            onClick: ()=>handleShowReset(a),\n                                                            children: \"重置密码\"\n                                                        }, void 0, false, {\n                                                            fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                                                            lineNumber: 291,\n                                                            columnNumber: 21\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_manager_OutlineButton__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                                                            className: \"w-[48px] h-8 text-sm flex items-center justify-center rounded font-medium\",\n                                                            onClick: ()=>handleDelete(a),\n                                                            children: \"删除\"\n                                                        }, void 0, false, {\n                                                            fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                                                            lineNumber: 292,\n                                                            columnNumber: 21\n                                                        }, this)\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                                                    lineNumber: 288,\n                                                    columnNumber: 19\n                                                }, this)\n                                            }, void 0, false, {\n                                                fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                                                lineNumber: 287,\n                                                columnNumber: 17\n                                            }, this)\n                                        ]\n                                    }, i, true, {\n                                        fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                                        lineNumber: 272,\n                                        columnNumber: 15\n                                    }, this))\n                            }, void 0, false, {\n                                fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                                lineNumber: 270,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                        lineNumber: 256,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                lineNumber: 254,\n                columnNumber: 7\n            }, this),\n            showDetail && selected && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"fixed inset-0 bg-black/40 flex items-center justify-center z-50\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"bg-white dark:bg-neutral-800 rounded-lg p-6 w-full max-w-4xl max-h-[90vh] overflow-y-auto shadow-lg relative\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_manager_OutlineButton__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                            className: \"absolute top-4 right-4 px-4 py-2 rounded font-medium\",\n                            onClick: async ()=>{\n                                const raw = getRawByAccount(selected.account);\n                                if (!raw) return;\n                                const doc = new jspdf__WEBPACK_IMPORTED_MODULE_3__[\"default\"]();\n                                doc.setFont(\"NotoSansJP\");\n                                let y = 10;\n                                doc.setFontSize(16);\n                                doc.text(\"アカウント詳細\", 10, y);\n                                y += 10;\n                                doc.setFontSize(12);\n                                // 使用 fieldsConfig 顺序和日文label导出\n                                _config_fieldsConfig__WEBPACK_IMPORTED_MODULE_5__.fieldsConfig.forEach((field)=>{\n                                    let value = raw[field.key];\n                                    if (field.key === \"fullName\") {\n                                        value = (raw.firstName || \"\") + \" \" + (raw.lastName || \"\");\n                                    } else if (field.key === \"fullFurigana\") {\n                                        value = (raw.firstNameFurigana || \"\") + \" \" + (raw.lastNameFurigana || \"\");\n                                    } else if (field.key === \"fullRomaji\") {\n                                        value = (raw.firstNameRomaji || \"\") + \" \" + (raw.lastNameRomaji || \"\");\n                                    } else if (field.key === \"bloodPressure\") {\n                                        value = \"高/\".concat(raw.bpHigh || \"\", \" 低/\").concat(raw.bpLow || \"\");\n                                    }\n                                    if (typeof value !== \"undefined\" && value !== \"\") {\n                                        doc.text(\"\".concat(fieldLabelsJa[field.key] || field.key, \": \").concat(value), 10, y);\n                                        y += 8;\n                                    }\n                                });\n                                // 照片\n                                let imgY = y + 2;\n                                let imgX = 10;\n                                let imgCount = 0;\n                                Object.entries(raw).forEach((param)=>{\n                                    let [key, value] = param;\n                                    if (typeof value === \"string\" && value.startsWith(\"data:image/\")) {\n                                        try {\n                                            doc.addImage(value, \"JPEG\", imgX, imgY, 40, 40);\n                                            doc.text(key, imgX, imgY + 45);\n                                            imgX += 50;\n                                            imgCount++;\n                                            if (imgCount % 3 === 0) {\n                                                imgX = 10;\n                                                imgY += 55;\n                                            }\n                                        } catch (e) {}\n                                    }\n                                    if (Array.isArray(value)) {\n                                        value.forEach((img, idx)=>{\n                                            if (typeof img === \"string\" && img.startsWith(\"data:image/\")) {\n                                                try {\n                                                    doc.addImage(img, \"JPEG\", imgX, imgY, 40, 40);\n                                                    doc.text(\"\".concat(key, \"_\").concat(idx + 1), imgX, imgY + 45);\n                                                    imgX += 50;\n                                                    imgCount++;\n                                                    if (imgCount % 3 === 0) {\n                                                        imgX = 10;\n                                                        imgY += 55;\n                                                    }\n                                                } catch (e) {}\n                                            }\n                                        });\n                                    }\n                                });\n                                doc.save(\"\".concat(selected.account, \"_detail.pdf\"));\n                            },\n                            children: \"导出PDF\"\n                        }, void 0, false, {\n                            fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                            lineNumber: 305,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"grid grid-cols-2 gap-4\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"space-y-2\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"mb-2\",\n                                            children: [\n                                                \"账号：\",\n                                                selected.account\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                                            lineNumber: 373,\n                                            columnNumber: 17\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"mb-2\",\n                                            children: [\n                                                \"姓名：\",\n                                                selected.name\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                                            lineNumber: 374,\n                                            columnNumber: 17\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"mb-2\",\n                                            children: [\n                                                \"出生年月日：\",\n                                                formatJPDate(selected.birth)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                                            lineNumber: 375,\n                                            columnNumber: 17\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"mb-2\",\n                                            children: [\n                                                \"国籍：\",\n                                                selected.nationality\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                                            lineNumber: 376,\n                                            columnNumber: 17\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"mb-2\",\n                                            children: [\n                                                \"电话：\",\n                                                selected.phone\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                                            lineNumber: 377,\n                                            columnNumber: 17\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"mb-2\",\n                                            children: [\n                                                \"当前密码：\",\n                                                selected.password\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                                            lineNumber: 378,\n                                            columnNumber: 17\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"mb-2\",\n                                            children: [\n                                                \"账号状态：\",\n                                                lockStatus[selected.account] ? \"已锁定\" : \"正常\"\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                                            lineNumber: 379,\n                                            columnNumber: 17\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                                    lineNumber: 372,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"border-l pl-4 overflow-y-auto max-h-[60vh] flex flex-col gap-2 pr-2\",\n                                    children: fieldOrder.map((key)=>{\n                                        const rawData = getRawByAccount(selected.account);\n                                        let value = rawData[key];\n                                        if (key === \"fullName\") {\n                                            value = (rawData.firstName || \"\") + \" \" + (rawData.lastName || \"\");\n                                        } else if (key === \"fullFurigana\") {\n                                            value = (rawData.firstNameFurigana || \"\") + \" \" + (rawData.lastNameFurigana || \"\");\n                                        } else if (key === \"fullRomaji\") {\n                                            value = (rawData.firstNameRomaji || \"\") + \" \" + (rawData.lastNameRomaji || \"\");\n                                        } else if (key === \"bloodPressure\") {\n                                            value = \"高/\".concat(rawData.bpHigh || \"\", \" 低/\").concat(rawData.bpLow || \"\");\n                                        }\n                                        // 年龄\n                                        if (key === \"age\") {\n                                            value = calcAge(rawData.birth) + \"岁\";\n                                        }\n                                        // 经验年数\n                                        if (key === \"expYear\") {\n                                            value = calcExp(rawData.expYear, rawData.expMonth, rawData.submitDate || rawData.createdAt || \"\");\n                                        }\n                                        // 日期格式化\n                                        if ([\n                                            \"birth\",\n                                            \"insuranceDate\",\n                                            \"healthDate\"\n                                        ].includes(key)) {\n                                            value = formatJPDate(rawData[key]);\n                                        }\n                                        // 住址拼接\n                                        if (key === \"address\") {\n                                            value = (rawData.autoAddress || \"\") + (rawData.address || \"\");\n                                        }\n                                        if (key === \"emgAddress\") {\n                                            value = (rawData.emgAutoAddress || \"\") + (rawData.emgAddress || \"\");\n                                        }\n                                        // 跳过图片和照片\n                                        if (key === \"photos\" && Array.isArray(value)) return null;\n                                        if (typeof value === \"string\" && value.startsWith(\"data:image/\")) return null;\n                                        if (typeof value !== \"undefined\" && value !== \"\") {\n                                            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                children: [\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                        className: \"font-medium\",\n                                                        children: [\n                                                            fieldLabels[key] || key,\n                                                            \"：\"\n                                                        ]\n                                                    }, void 0, true, {\n                                                        fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                                                        lineNumber: 419,\n                                                        columnNumber: 25\n                                                    }, this),\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                        className: \"ml-1\",\n                                                        children: String(value)\n                                                    }, void 0, false, {\n                                                        fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                                                        lineNumber: 420,\n                                                        columnNumber: 25\n                                                    }, this)\n                                                ]\n                                            }, key, true, {\n                                                fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                                                lineNumber: 418,\n                                                columnNumber: 23\n                                            }, this);\n                                        }\n                                        return null;\n                                    })\n                                }, void 0, false, {\n                                    fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                                    lineNumber: 381,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                            lineNumber: 371,\n                            columnNumber: 13\n                        }, this),\n                        previewImg && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"fixed inset-0 bg-black/70 flex items-center justify-center z-50\",\n                            onClick: ()=>setPreviewImg(null),\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                                src: previewImg,\n                                alt: \"预览\",\n                                className: \"max-w-[90vw] max-h-[90vh] rounded-lg shadow-2xl border-4 border-white\"\n                            }, void 0, false, {\n                                fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                                lineNumber: 431,\n                                columnNumber: 17\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                            lineNumber: 430,\n                            columnNumber: 15\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"mt-6 flex justify-end gap-2\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                                    href: \"/admin/accounts/upload\",\n                                    target: \"_blank\",\n                                    rel: \"noopener noreferrer\",\n                                    className: \"px-4 py-2 rounded font-medium text-blue-600 hover:underline border border-blue-200 bg-blue-50 mr-2\",\n                                    children: \"证件查看\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                                    lineNumber: 435,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_manager_OutlineButton__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                                    className: \"px-4 py-2 rounded font-medium mr-2\",\n                                    onClick: async ()=>{\n                                        const raw = getRawByAccount(selected.account);\n                                        if (!raw) return;\n                                        const doc = new jspdf__WEBPACK_IMPORTED_MODULE_3__[\"default\"]();\n                                        doc.setFont(\"NotoSansJP\");\n                                        let y = 10;\n                                        doc.setFontSize(16);\n                                        doc.text(\"アカウント詳細\", 10, y);\n                                        y += 10;\n                                        doc.setFontSize(12);\n                                        _config_fieldsConfig__WEBPACK_IMPORTED_MODULE_5__.fieldsConfig.forEach((field)=>{\n                                            let value = raw[field.key];\n                                            if (field.key === \"fullName\") {\n                                                value = (raw.firstName || \"\") + \" \" + (raw.lastName || \"\");\n                                            } else if (field.key === \"fullFurigana\") {\n                                                value = (raw.firstNameFurigana || \"\") + \" \" + (raw.lastNameFurigana || \"\");\n                                            } else if (field.key === \"fullRomaji\") {\n                                                value = (raw.firstNameRomaji || \"\") + \" \" + (raw.lastNameRomaji || \"\");\n                                            } else if (field.key === \"bloodPressure\") {\n                                                value = \"高/\".concat(raw.bpHigh || \"\", \" 低/\").concat(raw.bpLow || \"\");\n                                            }\n                                            if (typeof value !== \"undefined\" && value !== \"\") {\n                                                doc.text(\"\".concat(fieldLabelsJa[field.key] || field.key, \": \").concat(value), 10, y);\n                                                y += 8;\n                                            }\n                                        });\n                                        let imgY = y + 2;\n                                        let imgX = 10;\n                                        let imgCount = 0;\n                                        Object.entries(raw).forEach((param)=>{\n                                            let [key, value] = param;\n                                            if (typeof value === \"string\" && value.startsWith(\"data:image/\")) {\n                                                try {\n                                                    doc.addImage(value, \"JPEG\", imgX, imgY, 40, 40);\n                                                    doc.text(key, imgX, imgY + 45);\n                                                    imgX += 50;\n                                                    imgCount++;\n                                                    if (imgCount % 3 === 0) {\n                                                        imgX = 10;\n                                                        imgY += 55;\n                                                    }\n                                                } catch (e) {}\n                                            }\n                                            if (Array.isArray(value)) {\n                                                value.forEach((img, idx)=>{\n                                                    if (typeof img === \"string\" && img.startsWith(\"data:image/\")) {\n                                                        try {\n                                                            doc.addImage(img, \"JPEG\", imgX, imgY, 40, 40);\n                                                            doc.text(\"\".concat(key, \"_\").concat(idx + 1), imgX, imgY + 45);\n                                                            imgX += 50;\n                                                            imgCount++;\n                                                            if (imgCount % 3 === 0) {\n                                                                imgX = 10;\n                                                                imgY += 55;\n                                                            }\n                                                        } catch (e) {}\n                                                    }\n                                                });\n                                            }\n                                        });\n                                        doc.save(\"\".concat(selected.account, \"_detail.pdf\"));\n                                    },\n                                    children: \"导出PDF\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                                    lineNumber: 441,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_manager_OutlineButton__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                                    className: \"px-4 py-2 rounded font-medium\",\n                                    onClick: ()=>setShowDetail(false),\n                                    children: \"关闭\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                                    lineNumber: 505,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                            lineNumber: 434,\n                            columnNumber: 13\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                    lineNumber: 303,\n                    columnNumber: 11\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                lineNumber: 302,\n                columnNumber: 9\n            }, this),\n            showReset && selected && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"fixed inset-0 bg-black/40 flex items-center justify-center z-50\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"bg-white dark:bg-neutral-800 rounded-lg p-6 w-full max-w-md shadow-lg\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                            className: \"text-lg font-bold mb-4\",\n                            children: \"重置密码\"\n                        }, void 0, false, {\n                            fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                            lineNumber: 517,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"mb-2\",\n                            children: [\n                                \"账号：\",\n                                selected.account\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                            lineNumber: 518,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                            className: \"border rounded px-3 py-2 w-full mb-2\",\n                            placeholder: \"请输入新密码（6位数字）\",\n                            value: resetPwd,\n                            maxLength: 6,\n                            onChange: (e)=>setResetPwd(e.target.value.replace(/[^0-9]/g, \"\"))\n                        }, void 0, false, {\n                            fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                            lineNumber: 519,\n                            columnNumber: 13\n                        }, this),\n                        resetError && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"text-red-500 text-sm mb-2\",\n                            children: resetError\n                        }, void 0, false, {\n                            fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                            lineNumber: 526,\n                            columnNumber: 28\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"mt-6 flex justify-end gap-2\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_manager_OutlineButton__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                                    className: \"px-4 py-2 rounded font-medium\",\n                                    onClick: ()=>setShowReset(false),\n                                    children: \"取消\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                                    lineNumber: 528,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_manager_OutlineButton__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                                    className: \"px-4 py-2 rounded font-medium\",\n                                    onClick: handleResetPwd,\n                                    children: \"确定重置\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                                    lineNumber: 532,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                            lineNumber: 527,\n                            columnNumber: 13\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                    lineNumber: 516,\n                    columnNumber: 11\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                lineNumber: 515,\n                columnNumber: 9\n            }, this),\n            showDeleteConfirm && pendingDelete && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"fixed inset-0 bg-black/40 flex items-center justify-center z-50\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"bg-white dark:bg-neutral-800 rounded-lg p-6 w-full max-w-md shadow-lg\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                            className: \"text-lg font-bold mb-4 text-red-600\",\n                            children: \"警告\"\n                        }, void 0, false, {\n                            fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                            lineNumber: 544,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"mb-4\",\n                            children: [\n                                \"确定要删除账号 \",\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    className: \"font-mono text-lg text-red-600\",\n                                    children: pendingDelete.account\n                                }, void 0, false, {\n                                    fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                                    lineNumber: 545,\n                                    columnNumber: 43\n                                }, this),\n                                \" 吗？此操作不可恢复！\"\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                            lineNumber: 545,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"flex justify-end gap-2\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_manager_OutlineButton__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                                    className: \"px-4 py-2 rounded font-medium\",\n                                    onClick: cancelDelete,\n                                    children: \"取消\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                                    lineNumber: 547,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_manager_OutlineButton__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                                    className: \"px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700\",\n                                    onClick: confirmDelete,\n                                    children: \"确认删除\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                                    lineNumber: 551,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                            lineNumber: 546,\n                            columnNumber: 13\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                    lineNumber: 543,\n                    columnNumber: 11\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n                lineNumber: 542,\n                columnNumber: 9\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/accounts/page.tsx\",\n        lineNumber: 247,\n        columnNumber: 5\n    }, this);\n}\n_s(AdminAccounts, \"lHY0qLYmcbAFb1BV4KNaEfn4Vqk=\", false, function() {\n    return [\n        next_navigation__WEBPACK_IMPORTED_MODULE_2__.useRouter\n    ];\n});\n_c = AdminAccounts;\nvar _c;\n$RefreshReg$(_c, \"AdminAccounts\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/admin/accounts/page.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/admin/manager/OutlineButton.tsx":
/*!*********************************************!*\
  !*** ./app/admin/manager/OutlineButton.tsx ***!
  \*********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \n\nconst OutlineButton = (param)=>{\n    let { children, className = \"\", ...props } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n        className: \"px-6 py-2 rounded border font-medium transition-colors\\n        border-black text-black hover:bg-black/5\\n        dark:border-white dark:text-white dark:hover:bg-white/10\\n        focus:outline-none focus:ring-2 focus:ring-black/30 dark:focus:ring-white/30\\n        \".concat(className),\n        ...props,\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/wx/Desktop/web/newbuild/app/admin/manager/OutlineButton.tsx\",\n        lineNumber: 11,\n        columnNumber: 5\n    }, undefined);\n};\n_c = OutlineButton;\n/* harmony default export */ __webpack_exports__[\"default\"] = (OutlineButton);\nvar _c;\n$RefreshReg$(_c, \"OutlineButton\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9hZG1pbi9tYW5hZ2VyL091dGxpbmVCdXR0b24udHN4IiwibWFwcGluZ3MiOiI7Ozs7O0FBQzBCO0FBTzFCLE1BQU1DLGdCQUE4QztRQUFDLEVBQUVDLFFBQVEsRUFBRUMsWUFBWSxFQUFFLEVBQUUsR0FBR0MsT0FBTztJQUN6RixxQkFDRSw4REFBQ0M7UUFDQ0YsV0FBVyw2UUFJRyxPQUFWQTtRQUNILEdBQUdDLEtBQUs7a0JBRVJGOzs7Ozs7QUFHUDtLQWJNRDtBQWVOLCtEQUFlQSxhQUFhQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2FwcC9hZG1pbi9tYW5hZ2VyL091dGxpbmVCdXR0b24udHN4P2FlM2YiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCI7XG5pbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5cbmludGVyZmFjZSBPdXRsaW5lQnV0dG9uUHJvcHMgZXh0ZW5kcyBSZWFjdC5CdXR0b25IVE1MQXR0cmlidXRlczxIVE1MQnV0dG9uRWxlbWVudD4ge1xuICBjaGlsZHJlbjogUmVhY3QuUmVhY3ROb2RlO1xuICBjbGFzc05hbWU/OiBzdHJpbmc7XG59XG5cbmNvbnN0IE91dGxpbmVCdXR0b246IFJlYWN0LkZDPE91dGxpbmVCdXR0b25Qcm9wcz4gPSAoeyBjaGlsZHJlbiwgY2xhc3NOYW1lID0gXCJcIiwgLi4ucHJvcHMgfSkgPT4ge1xuICByZXR1cm4gKFxuICAgIDxidXR0b25cbiAgICAgIGNsYXNzTmFtZT17YHB4LTYgcHktMiByb3VuZGVkIGJvcmRlciBmb250LW1lZGl1bSB0cmFuc2l0aW9uLWNvbG9yc1xuICAgICAgICBib3JkZXItYmxhY2sgdGV4dC1ibGFjayBob3ZlcjpiZy1ibGFjay81XG4gICAgICAgIGRhcms6Ym9yZGVyLXdoaXRlIGRhcms6dGV4dC13aGl0ZSBkYXJrOmhvdmVyOmJnLXdoaXRlLzEwXG4gICAgICAgIGZvY3VzOm91dGxpbmUtbm9uZSBmb2N1czpyaW5nLTIgZm9jdXM6cmluZy1ibGFjay8zMCBkYXJrOmZvY3VzOnJpbmctd2hpdGUvMzBcbiAgICAgICAgJHtjbGFzc05hbWV9YH1cbiAgICAgIHsuLi5wcm9wc31cbiAgICA+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9idXR0b24+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBPdXRsaW5lQnV0dG9uOyAiXSwibmFtZXMiOlsiUmVhY3QiLCJPdXRsaW5lQnV0dG9uIiwiY2hpbGRyZW4iLCJjbGFzc05hbWUiLCJwcm9wcyIsImJ1dHRvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/admin/manager/OutlineButton.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/config/fieldsConfig.ts":
/*!************************************!*\
  !*** ./app/config/fieldsConfig.ts ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fieldsConfig: function() { return /* binding */ fieldsConfig; }\n/* harmony export */ });\nconst fieldsConfig = [\n    {\n        key: \"fullName\",\n        label: \"姓名\",\n        merge: [\n            \"firstName\",\n            \"lastName\"\n        ],\n        join: \" \"\n    },\n    {\n        key: \"fullFurigana\",\n        label: \"ふりがな\",\n        merge: [\n            \"firstNameFurigana\",\n            \"lastNameFurigana\"\n        ],\n        join: \" \"\n    },\n    {\n        key: \"fullRomaji\",\n        label: \"罗马字\",\n        merge: [\n            \"firstNameRomaji\",\n            \"lastNameRomaji\"\n        ],\n        join: \" \"\n    },\n    {\n        key: \"gender\",\n        label: \"性别\"\n    },\n    {\n        key: \"birth\",\n        label: \"出生年月日\"\n    },\n    {\n        key: \"age\",\n        label: \"年龄\"\n    },\n    {\n        key: \"nationality\",\n        label: \"国籍\"\n    },\n    {\n        key: \"visa\",\n        label: \"在留资格\"\n    },\n    {\n        key: \"visaOther\",\n        label: \"在留资格\"\n    },\n    {\n        key: \"jobs\",\n        label: \"工种\"\n    },\n    {\n        key: \"expYear\",\n        label: \"经验年数\"\n    },\n    {\n        key: \"insuranceDate\",\n        label: \"劳灾保险到期\"\n    },\n    {\n        key: \"zip\",\n        label: \"邮编\"\n    },\n    {\n        key: \"address\",\n        label: \"住址\"\n    },\n    {\n        key: \"phone\",\n        label: \"电话\"\n    },\n    {\n        key: \"healthDate\",\n        label: \"健康诊断日\"\n    },\n    {\n        key: \"bloodPressure\",\n        label: \"血压\",\n        merge: [\n            \"bpHigh\",\n            \"bpLow\"\n        ],\n        format: (high, low)=>\"高/\".concat(high, \" 低/\").concat(low)\n    },\n    {\n        key: \"blood\",\n        label: \"血型\"\n    },\n    {\n        key: \"emgName\",\n        label: \"紧急联系人姓名\"\n    },\n    {\n        key: \"emgFurigana\",\n        label: \"紧急联系人姓名\"\n    },\n    {\n        key: \"emgPhone\",\n        label: \"紧急联系人电话\"\n    },\n    {\n        key: \"relationship\",\n        label: \"与本人关系\"\n    },\n    {\n        key: \"emgZip\",\n        label: \"紧急联系人邮编\"\n    },\n    {\n        key: \"emgAddress\",\n        label: \"紧急联系人住址\"\n    }\n];\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9jb25maWcvZmllbGRzQ29uZmlnLnRzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxNQUFNQSxlQUFlO0lBQzFCO1FBQUVDLEtBQUs7UUFBWUMsT0FBTztRQUFNQyxPQUFPO1lBQUM7WUFBYTtTQUFXO1FBQUVDLE1BQU07SUFBSTtJQUM1RTtRQUFFSCxLQUFLO1FBQWdCQyxPQUFPO1FBQVFDLE9BQU87WUFBQztZQUFxQjtTQUFtQjtRQUFFQyxNQUFNO0lBQUk7SUFDbEc7UUFBRUgsS0FBSztRQUFjQyxPQUFPO1FBQU9DLE9BQU87WUFBQztZQUFtQjtTQUFpQjtRQUFFQyxNQUFNO0lBQUk7SUFDM0Y7UUFBRUgsS0FBSztRQUFVQyxPQUFPO0lBQUs7SUFDN0I7UUFBRUQsS0FBSztRQUFTQyxPQUFPO0lBQVE7SUFDL0I7UUFBRUQsS0FBSztRQUFPQyxPQUFPO0lBQUs7SUFDMUI7UUFBRUQsS0FBSztRQUFlQyxPQUFPO0lBQUs7SUFDbEM7UUFBRUQsS0FBSztRQUFRQyxPQUFPO0lBQU87SUFDN0I7UUFBRUQsS0FBSztRQUFhQyxPQUFPO0lBQU87SUFDbEM7UUFBRUQsS0FBSztRQUFRQyxPQUFPO0lBQUs7SUFDM0I7UUFBRUQsS0FBSztRQUFXQyxPQUFPO0lBQU87SUFDaEM7UUFBRUQsS0FBSztRQUFpQkMsT0FBTztJQUFTO0lBQ3hDO1FBQUVELEtBQUs7UUFBT0MsT0FBTztJQUFLO0lBQzFCO1FBQUVELEtBQUs7UUFBV0MsT0FBTztJQUFLO0lBQzlCO1FBQUVELEtBQUs7UUFBU0MsT0FBTztJQUFLO0lBQzVCO1FBQUVELEtBQUs7UUFBY0MsT0FBTztJQUFRO0lBQ3BDO1FBQUVELEtBQUs7UUFBaUJDLE9BQU87UUFBTUMsT0FBTztZQUFDO1lBQVU7U0FBUTtRQUFFRSxRQUFRLENBQUNDLE1BQXVCQyxNQUF5QixLQUFlQSxPQUFWRCxNQUFLLE9BQVMsT0FBSkM7SUFBTTtJQUMvSTtRQUFFTixLQUFLO1FBQVNDLE9BQU87SUFBSztJQUM1QjtRQUFFRCxLQUFLO1FBQVdDLE9BQU87SUFBVTtJQUNuQztRQUFFRCxLQUFLO1FBQWVDLE9BQU87SUFBVTtJQUN2QztRQUFFRCxLQUFLO1FBQVlDLE9BQU87SUFBVTtJQUNwQztRQUFFRCxLQUFLO1FBQWdCQyxPQUFPO0lBQVE7SUFDdEM7UUFBRUQsS0FBSztRQUFVQyxPQUFPO0lBQVU7SUFDbEM7UUFBRUQsS0FBSztRQUFjQyxPQUFPO0lBQVU7Q0FDdkMsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9hcHAvY29uZmlnL2ZpZWxkc0NvbmZpZy50cz80NjY3Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBmaWVsZHNDb25maWcgPSBbXG4gIHsga2V5OiAnZnVsbE5hbWUnLCBsYWJlbDogJ+Wnk+WQjScsIG1lcmdlOiBbJ2ZpcnN0TmFtZScsICdsYXN0TmFtZSddLCBqb2luOiAnICcgfSxcbiAgeyBrZXk6ICdmdWxsRnVyaWdhbmEnLCBsYWJlbDogJ+OBteOCiuOBjOOBqicsIG1lcmdlOiBbJ2ZpcnN0TmFtZUZ1cmlnYW5hJywgJ2xhc3ROYW1lRnVyaWdhbmEnXSwgam9pbjogJyAnIH0sXG4gIHsga2V5OiAnZnVsbFJvbWFqaScsIGxhYmVsOiAn572X6ams5a2XJywgbWVyZ2U6IFsnZmlyc3ROYW1lUm9tYWppJywgJ2xhc3ROYW1lUm9tYWppJ10sIGpvaW46ICcgJyB9LFxuICB7IGtleTogJ2dlbmRlcicsIGxhYmVsOiAn5oCn5YirJyB9LFxuICB7IGtleTogJ2JpcnRoJywgbGFiZWw6ICflh7rnlJ/lubTmnIjml6UnIH0sXG4gIHsga2V5OiAnYWdlJywgbGFiZWw6ICflubTpvoQnIH0sXG4gIHsga2V5OiAnbmF0aW9uYWxpdHknLCBsYWJlbDogJ+WbveexjScgfSxcbiAgeyBrZXk6ICd2aXNhJywgbGFiZWw6ICflnKjnlZnotYTmoLwnIH0sXG4gIHsga2V5OiAndmlzYU90aGVyJywgbGFiZWw6ICflnKjnlZnotYTmoLwnIH0sXG4gIHsga2V5OiAnam9icycsIGxhYmVsOiAn5bel56eNJyB9LFxuICB7IGtleTogJ2V4cFllYXInLCBsYWJlbDogJ+e7j+mqjOW5tOaVsCcgfSxcbiAgeyBrZXk6ICdpbnN1cmFuY2VEYXRlJywgbGFiZWw6ICflirPngb7kv53pmanliLDmnJ8nIH0sXG4gIHsga2V5OiAnemlwJywgbGFiZWw6ICfpgq7nvJYnIH0sXG4gIHsga2V5OiAnYWRkcmVzcycsIGxhYmVsOiAn5L2P5Z2AJyB9LFxuICB7IGtleTogJ3Bob25lJywgbGFiZWw6ICfnlLXor50nIH0sXG4gIHsga2V5OiAnaGVhbHRoRGF0ZScsIGxhYmVsOiAn5YGl5bq36K+K5pat5pelJyB9LFxuICB7IGtleTogJ2Jsb29kUHJlc3N1cmUnLCBsYWJlbDogJ+ihgOWOiycsIG1lcmdlOiBbJ2JwSGlnaCcsICdicExvdyddLCBmb3JtYXQ6IChoaWdoOiBzdHJpbmcgfCBudW1iZXIsIGxvdzogc3RyaW5nIHwgbnVtYmVyKSA9PiBg6auYLyR7aGlnaH0g5L2OLyR7bG93fWAgfSxcbiAgeyBrZXk6ICdibG9vZCcsIGxhYmVsOiAn6KGA5Z6LJyB9LFxuICB7IGtleTogJ2VtZ05hbWUnLCBsYWJlbDogJ+e0p+aApeiBlOezu+S6uuWnk+WQjScgfSxcbiAgeyBrZXk6ICdlbWdGdXJpZ2FuYScsIGxhYmVsOiAn57Sn5oCl6IGU57O75Lq65aeT5ZCNJyB9LFxuICB7IGtleTogJ2VtZ1Bob25lJywgbGFiZWw6ICfntKfmgKXogZTns7vkurrnlLXor50nIH0sXG4gIHsga2V5OiAncmVsYXRpb25zaGlwJywgbGFiZWw6ICfkuI7mnKzkurrlhbPns7snIH0sXG4gIHsga2V5OiAnZW1nWmlwJywgbGFiZWw6ICfntKfmgKXogZTns7vkurrpgq7nvJYnIH0sXG4gIHsga2V5OiAnZW1nQWRkcmVzcycsIGxhYmVsOiAn57Sn5oCl6IGU57O75Lq65L2P5Z2AJyB9LFxuXTsgIl0sIm5hbWVzIjpbImZpZWxkc0NvbmZpZyIsImtleSIsImxhYmVsIiwibWVyZ2UiLCJqb2luIiwiZm9ybWF0IiwiaGlnaCIsImxvdyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/config/fieldsConfig.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@babel/runtime/helpers/esm/typeof.js":
/*!***********************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/typeof.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ _typeof; }\n/* harmony export */ });\nfunction _typeof(o) {\n    \"@babel/helpers - typeof\";\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(o) {\n        return typeof o;\n    } : function(o) {\n        return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n    }, _typeof(o);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90eXBlb2YuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLFNBQVNBLFFBQVFDLENBQUM7SUFDaEI7SUFFQSxPQUFPRCxVQUFVLGNBQWMsT0FBT0UsVUFBVSxZQUFZLE9BQU9BLE9BQU9DLFFBQVEsR0FBRyxTQUFVRixDQUFDO1FBQzlGLE9BQU8sT0FBT0E7SUFDaEIsSUFBSSxTQUFVQSxDQUFDO1FBQ2IsT0FBT0EsS0FBSyxjQUFjLE9BQU9DLFVBQVVELEVBQUVHLFdBQVcsS0FBS0YsVUFBVUQsTUFBTUMsT0FBT0csU0FBUyxHQUFHLFdBQVcsT0FBT0o7SUFDcEgsR0FBR0QsUUFBUUM7QUFDYjtBQUM4QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdHlwZW9mLmpzP2IwZmEiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gX3R5cGVvZihvKSB7XG4gIFwiQGJhYmVsL2hlbHBlcnMgLSB0eXBlb2ZcIjtcblxuICByZXR1cm4gX3R5cGVvZiA9IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIFwic3ltYm9sXCIgPT0gdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA/IGZ1bmN0aW9uIChvKSB7XG4gICAgcmV0dXJuIHR5cGVvZiBvO1xuICB9IDogZnVuY3Rpb24gKG8pIHtcbiAgICByZXR1cm4gbyAmJiBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBvLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgbyAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2YgbztcbiAgfSwgX3R5cGVvZihvKTtcbn1cbmV4cG9ydCB7IF90eXBlb2YgYXMgZGVmYXVsdCB9OyJdLCJuYW1lcyI6WyJfdHlwZW9mIiwibyIsIlN5bWJvbCIsIml0ZXJhdG9yIiwiY29uc3RydWN0b3IiLCJwcm90b3R5cGUiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@babel/runtime/helpers/esm/typeof.js\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["main-app"], function() { return __webpack_exec__("(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%2FUsers%2Fwx%2FDesktop%2Fweb%2Fnewbuild%2Fapp%2Fadmin%2Faccounts%2Fpage.tsx&server=false!"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);